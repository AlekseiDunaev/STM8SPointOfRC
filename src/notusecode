/*
// write multiple bytes
void uart_send_n_byte(uint8_t* data, uint8_t len)
{
	uint16_t count = 0;
	UART2_ITConfig(UART2_IT_TXE, DISABLE);

	 // Prepare to write data buffer (copy from user data area to serial port write buffer, initialize index value, etc.)
	memcpy(write_buffer, data, len);
	write_idx = 0;
	write_len = len;

	 // write interrupt
	UART2_ITConfig(UART2_IT_TXE, ENABLE);
	
	 while(!write_ok) { // Wait for the write to complete (synchronous processing)
		count++;
		 if( count >= 10000 ) { // Simple timeout processing, no timeout can be removed
			write_idx = 0;
			write_len = 0;
			break;
		}
	}
	 write_ok = 0; // Write complete, reset write complete flag
	return;
}

// read multiple bytes
void  uart_read_n_byte(uint8_t* data, uint8_t len)
{
	 // turn off interrupt
	UART2_ITConfig(UART2_IT_RXNE_OR, DISABLE);

	 // Clear the read buffer (reset the read index value)
	read_idx = 0;
	read_len = len;

	 // open read interrupt
	UART2_ITConfig(UART2_IT_RXNE_OR, ENABLE);
	
	 while(!read_ok); // Wait for the read operation to complete (synchronization processing), add timeout processing, refer to the above write operation
	 read_ok = 0; // write complete, reset write complete flag
	 memcpy(data, read_buffer, read_len); // copy data to user buffer
	return;
}
*/

