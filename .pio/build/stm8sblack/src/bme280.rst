                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module bme280
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_Read_Bytes
                                     12 	.globl _I2C_Read_Byte
                                     13 	.globl _I2C_Send_Bytes
                                     14 	.globl _GPIO_WriteLow
                                     15 	.globl _GPIO_WriteHigh
                                     16 	.globl _temper_int
                                     17 	.globl _Registers
                                     18 	.globl _CalibData
                                     19 	.globl _Error
                                     20 	.globl _BME280_Setup
                                     21 	.globl _BME280_WriteReg
                                     22 	.globl _BME280_ReadReg
                                     23 	.globl _BME280_ReadReg_U16
                                     24 	.globl _BME280_ReadReg_LE_U16
                                     25 	.globl _BME280_ReadReg_U24
                                     26 	.globl _BME280_ReadReg_LE_U24
                                     27 	.globl _BME280_ReadReg_S16
                                     28 	.globl _BME280_ReadReg_LE_S16
                                     29 	.globl _BME280_ReadRegisters
                                     30 	.globl _BME280_ReadStatus
                                     31 	.globl _BME280_ReadCoefficients
                                     32 	.globl _BME280_SetStandby
                                     33 	.globl _BME280_SetFilter
                                     34 	.globl _BME280_SetOversamplingTemper
                                     35 	.globl _BME280_SetOversamplingPressure
                                     36 	.globl _BME280_SetOversamplingHum
                                     37 	.globl _BME280_SetMode
                                     38 	.globl _BME280_ReadTemperature
                                     39 	.globl _BME280_ReadPressure
                                     40 	.globl _BME280_ReadHumidity
                                     41 	.globl _BME280_ReadAltitude
                                     42 ;--------------------------------------------------------
                                     43 ; ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
      000001                         46 _CalibData::
      000001                         47 	.ds 33
      000022                         48 _Registers::
      000022                         49 	.ds 10
      00002C                         50 _temper_int::
      00002C                         51 	.ds 4
                                     52 ;--------------------------------------------------------
                                     53 ; ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area INITIALIZED
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area DABS (ABS)
                                     60 
                                     61 ; default segment ordering for linker
                                     62 	.area HOME
                                     63 	.area GSINIT
                                     64 	.area GSFINAL
                                     65 	.area CONST
                                     66 	.area INITIALIZER
                                     67 	.area CODE
                                     68 
                                     69 ;--------------------------------------------------------
                                     70 ; global & static initialisations
                                     71 ;--------------------------------------------------------
                                     72 	.area HOME
                                     73 	.area GSINIT
                                     74 	.area GSFINAL
                                     75 	.area GSINIT
                                     76 ;--------------------------------------------------------
                                     77 ; Home
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME
                                     80 	.area HOME
                                     81 ;--------------------------------------------------------
                                     82 ; code
                                     83 ;--------------------------------------------------------
                                     84 	.area CODE
                                     85 ;	src\bme280.c: 18: void Error(void) {
                                     86 ;	-----------------------------------------
                                     87 ;	 function Error
                                     88 ;	-----------------------------------------
      009ACB                         89 _Error:
                                     90 ;	src\bme280.c: 19: LED_OFF;
      009ACB A6 20            [ 1]   91 	ld	a, #0x20
      009ACD AE 50 14         [ 2]   92 	ldw	x, #0x5014
                                     93 ;	src\bme280.c: 20: }
      009AD0 CC 8A C9         [ 2]   94 	jp	_GPIO_WriteHigh
                                     95 ;	src\bme280.c: 22: void BME280_Setup(void) {
                                     96 ;	-----------------------------------------
                                     97 ;	 function BME280_Setup
                                     98 ;	-----------------------------------------
      009AD3                         99 _BME280_Setup:
                                    100 ;	src\bme280.c: 25: uint8_t res = BME280_ReadReg(BME280_REG_ID);
      009AD3 A6 D0            [ 1]  101 	ld	a, #0xd0
      009AD5 CD 9B 34         [ 4]  102 	call	_BME280_ReadReg
                                    103 ;	src\bme280.c: 30: if (res != BME280_ID) {
      009AD8 A1 60            [ 1]  104 	cp	a, #0x60
      009ADA 27 03            [ 1]  105 	jreq	00102$
                                    106 ;	src\bme280.c: 31: Error();
                                    107 ;	src\bme280.c: 32: return;
      009ADC CC 9A CB         [ 2]  108 	jp	_Error
      009ADF                        109 00102$:
                                    110 ;	src\bme280.c: 35: BME280_WriteReg(BME280_REG_SOFTRESET, BME280_SOFTRESET_VALUE);
      009ADF 4B B6            [ 1]  111 	push	#0xb6
      009AE1 A6 E0            [ 1]  112 	ld	a, #0xe0
      009AE3 CD 9B 1F         [ 4]  113 	call	_BME280_WriteReg
                                    114 ;	src\bme280.c: 36: while (BME280_ReadStatus() & BME280_STATUS_IM_UPDATE);
      009AE6                        115 00103$:
      009AE6 CD 9E D0         [ 4]  116 	call	_BME280_ReadStatus
      009AE9 44               [ 1]  117 	srl	a
      009AEA 25 FA            [ 1]  118 	jrc	00103$
                                    119 ;	src\bme280.c: 38: BME280_ReadCoefficients();
      009AEC CD 9E D8         [ 4]  120 	call	_BME280_ReadCoefficients
                                    121 ;	src\bme280.c: 39: BME280_SetStandby(BME280_STBY_1000);
      009AEF A6 A0            [ 1]  122 	ld	a, #0xa0
      009AF1 CD 9F 9D         [ 4]  123 	call	_BME280_SetStandby
                                    124 ;	src\bme280.c: 40: BME280_SetFilter(BME280_FILTER_4);
      009AF4 A6 08            [ 1]  125 	ld	a, #0x08
      009AF6 CD 9F B7         [ 4]  126 	call	_BME280_SetFilter
                                    127 ;	src\bme280.c: 41: BME280_SetOversamplingTemper(BME280_OSRS_T_x4);
      009AF9 A6 60            [ 1]  128 	ld	a, #0x60
      009AFB CD 9F D1         [ 4]  129 	call	_BME280_SetOversamplingTemper
                                    130 ;	src\bme280.c: 42: BME280_SetOversamplingPressure(BME280_OSRS_P_x2);
      009AFE A6 08            [ 1]  131 	ld	a, #0x08
      009B00 CD 9F EB         [ 4]  132 	call	_BME280_SetOversamplingPressure
                                    133 ;	src\bme280.c: 43: BME280_SetOversamplingHum(BME280_OSRS_H_x1);
      009B03 A6 01            [ 1]  134 	ld	a, #0x01
      009B05 CD A0 05         [ 4]  135 	call	_BME280_SetOversamplingHum
                                    136 ;	src\bme280.c: 45: value32 = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      009B08 A6 F4            [ 1]  137 	ld	a, #0xf4
      009B0A CD 9B 34         [ 4]  138 	call	_BME280_ReadReg
                                    139 ;	src\bme280.c: 46: value32 |= BME280_ReadReg(BME280_REG_CTRL_HUM) << 8;
      009B0D A6 F2            [ 1]  140 	ld	a, #0xf2
      009B0F CD 9B 34         [ 4]  141 	call	_BME280_ReadReg
                                    142 ;	src\bme280.c: 59: BME280_SetMode(BME280_MODE_FORCED);
      009B12 A6 01            [ 1]  143 	ld	a, #0x01
      009B14 CD A0 2A         [ 4]  144 	call	_BME280_SetMode
                                    145 ;	src\bme280.c: 62: LED_ON;
      009B17 A6 20            [ 1]  146 	ld	a, #0x20
      009B19 AE 50 14         [ 2]  147 	ldw	x, #0x5014
                                    148 ;	src\bme280.c: 63: }
      009B1C CC 8A D2         [ 2]  149 	jp	_GPIO_WriteLow
                                    150 ;	src\bme280.c: 65: void BME280_WriteReg(uint8_t iReg, uint8_t iValue) {
                                    151 ;	-----------------------------------------
                                    152 ;	 function BME280_WriteReg
                                    153 ;	-----------------------------------------
      009B1F                        154 _BME280_WriteReg:
      009B1F 89               [ 2]  155 	pushw	x
                                    156 ;	src\bme280.c: 67: iData[0] = iReg;
      009B20 96               [ 1]  157 	ldw	x, sp
      009B21 5C               [ 1]  158 	incw	x
      009B22 F7               [ 1]  159 	ld	(x), a
                                    160 ;	src\bme280.c: 68: iData[1] = iValue;
      009B23 7B 05            [ 1]  161 	ld	a, (0x05, sp)
      009B25 6B 02            [ 1]  162 	ld	(0x02, sp), a
                                    163 ;	src\bme280.c: 69: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009B27 89               [ 2]  164 	pushw	x
      009B28 AE 00 02         [ 2]  165 	ldw	x, #0x0002
      009B2B A6 EE            [ 1]  166 	ld	a, #0xee
      009B2D CD A7 7E         [ 4]  167 	call	_I2C_Send_Bytes
                                    168 ;	src\bme280.c: 70: }
      009B30 85               [ 2]  169 	popw	x
      009B31 85               [ 2]  170 	popw	x
      009B32 84               [ 1]  171 	pop	a
      009B33 FC               [ 2]  172 	jp	(x)
                                    173 ;	src\bme280.c: 72: uint8_t BME280_ReadReg(uint8_t iReg) {
                                    174 ;	-----------------------------------------
                                    175 ;	 function BME280_ReadReg
                                    176 ;	-----------------------------------------
      009B34                        177 _BME280_ReadReg:
      009B34 88               [ 1]  178 	push	a
                                    179 ;	src\bme280.c: 74: iData[0] = iReg;
      009B35 96               [ 1]  180 	ldw	x, sp
      009B36 5C               [ 1]  181 	incw	x
      009B37 F7               [ 1]  182 	ld	(x), a
                                    183 ;	src\bme280.c: 75: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009B38 89               [ 2]  184 	pushw	x
      009B39 5F               [ 1]  185 	clrw	x
      009B3A 5C               [ 1]  186 	incw	x
      009B3B A6 EE            [ 1]  187 	ld	a, #0xee
      009B3D CD A7 7E         [ 4]  188 	call	_I2C_Send_Bytes
                                    189 ;	src\bme280.c: 76: return I2C_Read_Byte(BME280_ADDRESS);
      009B40 A6 EE            [ 1]  190 	ld	a, #0xee
      009B42 CD A8 BF         [ 4]  191 	call	_I2C_Read_Byte
                                    192 ;	src\bme280.c: 77: }
      009B45 5B 01            [ 2]  193 	addw	sp, #1
      009B47 81               [ 4]  194 	ret
                                    195 ;	src\bme280.c: 79: void BME280_ReadReg_U16(uint8_t iReg, uint16_t *iValue) {
                                    196 ;	-----------------------------------------
                                    197 ;	 function BME280_ReadReg_U16
                                    198 ;	-----------------------------------------
      009B48                        199 _BME280_ReadReg_U16:
      009B48 52 07            [ 2]  200 	sub	sp, #7
      009B4A 1F 06            [ 2]  201 	ldw	(0x06, sp), x
                                    202 ;	src\bme280.c: 82: iData[0] = iReg;
      009B4C 96               [ 1]  203 	ldw	x, sp
      009B4D 5C               [ 1]  204 	incw	x
      009B4E F7               [ 1]  205 	ld	(x), a
                                    206 ;	src\bme280.c: 83: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009B4F 89               [ 2]  207 	pushw	x
      009B50 5F               [ 1]  208 	clrw	x
      009B51 5C               [ 1]  209 	incw	x
      009B52 A6 EE            [ 1]  210 	ld	a, #0xee
      009B54 CD A7 7E         [ 4]  211 	call	_I2C_Send_Bytes
                                    212 ;	src\bme280.c: 84: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009B57 96               [ 1]  213 	ldw	x, sp
      009B58 5C               [ 1]  214 	incw	x
      009B59 5C               [ 1]  215 	incw	x
      009B5A 89               [ 2]  216 	pushw	x
      009B5B AE 00 02         [ 2]  217 	ldw	x, #0x0002
      009B5E A6 EE            [ 1]  218 	ld	a, #0xee
      009B60 CD A9 BE         [ 4]  219 	call	_I2C_Read_Bytes
                                    220 ;	src\bme280.c: 85: *iValue = iRes[0];
      009B63 7B 02            [ 1]  221 	ld	a, (0x02, sp)
      009B65 90 5F            [ 1]  222 	clrw	y
      009B67 90 97            [ 1]  223 	ld	yl, a
      009B69 1E 06            [ 2]  224 	ldw	x, (0x06, sp)
      009B6B FF               [ 2]  225 	ldw	(x), y
                                    226 ;	src\bme280.c: 86: *iValue <<= 8;
      009B6C 4F               [ 1]  227 	clr	a
      009B6D 90 02            [ 1]  228 	rlwa	y
      009B6F 1E 06            [ 2]  229 	ldw	x, (0x06, sp)
      009B71 FF               [ 2]  230 	ldw	(x), y
                                    231 ;	src\bme280.c: 87: *iValue += iRes[1];
      009B72 7B 03            [ 1]  232 	ld	a, (0x03, sp)
      009B74 5F               [ 1]  233 	clrw	x
      009B75 97               [ 1]  234 	ld	xl, a
      009B76 1F 04            [ 2]  235 	ldw	(0x04, sp), x
      009B78 72 F9 04         [ 2]  236 	addw	y, (0x04, sp)
      009B7B 1E 06            [ 2]  237 	ldw	x, (0x06, sp)
      009B7D FF               [ 2]  238 	ldw	(x), y
                                    239 ;	src\bme280.c: 88: }
      009B7E 5B 07            [ 2]  240 	addw	sp, #7
      009B80 81               [ 4]  241 	ret
                                    242 ;	src\bme280.c: 90: void BME280_ReadReg_LE_U16(uint8_t iReg, uint16_t *iValue) {
                                    243 ;	-----------------------------------------
                                    244 ;	 function BME280_ReadReg_LE_U16
                                    245 ;	-----------------------------------------
      009B81                        246 _BME280_ReadReg_LE_U16:
      009B81 52 09            [ 2]  247 	sub	sp, #9
      009B83 1F 08            [ 2]  248 	ldw	(0x08, sp), x
                                    249 ;	src\bme280.c: 93: iData[0] = iReg;
      009B85 96               [ 1]  250 	ldw	x, sp
      009B86 5C               [ 1]  251 	incw	x
      009B87 F7               [ 1]  252 	ld	(x), a
                                    253 ;	src\bme280.c: 94: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009B88 89               [ 2]  254 	pushw	x
      009B89 5F               [ 1]  255 	clrw	x
      009B8A 5C               [ 1]  256 	incw	x
      009B8B A6 EE            [ 1]  257 	ld	a, #0xee
      009B8D CD A7 7E         [ 4]  258 	call	_I2C_Send_Bytes
                                    259 ;	src\bme280.c: 95: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009B90 96               [ 1]  260 	ldw	x, sp
      009B91 5C               [ 1]  261 	incw	x
      009B92 5C               [ 1]  262 	incw	x
      009B93 89               [ 2]  263 	pushw	x
      009B94 AE 00 02         [ 2]  264 	ldw	x, #0x0002
      009B97 A6 EE            [ 1]  265 	ld	a, #0xee
      009B99 CD A9 BE         [ 4]  266 	call	_I2C_Read_Bytes
                                    267 ;	src\bme280.c: 96: *iValue = iRes[0];
      009B9C 7B 02            [ 1]  268 	ld	a, (0x02, sp)
      009B9E 90 5F            [ 1]  269 	clrw	y
      009BA0 90 97            [ 1]  270 	ld	yl, a
      009BA2 1E 08            [ 2]  271 	ldw	x, (0x08, sp)
      009BA4 FF               [ 2]  272 	ldw	(x), y
                                    273 ;	src\bme280.c: 97: *iValue <<= 8;
      009BA5 4F               [ 1]  274 	clr	a
      009BA6 90 02            [ 1]  275 	rlwa	y
      009BA8 1E 08            [ 2]  276 	ldw	x, (0x08, sp)
      009BAA FF               [ 2]  277 	ldw	(x), y
                                    278 ;	src\bme280.c: 98: *iValue += iRes[1];
      009BAB 7B 03            [ 1]  279 	ld	a, (0x03, sp)
      009BAD 5F               [ 1]  280 	clrw	x
      009BAE 97               [ 1]  281 	ld	xl, a
      009BAF 1F 06            [ 2]  282 	ldw	(0x06, sp), x
      009BB1 72 F9 06         [ 2]  283 	addw	y, (0x06, sp)
      009BB4 1E 08            [ 2]  284 	ldw	x, (0x08, sp)
      009BB6 FF               [ 2]  285 	ldw	(x), y
                                    286 ;	src\bme280.c: 99: *(uint16_t *)iValue = be16toword(*(uint16_t *) iValue);
      009BB7 93               [ 1]  287 	ldw	x, y
      009BB8 0F 05            [ 1]  288 	clr	(0x05, sp)
      009BBA 90 9F            [ 1]  289 	ld	a, yl
      009BBC 0F 06            [ 1]  290 	clr	(0x06, sp)
      009BBE 1A 06            [ 1]  291 	or	a, (0x06, sp)
      009BC0 90 95            [ 1]  292 	ld	yh, a
      009BC2 9E               [ 1]  293 	ld	a, xh
      009BC3 1A 05            [ 1]  294 	or	a, (0x05, sp)
      009BC5 90 97            [ 1]  295 	ld	yl, a
      009BC7 1E 08            [ 2]  296 	ldw	x, (0x08, sp)
      009BC9 FF               [ 2]  297 	ldw	(x), y
                                    298 ;	src\bme280.c: 100: }
      009BCA 5B 09            [ 2]  299 	addw	sp, #9
      009BCC 81               [ 4]  300 	ret
                                    301 ;	src\bme280.c: 102: void BME280_ReadReg_U24(uint8_t iReg, uint32_t *iValue) {
                                    302 ;	-----------------------------------------
                                    303 ;	 function BME280_ReadReg_U24
                                    304 ;	-----------------------------------------
      009BCD                        305 _BME280_ReadReg_U24:
      009BCD 52 0E            [ 2]  306 	sub	sp, #14
      009BCF 1F 0D            [ 2]  307 	ldw	(0x0d, sp), x
                                    308 ;	src\bme280.c: 105: iData[0] = iReg;
      009BD1 96               [ 1]  309 	ldw	x, sp
      009BD2 5C               [ 1]  310 	incw	x
      009BD3 F7               [ 1]  311 	ld	(x), a
                                    312 ;	src\bme280.c: 106: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009BD4 89               [ 2]  313 	pushw	x
      009BD5 5F               [ 1]  314 	clrw	x
      009BD6 5C               [ 1]  315 	incw	x
      009BD7 A6 EE            [ 1]  316 	ld	a, #0xee
      009BD9 CD A7 7E         [ 4]  317 	call	_I2C_Send_Bytes
                                    318 ;	src\bme280.c: 107: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009BDC 96               [ 1]  319 	ldw	x, sp
      009BDD 5C               [ 1]  320 	incw	x
      009BDE 5C               [ 1]  321 	incw	x
      009BDF 89               [ 2]  322 	pushw	x
      009BE0 AE 00 03         [ 2]  323 	ldw	x, #0x0003
      009BE3 A6 EE            [ 1]  324 	ld	a, #0xee
      009BE5 CD A9 BE         [ 4]  325 	call	_I2C_Read_Bytes
                                    326 ;	src\bme280.c: 108: *iValue = iRes[0];
      009BE8 7B 02            [ 1]  327 	ld	a, (0x02, sp)
      009BEA 90 5F            [ 1]  328 	clrw	y
      009BEC 0F 05            [ 1]  329 	clr	(0x05, sp)
      009BEE 1E 0D            [ 2]  330 	ldw	x, (0x0d, sp)
      009BF0 E7 03            [ 1]  331 	ld	(0x3, x), a
      009BF2 EF 01            [ 2]  332 	ldw	(0x1, x), y
      009BF4 88               [ 1]  333 	push	a
      009BF5 7B 06            [ 1]  334 	ld	a, (0x06, sp)
      009BF7 F7               [ 1]  335 	ld	(x), a
      009BF8 84               [ 1]  336 	pop	a
                                    337 ;	src\bme280.c: 109: *iValue <<= 8;
      009BF9 6B 0B            [ 1]  338 	ld	(0x0b, sp), a
      009BFB 17 09            [ 2]  339 	ldw	(0x09, sp), y
      009BFD 0F 0C            [ 1]  340 	clr	(0x0c, sp)
      009BFF 1E 0D            [ 2]  341 	ldw	x, (0x0d, sp)
      009C01 16 0B            [ 2]  342 	ldw	y, (0x0b, sp)
      009C03 EF 02            [ 2]  343 	ldw	(0x2, x), y
      009C05 16 09            [ 2]  344 	ldw	y, (0x09, sp)
      009C07 FF               [ 2]  345 	ldw	(x), y
                                    346 ;	src\bme280.c: 110: *iValue += iRes[1];
      009C08 7B 03            [ 1]  347 	ld	a, (0x03, sp)
      009C0A 90 5F            [ 1]  348 	clrw	y
      009C0C 5F               [ 1]  349 	clrw	x
      009C0D 90 97            [ 1]  350 	ld	yl, a
      009C0F 72 F9 0B         [ 2]  351 	addw	y, (0x0b, sp)
      009C12 9F               [ 1]  352 	ld	a, xl
      009C13 19 0A            [ 1]  353 	adc	a, (0x0a, sp)
      009C15 88               [ 1]  354 	push	a
      009C16 9E               [ 1]  355 	ld	a, xh
      009C17 19 0A            [ 1]  356 	adc	a, (0x0a, sp)
      009C19 6B 06            [ 1]  357 	ld	(0x06, sp), a
      009C1B 84               [ 1]  358 	pop	a
      009C1C 1E 0D            [ 2]  359 	ldw	x, (0x0d, sp)
      009C1E EF 02            [ 2]  360 	ldw	(0x2, x), y
      009C20 E7 01            [ 1]  361 	ld	(0x1, x), a
      009C22 88               [ 1]  362 	push	a
      009C23 7B 06            [ 1]  363 	ld	a, (0x06, sp)
      009C25 F7               [ 1]  364 	ld	(x), a
      009C26 84               [ 1]  365 	pop	a
                                    366 ;	src\bme280.c: 111: *iValue <<= 8;
      009C27 17 0A            [ 2]  367 	ldw	(0x0a, sp), y
      009C29 6B 09            [ 1]  368 	ld	(0x09, sp), a
      009C2B 0F 0C            [ 1]  369 	clr	(0x0c, sp)
      009C2D 1E 0D            [ 2]  370 	ldw	x, (0x0d, sp)
      009C2F 16 0B            [ 2]  371 	ldw	y, (0x0b, sp)
      009C31 EF 02            [ 2]  372 	ldw	(0x2, x), y
      009C33 16 09            [ 2]  373 	ldw	y, (0x09, sp)
      009C35 FF               [ 2]  374 	ldw	(x), y
                                    375 ;	src\bme280.c: 112: *iValue += iRes[2];
      009C36 7B 04            [ 1]  376 	ld	a, (0x04, sp)
      009C38 90 5F            [ 1]  377 	clrw	y
      009C3A 5F               [ 1]  378 	clrw	x
      009C3B 90 97            [ 1]  379 	ld	yl, a
      009C3D 72 F9 0B         [ 2]  380 	addw	y, (0x0b, sp)
      009C40 9F               [ 1]  381 	ld	a, xl
      009C41 19 0A            [ 1]  382 	adc	a, (0x0a, sp)
      009C43 88               [ 1]  383 	push	a
      009C44 9E               [ 1]  384 	ld	a, xh
      009C45 19 0A            [ 1]  385 	adc	a, (0x0a, sp)
      009C47 6B 06            [ 1]  386 	ld	(0x06, sp), a
      009C49 84               [ 1]  387 	pop	a
      009C4A 1E 0D            [ 2]  388 	ldw	x, (0x0d, sp)
      009C4C EF 02            [ 2]  389 	ldw	(0x2, x), y
      009C4E E7 01            [ 1]  390 	ld	(0x1, x), a
      009C50 88               [ 1]  391 	push	a
      009C51 7B 06            [ 1]  392 	ld	a, (0x06, sp)
      009C53 F7               [ 1]  393 	ld	(x), a
      009C54 84               [ 1]  394 	pop	a
                                    395 ;	src\bme280.c: 113: *(uint32_t*)iValue &= 0x00FFFFFF;
      009C55 6B 0A            [ 1]  396 	ld	(0x0a, sp), a
      009C57 0F 09            [ 1]  397 	clr	(0x09, sp)
      009C59 1E 0D            [ 2]  398 	ldw	x, (0x0d, sp)
      009C5B EF 02            [ 2]  399 	ldw	(0x2, x), y
      009C5D 16 09            [ 2]  400 	ldw	y, (0x09, sp)
      009C5F FF               [ 2]  401 	ldw	(x), y
                                    402 ;	src\bme280.c: 114: }
      009C60 5B 0E            [ 2]  403 	addw	sp, #14
      009C62 81               [ 4]  404 	ret
                                    405 ;	src\bme280.c: 116: void BME280_ReadReg_LE_U24(uint8_t iReg, uint32_t *iValue) {
                                    406 ;	-----------------------------------------
                                    407 ;	 function BME280_ReadReg_LE_U24
                                    408 ;	-----------------------------------------
      009C63                        409 _BME280_ReadReg_LE_U24:
      009C63 52 16            [ 2]  410 	sub	sp, #22
      009C65 1F 15            [ 2]  411 	ldw	(0x15, sp), x
                                    412 ;	src\bme280.c: 119: iData[0] = iReg;
      009C67 96               [ 1]  413 	ldw	x, sp
      009C68 5C               [ 1]  414 	incw	x
      009C69 F7               [ 1]  415 	ld	(x), a
                                    416 ;	src\bme280.c: 120: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009C6A 89               [ 2]  417 	pushw	x
      009C6B 5F               [ 1]  418 	clrw	x
      009C6C 5C               [ 1]  419 	incw	x
      009C6D A6 EE            [ 1]  420 	ld	a, #0xee
      009C6F CD A7 7E         [ 4]  421 	call	_I2C_Send_Bytes
                                    422 ;	src\bme280.c: 121: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009C72 96               [ 1]  423 	ldw	x, sp
      009C73 5C               [ 1]  424 	incw	x
      009C74 5C               [ 1]  425 	incw	x
      009C75 89               [ 2]  426 	pushw	x
      009C76 AE 00 03         [ 2]  427 	ldw	x, #0x0003
      009C79 A6 EE            [ 1]  428 	ld	a, #0xee
      009C7B CD A9 BE         [ 4]  429 	call	_I2C_Read_Bytes
                                    430 ;	src\bme280.c: 122: *iValue = iRes[0];
      009C7E 7B 02            [ 1]  431 	ld	a, (0x02, sp)
      009C80 90 5F            [ 1]  432 	clrw	y
      009C82 0F 0D            [ 1]  433 	clr	(0x0d, sp)
      009C84 1E 15            [ 2]  434 	ldw	x, (0x15, sp)
      009C86 E7 03            [ 1]  435 	ld	(0x3, x), a
      009C88 EF 01            [ 2]  436 	ldw	(0x1, x), y
      009C8A 88               [ 1]  437 	push	a
      009C8B 7B 0E            [ 1]  438 	ld	a, (0x0e, sp)
      009C8D F7               [ 1]  439 	ld	(x), a
      009C8E 84               [ 1]  440 	pop	a
                                    441 ;	src\bme280.c: 123: *iValue <<= 8;
      009C8F 6B 13            [ 1]  442 	ld	(0x13, sp), a
      009C91 17 11            [ 2]  443 	ldw	(0x11, sp), y
      009C93 0F 14            [ 1]  444 	clr	(0x14, sp)
      009C95 1E 15            [ 2]  445 	ldw	x, (0x15, sp)
      009C97 16 13            [ 2]  446 	ldw	y, (0x13, sp)
      009C99 EF 02            [ 2]  447 	ldw	(0x2, x), y
      009C9B 16 11            [ 2]  448 	ldw	y, (0x11, sp)
      009C9D FF               [ 2]  449 	ldw	(x), y
                                    450 ;	src\bme280.c: 124: *iValue += iRes[1];
      009C9E 7B 03            [ 1]  451 	ld	a, (0x03, sp)
      009CA0 90 5F            [ 1]  452 	clrw	y
      009CA2 5F               [ 1]  453 	clrw	x
      009CA3 90 97            [ 1]  454 	ld	yl, a
      009CA5 72 F9 13         [ 2]  455 	addw	y, (0x13, sp)
      009CA8 9F               [ 1]  456 	ld	a, xl
      009CA9 19 12            [ 1]  457 	adc	a, (0x12, sp)
      009CAB 88               [ 1]  458 	push	a
      009CAC 9E               [ 1]  459 	ld	a, xh
      009CAD 19 12            [ 1]  460 	adc	a, (0x12, sp)
      009CAF 6B 0E            [ 1]  461 	ld	(0x0e, sp), a
      009CB1 84               [ 1]  462 	pop	a
      009CB2 1E 15            [ 2]  463 	ldw	x, (0x15, sp)
      009CB4 EF 02            [ 2]  464 	ldw	(0x2, x), y
      009CB6 E7 01            [ 1]  465 	ld	(0x1, x), a
      009CB8 88               [ 1]  466 	push	a
      009CB9 7B 0E            [ 1]  467 	ld	a, (0x0e, sp)
      009CBB F7               [ 1]  468 	ld	(x), a
      009CBC 84               [ 1]  469 	pop	a
                                    470 ;	src\bme280.c: 125: *iValue <<= 8;
      009CBD 17 12            [ 2]  471 	ldw	(0x12, sp), y
      009CBF 6B 11            [ 1]  472 	ld	(0x11, sp), a
      009CC1 0F 14            [ 1]  473 	clr	(0x14, sp)
      009CC3 1E 15            [ 2]  474 	ldw	x, (0x15, sp)
      009CC5 16 13            [ 2]  475 	ldw	y, (0x13, sp)
      009CC7 EF 02            [ 2]  476 	ldw	(0x2, x), y
      009CC9 16 11            [ 2]  477 	ldw	y, (0x11, sp)
      009CCB FF               [ 2]  478 	ldw	(x), y
                                    479 ;	src\bme280.c: 126: *iValue += iRes[2];
      009CCC 7B 04            [ 1]  480 	ld	a, (0x04, sp)
      009CCE 90 5F            [ 1]  481 	clrw	y
      009CD0 5F               [ 1]  482 	clrw	x
      009CD1 90 97            [ 1]  483 	ld	yl, a
      009CD3 72 F9 13         [ 2]  484 	addw	y, (0x13, sp)
      009CD6 9F               [ 1]  485 	ld	a, xl
      009CD7 19 12            [ 1]  486 	adc	a, (0x12, sp)
      009CD9 6B 06            [ 1]  487 	ld	(0x06, sp), a
      009CDB 9E               [ 1]  488 	ld	a, xh
      009CDC 19 11            [ 1]  489 	adc	a, (0x11, sp)
      009CDE 6B 05            [ 1]  490 	ld	(0x05, sp), a
      009CE0 1E 15            [ 2]  491 	ldw	x, (0x15, sp)
      009CE2 EF 02            [ 2]  492 	ldw	(0x2, x), y
      009CE4 7B 06            [ 1]  493 	ld	a, (0x06, sp)
      009CE6 E7 01            [ 1]  494 	ld	(0x1, x), a
      009CE8 7B 05            [ 1]  495 	ld	a, (0x05, sp)
      009CEA F7               [ 1]  496 	ld	(x), a
                                    497 ;	src\bme280.c: 127: *(uint32_t*)iValue = be24toword(*(uint32_t *)iValue) & 0x00FFFFFF;
      009CEB 7B 06            [ 1]  498 	ld	a, (0x06, sp)
      009CED 97               [ 1]  499 	ld	xl, a
      009CEE 0F 0C            [ 1]  500 	clr	(0x0c, sp)
      009CF0 02               [ 1]  501 	rlwa	x
      009CF1 90 9E            [ 1]  502 	ld	a, yh
      009CF3 01               [ 1]  503 	rrwa	x
      009CF4 4F               [ 1]  504 	clr	a
      009CF5 0F 09            [ 1]  505 	clr	(0x09, sp)
      009CF7 0F 0F            [ 1]  506 	clr	(0x0f, sp)
      009CF9 0F 0E            [ 1]  507 	clr	(0x0e, sp)
      009CFB 0F 0D            [ 1]  508 	clr	(0x0d, sp)
      009CFD 1A 0E            [ 1]  509 	or	a, (0x0e, sp)
      009CFF 6B 12            [ 1]  510 	ld	(0x12, sp), a
      009D01 9F               [ 1]  511 	ld	a, xl
      009D02 1A 0C            [ 1]  512 	or	a, (0x0c, sp)
      009D04 97               [ 1]  513 	ld	xl, a
      009D05 89               [ 2]  514 	pushw	x
      009D06 7B 11            [ 1]  515 	ld	a, (0x11, sp)
      009D08 1A 01            [ 1]  516 	or	a, (1, sp)
      009D0A 85               [ 2]  517 	popw	x
      009D0B 95               [ 1]  518 	ld	xh, a
      009D0C 7B 0D            [ 1]  519 	ld	a, (0x0d, sp)
      009D0E 1A 09            [ 1]  520 	or	a, (0x09, sp)
      009D10 0F 10            [ 1]  521 	clr	(0x10, sp)
      009D12 0F 0F            [ 1]  522 	clr	(0x0f, sp)
      009D14 88               [ 1]  523 	push	a
      009D15 0F 0D            [ 1]  524 	clr	(0x0d, sp)
      009D17 0F 0C            [ 1]  525 	clr	(0x0c, sp)
      009D19 0F 0A            [ 1]  526 	clr	(0x0a, sp)
      009D1B 84               [ 1]  527 	pop	a
      009D1C 1A 09            [ 1]  528 	or	a, (0x09, sp)
      009D1E 90 95            [ 1]  529 	ld	yh, a
      009D20 9F               [ 1]  530 	ld	a, xl
      009D21 1A 0C            [ 1]  531 	or	a, (0x0c, sp)
      009D23 02               [ 1]  532 	rlwa	x
      009D24 1A 0B            [ 1]  533 	or	a, (0x0b, sp)
      009D26 95               [ 1]  534 	ld	xh, a
      009D27 90 89            [ 2]  535 	pushw	y
      009D29 7B 14            [ 1]  536 	ld	a, (0x14, sp)
      009D2B 1A 02            [ 1]  537 	or	a, (2, sp)
      009D2D 90 85            [ 2]  538 	popw	y
      009D2F 6B 0E            [ 1]  539 	ld	(0x0e, sp), a
      009D31 6B 12            [ 1]  540 	ld	(0x12, sp), a
      009D33 0F 11            [ 1]  541 	clr	(0x11, sp)
      009D35 16 15            [ 2]  542 	ldw	y, (0x15, sp)
      009D37 90 EF 02         [ 2]  543 	ldw	(0x2, y), x
      009D3A 1E 11            [ 2]  544 	ldw	x, (0x11, sp)
      009D3C 90 FF            [ 2]  545 	ldw	(y), x
                                    546 ;	src\bme280.c: 128: }
      009D3E 5B 16            [ 2]  547 	addw	sp, #22
      009D40 81               [ 4]  548 	ret
                                    549 ;	src\bme280.c: 130: void BME280_ReadReg_S16(uint8_t iReg, int16_t *iValue) {
                                    550 ;	-----------------------------------------
                                    551 ;	 function BME280_ReadReg_S16
                                    552 ;	-----------------------------------------
      009D41                        553 _BME280_ReadReg_S16:
      009D41 52 07            [ 2]  554 	sub	sp, #7
      009D43 1F 06            [ 2]  555 	ldw	(0x06, sp), x
                                    556 ;	src\bme280.c: 133: iData[0] = iReg;
      009D45 96               [ 1]  557 	ldw	x, sp
      009D46 5C               [ 1]  558 	incw	x
      009D47 F7               [ 1]  559 	ld	(x), a
                                    560 ;	src\bme280.c: 134: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009D48 89               [ 2]  561 	pushw	x
      009D49 5F               [ 1]  562 	clrw	x
      009D4A 5C               [ 1]  563 	incw	x
      009D4B A6 EE            [ 1]  564 	ld	a, #0xee
      009D4D CD A7 7E         [ 4]  565 	call	_I2C_Send_Bytes
                                    566 ;	src\bme280.c: 135: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009D50 96               [ 1]  567 	ldw	x, sp
      009D51 5C               [ 1]  568 	incw	x
      009D52 5C               [ 1]  569 	incw	x
      009D53 89               [ 2]  570 	pushw	x
      009D54 AE 00 02         [ 2]  571 	ldw	x, #0x0002
      009D57 A6 EE            [ 1]  572 	ld	a, #0xee
      009D59 CD A9 BE         [ 4]  573 	call	_I2C_Read_Bytes
                                    574 ;	src\bme280.c: 136: *iValue = iRes[0];
      009D5C 7B 02            [ 1]  575 	ld	a, (0x02, sp)
      009D5E 5F               [ 1]  576 	clrw	x
      009D5F 97               [ 1]  577 	ld	xl, a
      009D60 16 06            [ 2]  578 	ldw	y, (0x06, sp)
      009D62 90 FF            [ 2]  579 	ldw	(y), x
                                    580 ;	src\bme280.c: 137: *iValue <<= 8;
      009D64 4F               [ 1]  581 	clr	a
      009D65 02               [ 1]  582 	rlwa	x
      009D66 16 06            [ 2]  583 	ldw	y, (0x06, sp)
      009D68 90 FF            [ 2]  584 	ldw	(y), x
                                    585 ;	src\bme280.c: 138: *iValue += iRes[1];
      009D6A 7B 03            [ 1]  586 	ld	a, (0x03, sp)
      009D6C 6B 05            [ 1]  587 	ld	(0x05, sp), a
      009D6E 0F 04            [ 1]  588 	clr	(0x04, sp)
      009D70 72 FB 04         [ 2]  589 	addw	x, (0x04, sp)
      009D73 16 06            [ 2]  590 	ldw	y, (0x06, sp)
      009D75 90 FF            [ 2]  591 	ldw	(y), x
                                    592 ;	src\bme280.c: 139: }
      009D77 5B 07            [ 2]  593 	addw	sp, #7
      009D79 81               [ 4]  594 	ret
                                    595 ;	src\bme280.c: 141: void BME280_ReadReg_LE_S16(uint8_t iReg, int16_t *iValue) {
                                    596 ;	-----------------------------------------
                                    597 ;	 function BME280_ReadReg_LE_S16
                                    598 ;	-----------------------------------------
      009D7A                        599 _BME280_ReadReg_LE_S16:
      009D7A 52 09            [ 2]  600 	sub	sp, #9
      009D7C 1F 08            [ 2]  601 	ldw	(0x08, sp), x
                                    602 ;	src\bme280.c: 144: iData[0] = iReg;
      009D7E 96               [ 1]  603 	ldw	x, sp
      009D7F 5C               [ 1]  604 	incw	x
      009D80 F7               [ 1]  605 	ld	(x), a
                                    606 ;	src\bme280.c: 145: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009D81 89               [ 2]  607 	pushw	x
      009D82 5F               [ 1]  608 	clrw	x
      009D83 5C               [ 1]  609 	incw	x
      009D84 A6 EE            [ 1]  610 	ld	a, #0xee
      009D86 CD A7 7E         [ 4]  611 	call	_I2C_Send_Bytes
                                    612 ;	src\bme280.c: 146: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009D89 96               [ 1]  613 	ldw	x, sp
      009D8A 5C               [ 1]  614 	incw	x
      009D8B 5C               [ 1]  615 	incw	x
      009D8C 89               [ 2]  616 	pushw	x
      009D8D AE 00 02         [ 2]  617 	ldw	x, #0x0002
      009D90 A6 EE            [ 1]  618 	ld	a, #0xee
      009D92 CD A9 BE         [ 4]  619 	call	_I2C_Read_Bytes
                                    620 ;	src\bme280.c: 147: *iValue = iRes[0];
      009D95 7B 02            [ 1]  621 	ld	a, (0x02, sp)
      009D97 5F               [ 1]  622 	clrw	x
      009D98 97               [ 1]  623 	ld	xl, a
      009D99 16 08            [ 2]  624 	ldw	y, (0x08, sp)
      009D9B 90 FF            [ 2]  625 	ldw	(y), x
                                    626 ;	src\bme280.c: 148: *iValue <<= 8;
      009D9D 4F               [ 1]  627 	clr	a
      009D9E 02               [ 1]  628 	rlwa	x
      009D9F 16 08            [ 2]  629 	ldw	y, (0x08, sp)
      009DA1 90 FF            [ 2]  630 	ldw	(y), x
                                    631 ;	src\bme280.c: 149: *iValue += iRes[1];
      009DA3 7B 03            [ 1]  632 	ld	a, (0x03, sp)
      009DA5 6B 07            [ 1]  633 	ld	(0x07, sp), a
      009DA7 0F 06            [ 1]  634 	clr	(0x06, sp)
      009DA9 72 FB 06         [ 2]  635 	addw	x, (0x06, sp)
      009DAC 16 08            [ 2]  636 	ldw	y, (0x08, sp)
      009DAE 90 FF            [ 2]  637 	ldw	(y), x
                                    638 ;	src\bme280.c: 150: *(int16_t *)iValue = be16toword(*(int16_t *) iValue);
      009DB0 90 93            [ 1]  639 	ldw	y, x
      009DB2 0F 05            [ 1]  640 	clr	(0x05, sp)
      009DB4 9F               [ 1]  641 	ld	a, xl
      009DB5 0F 06            [ 1]  642 	clr	(0x06, sp)
      009DB7 1A 06            [ 1]  643 	or	a, (0x06, sp)
      009DB9 95               [ 1]  644 	ld	xh, a
      009DBA 90 9E            [ 1]  645 	ld	a, yh
      009DBC 1A 05            [ 1]  646 	or	a, (0x05, sp)
      009DBE 97               [ 1]  647 	ld	xl, a
      009DBF 16 08            [ 2]  648 	ldw	y, (0x08, sp)
      009DC1 90 FF            [ 2]  649 	ldw	(y), x
                                    650 ;	src\bme280.c: 151: }
      009DC3 5B 09            [ 2]  651 	addw	sp, #9
      009DC5 81               [ 4]  652 	ret
                                    653 ;	src\bme280.c: 153: void BME280_ReadRegisters() {
                                    654 ;	-----------------------------------------
                                    655 ;	 function BME280_ReadRegisters
                                    656 ;	-----------------------------------------
      009DC6                        657 _BME280_ReadRegisters:
      009DC6 52 15            [ 2]  658 	sub	sp, #21
                                    659 ;	src\bme280.c: 154: uint8_t iData[1] = { BME280_REGISTER_PRESSUREDATA };
      009DC8 96               [ 1]  660 	ldw	x, sp
      009DC9 5C               [ 1]  661 	incw	x
      009DCA A6 F7            [ 1]  662 	ld	a, #0xf7
      009DCC F7               [ 1]  663 	ld	(x), a
                                    664 ;	src\bme280.c: 156: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009DCD 89               [ 2]  665 	pushw	x
      009DCE 5F               [ 1]  666 	clrw	x
      009DCF 5C               [ 1]  667 	incw	x
      009DD0 A6 EE            [ 1]  668 	ld	a, #0xee
      009DD2 CD A7 7E         [ 4]  669 	call	_I2C_Send_Bytes
                                    670 ;	src\bme280.c: 157: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009DD5 96               [ 1]  671 	ldw	x, sp
      009DD6 5C               [ 1]  672 	incw	x
      009DD7 5C               [ 1]  673 	incw	x
      009DD8 89               [ 2]  674 	pushw	x
      009DD9 AE 00 08         [ 2]  675 	ldw	x, #0x0008
      009DDC A6 EE            [ 1]  676 	ld	a, #0xee
      009DDE CD A9 BE         [ 4]  677 	call	_I2C_Read_Bytes
                                    678 ;	src\bme280.c: 158: Registers.pressure = iRes[0];
      009DE1 7B 02            [ 1]  679 	ld	a, (0x02, sp)
      009DE3 6B 15            [ 1]  680 	ld	(0x15, sp), a
      009DE5 5F               [ 1]  681 	clrw	x
      009DE6 1F 13            [ 2]  682 	ldw	(0x13, sp), x
      009DE8 0F 12            [ 1]  683 	clr	(0x12, sp)
      009DEA AE 00 22         [ 2]  684 	ldw	x, #(_Registers+0)
      009DED 16 14            [ 2]  685 	ldw	y, (0x14, sp)
      009DEF EF 02            [ 2]  686 	ldw	(0x2, x), y
      009DF1 16 12            [ 2]  687 	ldw	y, (0x12, sp)
      009DF3 FF               [ 2]  688 	ldw	(x), y
                                    689 ;	src\bme280.c: 160: Registers.pressure += iRes[1];
      009DF4 7B 03            [ 1]  690 	ld	a, (0x03, sp)
      009DF6 90 5F            [ 1]  691 	clrw	y
      009DF8 5F               [ 1]  692 	clrw	x
      009DF9 90 5D            [ 2]  693 	tnzw	y
      009DFB 2A 01            [ 1]  694 	jrpl	00103$
      009DFD 5A               [ 2]  695 	decw	x
      009DFE                        696 00103$:
      009DFE 90 97            [ 1]  697 	ld	yl, a
      009E00 72 F9 14         [ 2]  698 	addw	y, (0x14, sp)
      009E03 9F               [ 1]  699 	ld	a, xl
      009E04 19 13            [ 1]  700 	adc	a, (0x13, sp)
      009E06 6B 0B            [ 1]  701 	ld	(0x0b, sp), a
      009E08 9E               [ 1]  702 	ld	a, xh
      009E09 19 12            [ 1]  703 	adc	a, (0x12, sp)
      009E0B 6B 0A            [ 1]  704 	ld	(0x0a, sp), a
      009E0D AE 00 22         [ 2]  705 	ldw	x, #(_Registers+0)
      009E10 EF 02            [ 2]  706 	ldw	(0x2, x), y
      009E12 7B 0B            [ 1]  707 	ld	a, (0x0b, sp)
      009E14 E7 01            [ 1]  708 	ld	(0x1, x), a
      009E16 7B 0A            [ 1]  709 	ld	a, (0x0a, sp)
      009E18 F7               [ 1]  710 	ld	(x), a
                                    711 ;	src\bme280.c: 162: Registers.pressure += iRes[2];
      009E19 7B 04            [ 1]  712 	ld	a, (0x04, sp)
      009E1B 5F               [ 1]  713 	clrw	x
      009E1C 97               [ 1]  714 	ld	xl, a
      009E1D 1F 10            [ 2]  715 	ldw	(0x10, sp), x
      009E1F 5F               [ 1]  716 	clrw	x
      009E20 0D 10            [ 1]  717 	tnz	(0x10, sp)
      009E22 2A 01            [ 1]  718 	jrpl	00104$
      009E24 5A               [ 2]  719 	decw	x
      009E25                        720 00104$:
      009E25 72 F9 10         [ 2]  721 	addw	y, (0x10, sp)
      009E28 9F               [ 1]  722 	ld	a, xl
      009E29 19 0B            [ 1]  723 	adc	a, (0x0b, sp)
      009E2B 88               [ 1]  724 	push	a
      009E2C 9E               [ 1]  725 	ld	a, xh
      009E2D 19 0B            [ 1]  726 	adc	a, (0x0b, sp)
      009E2F 6B 13            [ 1]  727 	ld	(0x13, sp), a
      009E31 84               [ 1]  728 	pop	a
      009E32 AE 00 22         [ 2]  729 	ldw	x, #(_Registers+0)
      009E35 EF 02            [ 2]  730 	ldw	(0x2, x), y
      009E37 E7 01            [ 1]  731 	ld	(0x1, x), a
      009E39 88               [ 1]  732 	push	a
      009E3A 7B 13            [ 1]  733 	ld	a, (0x13, sp)
      009E3C F7               [ 1]  734 	ld	(x), a
      009E3D 84               [ 1]  735 	pop	a
                                    736 ;	src\bme280.c: 163: Registers.pressure &= 0x00FFFFFF;
      009E3E 6B 0F            [ 1]  737 	ld	(0x0f, sp), a
      009E40 0F 0E            [ 1]  738 	clr	(0x0e, sp)
      009E42 AE 00 22         [ 2]  739 	ldw	x, #(_Registers+0)
      009E45 EF 02            [ 2]  740 	ldw	(0x2, x), y
      009E47 16 0E            [ 2]  741 	ldw	y, (0x0e, sp)
      009E49 FF               [ 2]  742 	ldw	(x), y
                                    743 ;	src\bme280.c: 164: Registers.temperature = iRes[3];
      009E4A 7B 05            [ 1]  744 	ld	a, (0x05, sp)
      009E4C 90 5F            [ 1]  745 	clrw	y
      009E4E 0F 12            [ 1]  746 	clr	(0x12, sp)
      009E50 AE 00 26         [ 2]  747 	ldw	x, #(_Registers+4)
      009E53 E7 03            [ 1]  748 	ld	(0x3, x), a
      009E55 EF 01            [ 2]  749 	ldw	(0x1, x), y
      009E57 7B 12            [ 1]  750 	ld	a, (0x12, sp)
      009E59 F7               [ 1]  751 	ld	(x), a
                                    752 ;	src\bme280.c: 166: Registers.pressure += iRes[4];
      009E5A AE 00 22         [ 2]  753 	ldw	x, #(_Registers+0)
      009E5D 90 93            [ 1]  754 	ldw	y, x
      009E5F 90 EE 02         [ 2]  755 	ldw	y, (0x2, y)
      009E62 FE               [ 2]  756 	ldw	x, (x)
      009E63 1F 0E            [ 2]  757 	ldw	(0x0e, sp), x
      009E65 7B 06            [ 1]  758 	ld	a, (0x06, sp)
      009E67 5F               [ 1]  759 	clrw	x
      009E68 97               [ 1]  760 	ld	xl, a
      009E69 1F 14            [ 2]  761 	ldw	(0x14, sp), x
      009E6B 5F               [ 1]  762 	clrw	x
      009E6C 0D 14            [ 1]  763 	tnz	(0x14, sp)
      009E6E 2A 01            [ 1]  764 	jrpl	00105$
      009E70 5A               [ 2]  765 	decw	x
      009E71                        766 00105$:
      009E71 72 F9 14         [ 2]  767 	addw	y, (0x14, sp)
      009E74 17 0C            [ 2]  768 	ldw	(0x0c, sp), y
      009E76 9F               [ 1]  769 	ld	a, xl
      009E77 19 0F            [ 1]  770 	adc	a, (0x0f, sp)
      009E79 6B 0B            [ 1]  771 	ld	(0x0b, sp), a
      009E7B 9E               [ 1]  772 	ld	a, xh
      009E7C 19 0E            [ 1]  773 	adc	a, (0x0e, sp)
      009E7E 6B 0A            [ 1]  774 	ld	(0x0a, sp), a
      009E80 AE 00 22         [ 2]  775 	ldw	x, #(_Registers+0)
      009E83 16 0C            [ 2]  776 	ldw	y, (0x0c, sp)
      009E85 EF 02            [ 2]  777 	ldw	(0x2, x), y
      009E87 16 0A            [ 2]  778 	ldw	y, (0x0a, sp)
      009E89 FF               [ 2]  779 	ldw	(x), y
                                    780 ;	src\bme280.c: 168: Registers.pressure += iRes[5];
      009E8A 7B 07            [ 1]  781 	ld	a, (0x07, sp)
      009E8C 5F               [ 1]  782 	clrw	x
      009E8D 97               [ 1]  783 	ld	xl, a
      009E8E 9E               [ 1]  784 	ld	a, xh
      009E8F 49               [ 1]  785 	rlc	a
      009E90 4F               [ 1]  786 	clr	a
      009E91 A2 00            [ 1]  787 	sbc	a, #0x00
      009E93 6B 0F            [ 1]  788 	ld	(0x0f, sp), a
      009E95 72 FB 0C         [ 2]  789 	addw	x, (0x0c, sp)
      009E98 51               [ 1]  790 	exgw	x, y
      009E99 88               [ 1]  791 	push	a
      009E9A 7B 10            [ 1]  792 	ld	a, (0x10, sp)
      009E9C 19 0C            [ 1]  793 	adc	a, (0x0c, sp)
      009E9E 6B 14            [ 1]  794 	ld	(0x14, sp), a
      009EA0 84               [ 1]  795 	pop	a
      009EA1 19 0A            [ 1]  796 	adc	a, (0x0a, sp)
      009EA3 6B 12            [ 1]  797 	ld	(0x12, sp), a
      009EA5 AE 00 22         [ 2]  798 	ldw	x, #(_Registers+0)
      009EA8 EF 02            [ 2]  799 	ldw	(0x2, x), y
      009EAA 7B 13            [ 1]  800 	ld	a, (0x13, sp)
      009EAC E7 01            [ 1]  801 	ld	(0x1, x), a
      009EAE 7B 12            [ 1]  802 	ld	a, (0x12, sp)
      009EB0 F7               [ 1]  803 	ld	(x), a
                                    804 ;	src\bme280.c: 169: Registers.pressure &= 0x00FFFFFF;
      009EB1 7B 13            [ 1]  805 	ld	a, (0x13, sp)
      009EB3 6B 0F            [ 1]  806 	ld	(0x0f, sp), a
      009EB5 0F 0E            [ 1]  807 	clr	(0x0e, sp)
      009EB7 AE 00 22         [ 2]  808 	ldw	x, #(_Registers+0)
      009EBA EF 02            [ 2]  809 	ldw	(0x2, x), y
      009EBC 16 0E            [ 2]  810 	ldw	y, (0x0e, sp)
      009EBE FF               [ 2]  811 	ldw	(x), y
                                    812 ;	src\bme280.c: 170: Registers.humidity = iRes[6];
      009EBF 7B 08            [ 1]  813 	ld	a, (0x08, sp)
      009EC1 5F               [ 1]  814 	clrw	x
      009EC2 97               [ 1]  815 	ld	xl, a
      009EC3 CF 00 2A         [ 2]  816 	ldw	_Registers+8, x
                                    817 ;	src\bme280.c: 172: Registers.humidity = iRes[7];
      009EC6 7B 09            [ 1]  818 	ld	a, (0x09, sp)
      009EC8 5F               [ 1]  819 	clrw	x
      009EC9 97               [ 1]  820 	ld	xl, a
      009ECA CF 00 2A         [ 2]  821 	ldw	_Registers+8, x
                                    822 ;	src\bme280.c: 173: }
      009ECD 5B 15            [ 2]  823 	addw	sp, #21
      009ECF 81               [ 4]  824 	ret
                                    825 ;	src\bme280.c: 175: uint8_t BME280_ReadStatus(void) {
                                    826 ;	-----------------------------------------
                                    827 ;	 function BME280_ReadStatus
                                    828 ;	-----------------------------------------
      009ED0                        829 _BME280_ReadStatus:
                                    830 ;	src\bme280.c: 177: uint8_t res = BME280_ReadReg(BME280_REGISTER_STATUS) & 0x09;
      009ED0 A6 F3            [ 1]  831 	ld	a, #0xf3
      009ED2 CD 9B 34         [ 4]  832 	call	_BME280_ReadReg
      009ED5 A4 09            [ 1]  833 	and	a, #0x09
                                    834 ;	src\bme280.c: 178: return res;
                                    835 ;	src\bme280.c: 179: }
      009ED7 81               [ 4]  836 	ret
                                    837 ;	src\bme280.c: 181: void BME280_ReadCoefficients(void) {
                                    838 ;	-----------------------------------------
                                    839 ;	 function BME280_ReadCoefficients
                                    840 ;	-----------------------------------------
      009ED8                        841 _BME280_ReadCoefficients:
      009ED8 52 04            [ 2]  842 	sub	sp, #4
                                    843 ;	src\bme280.c: 182: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_T1, &CalibData.dig_T1);
      009EDA AE 00 01         [ 2]  844 	ldw	x, #(_CalibData+0)
      009EDD A6 88            [ 1]  845 	ld	a, #0x88
      009EDF CD 9B 81         [ 4]  846 	call	_BME280_ReadReg_LE_U16
                                    847 ;	src\bme280.c: 183: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T2, &CalibData.dig_T2);
      009EE2 AE 00 03         [ 2]  848 	ldw	x, #(_CalibData+2)
      009EE5 A6 8A            [ 1]  849 	ld	a, #0x8a
      009EE7 CD 9D 7A         [ 4]  850 	call	_BME280_ReadReg_LE_S16
                                    851 ;	src\bme280.c: 184: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T3, &CalibData.dig_T3);
      009EEA AE 00 05         [ 2]  852 	ldw	x, #(_CalibData+4)
      009EED A6 8C            [ 1]  853 	ld	a, #0x8c
      009EEF CD 9D 7A         [ 4]  854 	call	_BME280_ReadReg_LE_S16
                                    855 ;	src\bme280.c: 185: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_P1, &CalibData.dig_P1);
      009EF2 AE 00 07         [ 2]  856 	ldw	x, #(_CalibData+6)
      009EF5 A6 8E            [ 1]  857 	ld	a, #0x8e
      009EF7 CD 9B 81         [ 4]  858 	call	_BME280_ReadReg_LE_U16
                                    859 ;	src\bme280.c: 186: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P2, &CalibData.dig_P2);
      009EFA AE 00 09         [ 2]  860 	ldw	x, #(_CalibData+8)
      009EFD A6 90            [ 1]  861 	ld	a, #0x90
      009EFF CD 9D 7A         [ 4]  862 	call	_BME280_ReadReg_LE_S16
                                    863 ;	src\bme280.c: 187: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P3, &CalibData.dig_P3);
      009F02 AE 00 0B         [ 2]  864 	ldw	x, #(_CalibData+10)
      009F05 A6 92            [ 1]  865 	ld	a, #0x92
      009F07 CD 9D 7A         [ 4]  866 	call	_BME280_ReadReg_LE_S16
                                    867 ;	src\bme280.c: 188: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P4, &CalibData.dig_P4);
      009F0A AE 00 0D         [ 2]  868 	ldw	x, #(_CalibData+12)
      009F0D A6 94            [ 1]  869 	ld	a, #0x94
      009F0F CD 9D 7A         [ 4]  870 	call	_BME280_ReadReg_LE_S16
                                    871 ;	src\bme280.c: 189: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P5, &CalibData.dig_P5);
      009F12 AE 00 0F         [ 2]  872 	ldw	x, #(_CalibData+14)
      009F15 A6 96            [ 1]  873 	ld	a, #0x96
      009F17 CD 9D 7A         [ 4]  874 	call	_BME280_ReadReg_LE_S16
                                    875 ;	src\bme280.c: 190: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P6, &CalibData.dig_P6);
      009F1A AE 00 11         [ 2]  876 	ldw	x, #(_CalibData+16)
      009F1D A6 98            [ 1]  877 	ld	a, #0x98
      009F1F CD 9D 7A         [ 4]  878 	call	_BME280_ReadReg_LE_S16
                                    879 ;	src\bme280.c: 191: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P7, &CalibData.dig_P7);
      009F22 AE 00 13         [ 2]  880 	ldw	x, #(_CalibData+18)
      009F25 A6 9A            [ 1]  881 	ld	a, #0x9a
      009F27 CD 9D 7A         [ 4]  882 	call	_BME280_ReadReg_LE_S16
                                    883 ;	src\bme280.c: 192: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P8, &CalibData.dig_P8);
      009F2A AE 00 15         [ 2]  884 	ldw	x, #(_CalibData+20)
      009F2D A6 9C            [ 1]  885 	ld	a, #0x9c
      009F2F CD 9D 7A         [ 4]  886 	call	_BME280_ReadReg_LE_S16
                                    887 ;	src\bme280.c: 193: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P9, &CalibData.dig_P9);
      009F32 AE 00 17         [ 2]  888 	ldw	x, #(_CalibData+22)
      009F35 A6 9E            [ 1]  889 	ld	a, #0x9e
      009F37 CD 9D 7A         [ 4]  890 	call	_BME280_ReadReg_LE_S16
                                    891 ;	src\bme280.c: 194: CalibData.dig_H1 = BME280_ReadReg(BME280_REGISTER_DIG_H1);
      009F3A A6 A1            [ 1]  892 	ld	a, #0xa1
      009F3C CD 9B 34         [ 4]  893 	call	_BME280_ReadReg
      009F3F C7 00 19         [ 1]  894 	ld	_CalibData+24, a
                                    895 ;	src\bme280.c: 195: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_H2, &CalibData.dig_H2);
      009F42 AE 00 1A         [ 2]  896 	ldw	x, #(_CalibData+25)
      009F45 A6 E1            [ 1]  897 	ld	a, #0xe1
      009F47 CD 9D 7A         [ 4]  898 	call	_BME280_ReadReg_LE_S16
                                    899 ;	src\bme280.c: 196: CalibData.dig_H3 = BME280_ReadReg(BME280_REGISTER_DIG_H3);
      009F4A A6 E3            [ 1]  900 	ld	a, #0xe3
      009F4C CD 9B 34         [ 4]  901 	call	_BME280_ReadReg
      009F4F C7 00 1C         [ 1]  902 	ld	_CalibData+27, a
                                    903 ;	src\bme280.c: 197: CalibData.dig_H4 = (BME280_ReadReg(BME280_REGISTER_DIG_H4) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H4+1) & 0xF);
      009F52 A6 E4            [ 1]  904 	ld	a, #0xe4
      009F54 CD 9B 34         [ 4]  905 	call	_BME280_ReadReg
      009F57 5F               [ 1]  906 	clrw	x
      009F58 97               [ 1]  907 	ld	xl, a
      009F59 58               [ 2]  908 	sllw	x
      009F5A 58               [ 2]  909 	sllw	x
      009F5B 58               [ 2]  910 	sllw	x
      009F5C 58               [ 2]  911 	sllw	x
      009F5D 1F 01            [ 2]  912 	ldw	(0x01, sp), x
      009F5F A6 E5            [ 1]  913 	ld	a, #0xe5
      009F61 CD 9B 34         [ 4]  914 	call	_BME280_ReadReg
      009F64 A4 0F            [ 1]  915 	and	a, #0x0f
      009F66 6B 04            [ 1]  916 	ld	(0x04, sp), a
      009F68 7B 01            [ 1]  917 	ld	a, (0x01, sp)
      009F6A 95               [ 1]  918 	ld	xh, a
      009F6B 7B 02            [ 1]  919 	ld	a, (0x02, sp)
      009F6D 1A 04            [ 1]  920 	or	a, (0x04, sp)
      009F6F 97               [ 1]  921 	ld	xl, a
      009F70 CF 00 1D         [ 2]  922 	ldw	_CalibData+28, x
                                    923 ;	src\bme280.c: 198: CalibData.dig_H5 = (BME280_ReadReg(BME280_REGISTER_DIG_H5+1) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H5) >> 4);
      009F73 A6 E6            [ 1]  924 	ld	a, #0xe6
      009F75 CD 9B 34         [ 4]  925 	call	_BME280_ReadReg
      009F78 5F               [ 1]  926 	clrw	x
      009F79 97               [ 1]  927 	ld	xl, a
      009F7A 58               [ 2]  928 	sllw	x
      009F7B 58               [ 2]  929 	sllw	x
      009F7C 58               [ 2]  930 	sllw	x
      009F7D 58               [ 2]  931 	sllw	x
      009F7E 1F 03            [ 2]  932 	ldw	(0x03, sp), x
      009F80 A6 E5            [ 1]  933 	ld	a, #0xe5
      009F82 CD 9B 34         [ 4]  934 	call	_BME280_ReadReg
      009F85 4E               [ 1]  935 	swap	a
      009F86 A4 0F            [ 1]  936 	and	a, #0x0f
      009F88 5F               [ 1]  937 	clrw	x
      009F89 1A 04            [ 1]  938 	or	a, (0x04, sp)
      009F8B 02               [ 1]  939 	rlwa	x
      009F8C 1A 03            [ 1]  940 	or	a, (0x03, sp)
      009F8E 95               [ 1]  941 	ld	xh, a
      009F8F CF 00 1F         [ 2]  942 	ldw	_CalibData+30, x
                                    943 ;	src\bme280.c: 199: CalibData.dig_H6 = (int8_t)BME280_ReadReg(BME280_REGISTER_DIG_H6);
      009F92 A6 E7            [ 1]  944 	ld	a, #0xe7
      009F94 CD 9B 34         [ 4]  945 	call	_BME280_ReadReg
      009F97 C7 00 21         [ 1]  946 	ld	_CalibData+32, a
                                    947 ;	src\bme280.c: 239: }
      009F9A 5B 04            [ 2]  948 	addw	sp, #4
      009F9C 81               [ 4]  949 	ret
                                    950 ;	src\bme280.c: 241: void BME280_SetStandby(uint8_t tsb) {
                                    951 ;	-----------------------------------------
                                    952 ;	 function BME280_SetStandby
                                    953 ;	-----------------------------------------
      009F9D                        954 _BME280_SetStandby:
      009F9D 89               [ 2]  955 	pushw	x
      009F9E 6B 02            [ 1]  956 	ld	(0x02, sp), a
                                    957 ;	src\bme280.c: 243: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_STBY_MSK;
      009FA0 A6 F5            [ 1]  958 	ld	a, #0xf5
      009FA2 CD 9B 34         [ 4]  959 	call	_BME280_ReadReg
      009FA5 A4 1F            [ 1]  960 	and	a, #0x1f
      009FA7 6B 01            [ 1]  961 	ld	(0x01, sp), a
                                    962 ;	src\bme280.c: 244: reg |= tsb & BME280_STBY_MSK;
      009FA9 7B 02            [ 1]  963 	ld	a, (0x02, sp)
      009FAB A4 E0            [ 1]  964 	and	a, #0xe0
      009FAD 1A 01            [ 1]  965 	or	a, (0x01, sp)
                                    966 ;	src\bme280.c: 245: BME280_WriteReg(BME280_REG_CONFIG,reg);
      009FAF 88               [ 1]  967 	push	a
      009FB0 A6 F5            [ 1]  968 	ld	a, #0xf5
      009FB2 CD 9B 1F         [ 4]  969 	call	_BME280_WriteReg
                                    970 ;	src\bme280.c: 246: }
      009FB5 85               [ 2]  971 	popw	x
      009FB6 81               [ 4]  972 	ret
                                    973 ;	src\bme280.c: 248: void BME280_SetFilter(uint8_t filter) {
                                    974 ;	-----------------------------------------
                                    975 ;	 function BME280_SetFilter
                                    976 ;	-----------------------------------------
      009FB7                        977 _BME280_SetFilter:
      009FB7 89               [ 2]  978 	pushw	x
      009FB8 6B 02            [ 1]  979 	ld	(0x02, sp), a
                                    980 ;	src\bme280.c: 250: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_FILTER_MSK;
      009FBA A6 F5            [ 1]  981 	ld	a, #0xf5
      009FBC CD 9B 34         [ 4]  982 	call	_BME280_ReadReg
      009FBF A4 E3            [ 1]  983 	and	a, #0xe3
      009FC1 6B 01            [ 1]  984 	ld	(0x01, sp), a
                                    985 ;	src\bme280.c: 251: reg |= filter & BME280_FILTER_MSK;
      009FC3 7B 02            [ 1]  986 	ld	a, (0x02, sp)
      009FC5 A4 1C            [ 1]  987 	and	a, #0x1c
      009FC7 1A 01            [ 1]  988 	or	a, (0x01, sp)
                                    989 ;	src\bme280.c: 252: BME280_WriteReg(BME280_REG_CONFIG,reg);
      009FC9 88               [ 1]  990 	push	a
      009FCA A6 F5            [ 1]  991 	ld	a, #0xf5
      009FCC CD 9B 1F         [ 4]  992 	call	_BME280_WriteReg
                                    993 ;	src\bme280.c: 253: }
      009FCF 85               [ 2]  994 	popw	x
      009FD0 81               [ 4]  995 	ret
                                    996 ;	src\bme280.c: 255: void BME280_SetOversamplingTemper(uint8_t osrs) {
                                    997 ;	-----------------------------------------
                                    998 ;	 function BME280_SetOversamplingTemper
                                    999 ;	-----------------------------------------
      009FD1                       1000 _BME280_SetOversamplingTemper:
      009FD1 89               [ 2] 1001 	pushw	x
      009FD2 6B 02            [ 1] 1002 	ld	(0x02, sp), a
                                   1003 ;	src\bme280.c: 257: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_T_MSK;
      009FD4 A6 F4            [ 1] 1004 	ld	a, #0xf4
      009FD6 CD 9B 34         [ 4] 1005 	call	_BME280_ReadReg
      009FD9 A4 1F            [ 1] 1006 	and	a, #0x1f
      009FDB 6B 01            [ 1] 1007 	ld	(0x01, sp), a
                                   1008 ;	src\bme280.c: 258: reg |= osrs & BME280_OSRS_T_MSK;
      009FDD 7B 02            [ 1] 1009 	ld	a, (0x02, sp)
      009FDF A4 E0            [ 1] 1010 	and	a, #0xe0
      009FE1 1A 01            [ 1] 1011 	or	a, (0x01, sp)
                                   1012 ;	src\bme280.c: 259: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      009FE3 88               [ 1] 1013 	push	a
      009FE4 A6 F4            [ 1] 1014 	ld	a, #0xf4
      009FE6 CD 9B 1F         [ 4] 1015 	call	_BME280_WriteReg
                                   1016 ;	src\bme280.c: 260: }
      009FE9 85               [ 2] 1017 	popw	x
      009FEA 81               [ 4] 1018 	ret
                                   1019 ;	src\bme280.c: 262: void BME280_SetOversamplingPressure(uint8_t osrs) {
                                   1020 ;	-----------------------------------------
                                   1021 ;	 function BME280_SetOversamplingPressure
                                   1022 ;	-----------------------------------------
      009FEB                       1023 _BME280_SetOversamplingPressure:
      009FEB 89               [ 2] 1024 	pushw	x
      009FEC 6B 02            [ 1] 1025 	ld	(0x02, sp), a
                                   1026 ;	src\bme280.c: 264: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_P_MSK;
      009FEE A6 F4            [ 1] 1027 	ld	a, #0xf4
      009FF0 CD 9B 34         [ 4] 1028 	call	_BME280_ReadReg
      009FF3 A4 E3            [ 1] 1029 	and	a, #0xe3
      009FF5 6B 01            [ 1] 1030 	ld	(0x01, sp), a
                                   1031 ;	src\bme280.c: 265: reg |= osrs & BME280_OSRS_P_MSK;
      009FF7 7B 02            [ 1] 1032 	ld	a, (0x02, sp)
      009FF9 A4 1C            [ 1] 1033 	and	a, #0x1c
      009FFB 1A 01            [ 1] 1034 	or	a, (0x01, sp)
                                   1035 ;	src\bme280.c: 266: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      009FFD 88               [ 1] 1036 	push	a
      009FFE A6 F4            [ 1] 1037 	ld	a, #0xf4
      00A000 CD 9B 1F         [ 4] 1038 	call	_BME280_WriteReg
                                   1039 ;	src\bme280.c: 267: }
      00A003 85               [ 2] 1040 	popw	x
      00A004 81               [ 4] 1041 	ret
                                   1042 ;	src\bme280.c: 269: void BME280_SetOversamplingHum(uint8_t osrs) {
                                   1043 ;	-----------------------------------------
                                   1044 ;	 function BME280_SetOversamplingHum
                                   1045 ;	-----------------------------------------
      00A005                       1046 _BME280_SetOversamplingHum:
      00A005 89               [ 2] 1047 	pushw	x
      00A006 6B 02            [ 1] 1048 	ld	(0x02, sp), a
                                   1049 ;	src\bme280.c: 271: reg = BME280_ReadReg(BME280_REG_CTRL_HUM) & ~BME280_OSRS_H_MSK;
      00A008 A6 F2            [ 1] 1050 	ld	a, #0xf2
      00A00A CD 9B 34         [ 4] 1051 	call	_BME280_ReadReg
      00A00D A4 F8            [ 1] 1052 	and	a, #0xf8
      00A00F 6B 01            [ 1] 1053 	ld	(0x01, sp), a
                                   1054 ;	src\bme280.c: 272: reg |= osrs & BME280_OSRS_H_MSK;
      00A011 7B 02            [ 1] 1055 	ld	a, (0x02, sp)
      00A013 A4 07            [ 1] 1056 	and	a, #0x07
      00A015 1A 01            [ 1] 1057 	or	a, (0x01, sp)
                                   1058 ;	src\bme280.c: 273: BME280_WriteReg(BME280_REG_CTRL_HUM,reg);
      00A017 88               [ 1] 1059 	push	a
      00A018 A6 F2            [ 1] 1060 	ld	a, #0xf2
      00A01A CD 9B 1F         [ 4] 1061 	call	_BME280_WriteReg
                                   1062 ;	src\bme280.c: 276: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      00A01D A6 F4            [ 1] 1063 	ld	a, #0xf4
      00A01F CD 9B 34         [ 4] 1064 	call	_BME280_ReadReg
                                   1065 ;	src\bme280.c: 277: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      00A022 88               [ 1] 1066 	push	a
      00A023 A6 F4            [ 1] 1067 	ld	a, #0xf4
      00A025 CD 9B 1F         [ 4] 1068 	call	_BME280_WriteReg
                                   1069 ;	src\bme280.c: 278: }
      00A028 85               [ 2] 1070 	popw	x
      00A029 81               [ 4] 1071 	ret
                                   1072 ;	src\bme280.c: 280: void BME280_SetMode(uint8_t mode) {
                                   1073 ;	-----------------------------------------
                                   1074 ;	 function BME280_SetMode
                                   1075 ;	-----------------------------------------
      00A02A                       1076 _BME280_SetMode:
      00A02A 89               [ 2] 1077 	pushw	x
      00A02B 6B 02            [ 1] 1078 	ld	(0x02, sp), a
                                   1079 ;	src\bme280.c: 282: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_MODE_MSK;
      00A02D A6 F4            [ 1] 1080 	ld	a, #0xf4
      00A02F CD 9B 34         [ 4] 1081 	call	_BME280_ReadReg
      00A032 A4 FC            [ 1] 1082 	and	a, #0xfc
      00A034 6B 01            [ 1] 1083 	ld	(0x01, sp), a
                                   1084 ;	src\bme280.c: 283: reg |= mode & BME280_MODE_MSK;
      00A036 7B 02            [ 1] 1085 	ld	a, (0x02, sp)
      00A038 A4 03            [ 1] 1086 	and	a, #0x03
      00A03A 1A 01            [ 1] 1087 	or	a, (0x01, sp)
                                   1088 ;	src\bme280.c: 284: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      00A03C 88               [ 1] 1089 	push	a
      00A03D A6 F4            [ 1] 1090 	ld	a, #0xf4
      00A03F CD 9B 1F         [ 4] 1091 	call	_BME280_WriteReg
                                   1092 ;	src\bme280.c: 285: }
      00A042 85               [ 2] 1093 	popw	x
      00A043 81               [ 4] 1094 	ret
                                   1095 ;	src\bme280.c: 287: float BME280_ReadTemperature(void) {
                                   1096 ;	-----------------------------------------
                                   1097 ;	 function BME280_ReadTemperature
                                   1098 ;	-----------------------------------------
      00A044                       1099 _BME280_ReadTemperature:
      00A044 52 10            [ 2] 1100 	sub	sp, #16
                                   1101 ;	src\bme280.c: 293: temper_raw = Registers.temperature;
      00A046 AE 00 26         [ 2] 1102 	ldw	x, #_Registers+4
      00A049 90 93            [ 1] 1103 	ldw	y, x
      00A04B 90 EE 02         [ 2] 1104 	ldw	y, (0x2, y)
      00A04E FE               [ 2] 1105 	ldw	x, (x)
                                   1106 ;	src\bme280.c: 303: temper_raw >>= 4;
      00A04F 57               [ 2] 1107 	sraw	x
      00A050 90 56            [ 2] 1108 	rrcw	y
      00A052 57               [ 2] 1109 	sraw	x
      00A053 90 56            [ 2] 1110 	rrcw	y
      00A055 57               [ 2] 1111 	sraw	x
      00A056 90 56            [ 2] 1112 	rrcw	y
      00A058 57               [ 2] 1113 	sraw	x
      00A059 90 56            [ 2] 1114 	rrcw	y
      00A05B 17 03            [ 2] 1115 	ldw	(0x03, sp), y
      00A05D 1F 01            [ 2] 1116 	ldw	(0x01, sp), x
                                   1117 ;	src\bme280.c: 312: val1 = ((((temper_raw>>3) - ((int32_t)CalibData.dig_T1<<1))) * ((int32_t)CalibData.dig_T2)) >> 11;
      00A05F 16 03            [ 2] 1118 	ldw	y, (0x03, sp)
      00A061 1E 01            [ 2] 1119 	ldw	x, (0x01, sp)
      00A063 57               [ 2] 1120 	sraw	x
      00A064 90 56            [ 2] 1121 	rrcw	y
      00A066 57               [ 2] 1122 	sraw	x
      00A067 90 56            [ 2] 1123 	rrcw	y
      00A069 57               [ 2] 1124 	sraw	x
      00A06A 90 56            [ 2] 1125 	rrcw	y
      00A06C 1F 05            [ 2] 1126 	ldw	(0x05, sp), x
      00A06E CE 00 01         [ 2] 1127 	ldw	x, _CalibData+0
      00A071 0F 0E            [ 1] 1128 	clr	(0x0e, sp)
      00A073 4F               [ 1] 1129 	clr	a
      00A074 6B 09            [ 1] 1130 	ld	(0x09, sp), a
      00A076 7B 0E            [ 1] 1131 	ld	a, (0x0e, sp)
      00A078 58               [ 2] 1132 	sllw	x
      00A079 49               [ 1] 1133 	rlc	a
      00A07A 09 09            [ 1] 1134 	rlc	(0x09, sp)
      00A07C 1F 0B            [ 2] 1135 	ldw	(0x0b, sp), x
      00A07E 72 F2 0B         [ 2] 1136 	subw	y, (0x0b, sp)
      00A081 88               [ 1] 1137 	push	a
      00A082 7B 07            [ 1] 1138 	ld	a, (0x07, sp)
      00A084 12 01            [ 1] 1139 	sbc	a, (1, sp)
      00A086 6B 0F            [ 1] 1140 	ld	(0x0f, sp), a
      00A088 7B 06            [ 1] 1141 	ld	a, (0x06, sp)
      00A08A 12 0A            [ 1] 1142 	sbc	a, (0x0a, sp)
      00A08C 6B 0E            [ 1] 1143 	ld	(0x0e, sp), a
      00A08E 84               [ 1] 1144 	pop	a
      00A08F CE 00 03         [ 2] 1145 	ldw	x, _CalibData+2
      00A092 9E               [ 1] 1146 	ld	a, xh
      00A093 49               [ 1] 1147 	rlc	a
      00A094 4F               [ 1] 1148 	clr	a
      00A095 A2 00            [ 1] 1149 	sbc	a, #0x00
      00A097 6B 0A            [ 1] 1150 	ld	(0x0a, sp), a
      00A099 6B 09            [ 1] 1151 	ld	(0x09, sp), a
      00A09B 89               [ 2] 1152 	pushw	x
      00A09C 1E 0B            [ 2] 1153 	ldw	x, (0x0b, sp)
      00A09E 89               [ 2] 1154 	pushw	x
      00A09F 90 89            [ 2] 1155 	pushw	y
      00A0A1 1E 13            [ 2] 1156 	ldw	x, (0x13, sp)
      00A0A3 89               [ 2] 1157 	pushw	x
      00A0A4 CD BB 47         [ 4] 1158 	call	__mullong
      00A0A7 5B 08            [ 2] 1159 	addw	sp, #8
      00A0A9 A6 0B            [ 1] 1160 	ld	a, #0x0b
      00A0AB                       1161 00103$:
      00A0AB 90 57            [ 2] 1162 	sraw	y
      00A0AD 56               [ 2] 1163 	rrcw	x
      00A0AE 4A               [ 1] 1164 	dec	a
      00A0AF 26 FA            [ 1] 1165 	jrne	00103$
      00A0B1 1F 0F            [ 2] 1166 	ldw	(0x0f, sp), x
      00A0B3 17 0D            [ 2] 1167 	ldw	(0x0d, sp), y
                                   1168 ;	src\bme280.c: 313: val2 = (((((temper_raw>>4) - ((int32_t)CalibData.dig_T1)) * ((temper_raw>>4) - ((int32_t)CalibData.dig_T1)))>>12) * ((int32_t)CalibData.dig_T3)) >> 14;
      00A0B5 16 03            [ 2] 1169 	ldw	y, (0x03, sp)
      00A0B7 1E 01            [ 2] 1170 	ldw	x, (0x01, sp)
      00A0B9 57               [ 2] 1171 	sraw	x
      00A0BA 90 56            [ 2] 1172 	rrcw	y
      00A0BC 57               [ 2] 1173 	sraw	x
      00A0BD 90 56            [ 2] 1174 	rrcw	y
      00A0BF 57               [ 2] 1175 	sraw	x
      00A0C0 90 56            [ 2] 1176 	rrcw	y
      00A0C2 57               [ 2] 1177 	sraw	x
      00A0C3 90 56            [ 2] 1178 	rrcw	y
      00A0C5 1F 09            [ 2] 1179 	ldw	(0x09, sp), x
      00A0C7 CE 00 01         [ 2] 1180 	ldw	x, _CalibData+0
      00A0CA 1F 07            [ 2] 1181 	ldw	(0x07, sp), x
      00A0CC 5F               [ 1] 1182 	clrw	x
      00A0CD 72 F2 07         [ 2] 1183 	subw	y, (0x07, sp)
      00A0D0 7B 0A            [ 1] 1184 	ld	a, (0x0a, sp)
      00A0D2 89               [ 2] 1185 	pushw	x
      00A0D3 12 02            [ 1] 1186 	sbc	a, (2, sp)
      00A0D5 85               [ 2] 1187 	popw	x
      00A0D6 97               [ 1] 1188 	ld	xl, a
      00A0D7 7B 09            [ 1] 1189 	ld	a, (0x09, sp)
      00A0D9 89               [ 2] 1190 	pushw	x
      00A0DA 12 01            [ 1] 1191 	sbc	a, (1, sp)
      00A0DC 85               [ 2] 1192 	popw	x
      00A0DD 95               [ 1] 1193 	ld	xh, a
      00A0DE 90 89            [ 2] 1194 	pushw	y
      00A0E0 89               [ 2] 1195 	pushw	x
      00A0E1 90 89            [ 2] 1196 	pushw	y
      00A0E3 89               [ 2] 1197 	pushw	x
      00A0E4 CD BB 47         [ 4] 1198 	call	__mullong
      00A0E7 5B 08            [ 2] 1199 	addw	sp, #8
      00A0E9 A6 0C            [ 1] 1200 	ld	a, #0x0c
      00A0EB                       1201 00105$:
      00A0EB 90 57            [ 2] 1202 	sraw	y
      00A0ED 56               [ 2] 1203 	rrcw	x
      00A0EE 4A               [ 1] 1204 	dec	a
      00A0EF 26 FA            [ 1] 1205 	jrne	00105$
      00A0F1 1F 07            [ 2] 1206 	ldw	(0x07, sp), x
      00A0F3 CE 00 05         [ 2] 1207 	ldw	x, _CalibData+4
      00A0F6 9E               [ 1] 1208 	ld	a, xh
      00A0F7 49               [ 1] 1209 	rlc	a
      00A0F8 4F               [ 1] 1210 	clr	a
      00A0F9 A2 00            [ 1] 1211 	sbc	a, #0x00
      00A0FB 6B 0A            [ 1] 1212 	ld	(0x0a, sp), a
      00A0FD 6B 09            [ 1] 1213 	ld	(0x09, sp), a
      00A0FF 89               [ 2] 1214 	pushw	x
      00A100 1E 0B            [ 2] 1215 	ldw	x, (0x0b, sp)
      00A102 89               [ 2] 1216 	pushw	x
      00A103 1E 0B            [ 2] 1217 	ldw	x, (0x0b, sp)
      00A105 89               [ 2] 1218 	pushw	x
      00A106 90 89            [ 2] 1219 	pushw	y
      00A108 CD BB 47         [ 4] 1220 	call	__mullong
      00A10B 5B 08            [ 2] 1221 	addw	sp, #8
      00A10D 51               [ 1] 1222 	exgw	x, y
      00A10E A6 0E            [ 1] 1223 	ld	a, #0x0e
      00A110                       1224 00107$:
      00A110 57               [ 2] 1225 	sraw	x
      00A111 90 56            [ 2] 1226 	rrcw	y
      00A113 4A               [ 1] 1227 	dec	a
      00A114 26 FA            [ 1] 1228 	jrne	00107$
                                   1229 ;	src\bme280.c: 314: temper_int = val1 + val2;
      00A116 72 F9 0F         [ 2] 1230 	addw	y, (0x0f, sp)
      00A119 9F               [ 1] 1231 	ld	a, xl
      00A11A 19 0E            [ 1] 1232 	adc	a, (0x0e, sp)
      00A11C 02               [ 1] 1233 	rlwa	x
      00A11D 19 0D            [ 1] 1234 	adc	a, (0x0d, sp)
      00A11F 95               [ 1] 1235 	ld	xh, a
      00A120 90 CF 00 2E      [ 2] 1236 	ldw	_temper_int+2, y
      00A124 CF 00 2C         [ 2] 1237 	ldw	_temper_int+0, x
                                   1238 ;	src\bme280.c: 325: temper_float = ((temper_int * 5 + 128) >> 8);
      00A127 CE 00 2E         [ 2] 1239 	ldw	x, _temper_int+2
      00A12A 89               [ 2] 1240 	pushw	x
      00A12B CE 00 2C         [ 2] 1241 	ldw	x, _temper_int+0
      00A12E 89               [ 2] 1242 	pushw	x
      00A12F 4B 05            [ 1] 1243 	push	#0x05
      00A131 5F               [ 1] 1244 	clrw	x
      00A132 89               [ 2] 1245 	pushw	x
      00A133 4B 00            [ 1] 1246 	push	#0x00
      00A135 CD BB 47         [ 4] 1247 	call	__mullong
      00A138 5B 08            [ 2] 1248 	addw	sp, #8
      00A13A 17 0D            [ 2] 1249 	ldw	(0x0d, sp), y
      00A13C 1C 00 80         [ 2] 1250 	addw	x, #0x0080
      00A13F 51               [ 1] 1251 	exgw	x, y
      00A140 1E 0D            [ 2] 1252 	ldw	x, (0x0d, sp)
      00A142 24 01            [ 1] 1253 	jrnc	00109$
      00A144 5C               [ 1] 1254 	incw	x
      00A145                       1255 00109$:
      00A145 4F               [ 1] 1256 	clr	a
      00A146 5D               [ 2] 1257 	tnzw	x
      00A147 2A 01            [ 1] 1258 	jrpl	00110$
      00A149 4A               [ 1] 1259 	dec	a
      00A14A                       1260 00110$:
      00A14A 01               [ 1] 1261 	rrwa	x
      00A14B 90 01            [ 1] 1262 	rrwa	y
      00A14D 90 89            [ 2] 1263 	pushw	y
      00A14F 89               [ 2] 1264 	pushw	x
      00A150 CD B2 EE         [ 4] 1265 	call	___slong2fs
      00A153 5B 04            [ 2] 1266 	addw	sp, #4
                                   1267 ;	src\bme280.c: 326: temper_float /= 100.0f;
      00A155 4B 00            [ 1] 1268 	push	#0x00
      00A157 4B 00            [ 1] 1269 	push	#0x00
      00A159 4B C8            [ 1] 1270 	push	#0xc8
      00A15B 4B 42            [ 1] 1271 	push	#0x42
      00A15D 89               [ 2] 1272 	pushw	x
      00A15E 90 89            [ 2] 1273 	pushw	y
      00A160 CD BA C1         [ 4] 1274 	call	___fsdiv
                                   1275 ;	src\bme280.c: 328: return temper_float;
                                   1276 ;	src\bme280.c: 329: }
      00A163 5B 10            [ 2] 1277 	addw	sp, #16
      00A165 81               [ 4] 1278 	ret
                                   1279 ;	src\bme280.c: 331: float BME280_ReadPressure(void) {
                                   1280 ;	-----------------------------------------
                                   1281 ;	 function BME280_ReadPressure
                                   1282 ;	-----------------------------------------
      00A166                       1283 _BME280_ReadPressure:
      00A166 52 0C            [ 2] 1284 	sub	sp, #12
                                   1285 ;	src\bme280.c: 340: press_raw = Registers.pressure;
      00A168 AE 00 22         [ 2] 1286 	ldw	x, #_Registers+0
      00A16B 90 93            [ 1] 1287 	ldw	y, x
      00A16D 90 EE 02         [ 2] 1288 	ldw	y, (0x2, y)
      00A170 FE               [ 2] 1289 	ldw	x, (x)
                                   1290 ;	src\bme280.c: 349: press_raw >>= 4;
      00A171 57               [ 2] 1291 	sraw	x
      00A172 90 56            [ 2] 1292 	rrcw	y
      00A174 57               [ 2] 1293 	sraw	x
      00A175 90 56            [ 2] 1294 	rrcw	y
      00A177 57               [ 2] 1295 	sraw	x
      00A178 90 56            [ 2] 1296 	rrcw	y
      00A17A 57               [ 2] 1297 	sraw	x
      00A17B 90 56            [ 2] 1298 	rrcw	y
      00A17D 17 0B            [ 2] 1299 	ldw	(0x0b, sp), y
      00A17F 1F 09            [ 2] 1300 	ldw	(0x09, sp), x
                                   1301 ;	src\bme280.c: 358: val1 = (float)temper_int/2 - 64000.0;
      00A181 CE 00 2E         [ 2] 1302 	ldw	x, _temper_int+2
      00A184 89               [ 2] 1303 	pushw	x
      00A185 CE 00 2C         [ 2] 1304 	ldw	x, _temper_int+0
      00A188 89               [ 2] 1305 	pushw	x
      00A189 CD B2 EE         [ 4] 1306 	call	___slong2fs
      00A18C 5B 04            [ 2] 1307 	addw	sp, #4
      00A18E 4B 00            [ 1] 1308 	push	#0x00
      00A190 4B 00            [ 1] 1309 	push	#0x00
      00A192 4B 00            [ 1] 1310 	push	#0x00
      00A194 4B 40            [ 1] 1311 	push	#0x40
      00A196 89               [ 2] 1312 	pushw	x
      00A197 90 89            [ 2] 1313 	pushw	y
      00A199 CD BA C1         [ 4] 1314 	call	___fsdiv
      00A19C 4B 00            [ 1] 1315 	push	#0x00
      00A19E 4B 00            [ 1] 1316 	push	#0x00
      00A1A0 4B 7A            [ 1] 1317 	push	#0x7a
      00A1A2 4B 47            [ 1] 1318 	push	#0x47
      00A1A4 89               [ 2] 1319 	pushw	x
      00A1A5 90 89            [ 2] 1320 	pushw	y
      00A1A7 CD B0 A0         [ 4] 1321 	call	___fssub
      00A1AA 1F 07            [ 2] 1322 	ldw	(0x07, sp), x
      00A1AC 17 05            [ 2] 1323 	ldw	(0x05, sp), y
                                   1324 ;	src\bme280.c: 377: val2 = (val1/4.0) + CalibData.dig_P4 * 65536;
      00A1AE 5F               [ 1] 1325 	clrw	x
      00A1AF 89               [ 2] 1326 	pushw	x
      00A1B0 4B 80            [ 1] 1327 	push	#0x80
      00A1B2 4B 40            [ 1] 1328 	push	#0x40
      00A1B4 1E 0B            [ 2] 1329 	ldw	x, (0x0b, sp)
      00A1B6 89               [ 2] 1330 	pushw	x
      00A1B7 1E 0B            [ 2] 1331 	ldw	x, (0x0b, sp)
      00A1B9 89               [ 2] 1332 	pushw	x
      00A1BA CD BA C1         [ 4] 1333 	call	___fsdiv
      00A1BD 1F 03            [ 2] 1334 	ldw	(0x03, sp), x
      00A1BF 17 01            [ 2] 1335 	ldw	(0x01, sp), y
      00A1C1 CE 00 0D         [ 2] 1336 	ldw	x, _CalibData+12
      00A1C4 9E               [ 1] 1337 	ld	a, xh
      00A1C5 49               [ 1] 1338 	rlc	a
      00A1C6 4F               [ 1] 1339 	clr	a
      00A1C7 A2 00            [ 1] 1340 	sbc	a, #0x00
      00A1C9 90 5F            [ 1] 1341 	clrw	y
      00A1CB 90 89            [ 2] 1342 	pushw	y
      00A1CD 89               [ 2] 1343 	pushw	x
      00A1CE CD B2 EE         [ 4] 1344 	call	___slong2fs
      00A1D1 5B 04            [ 2] 1345 	addw	sp, #4
      00A1D3 89               [ 2] 1346 	pushw	x
      00A1D4 90 89            [ 2] 1347 	pushw	y
      00A1D6 1E 07            [ 2] 1348 	ldw	x, (0x07, sp)
      00A1D8 89               [ 2] 1349 	pushw	x
      00A1D9 1E 07            [ 2] 1350 	ldw	x, (0x07, sp)
      00A1DB 89               [ 2] 1351 	pushw	x
      00A1DC CD B5 A7         [ 4] 1352 	call	___fsadd
      00A1DF 1F 03            [ 2] 1353 	ldw	(0x03, sp), x
      00A1E1 17 01            [ 2] 1354 	ldw	(0x01, sp), y
                                   1355 ;	src\bme280.c: 378: val1 = (1 + val1 / 32768) * (float)CalibData.dig_P1;
      00A1E3 5F               [ 1] 1356 	clrw	x
      00A1E4 89               [ 2] 1357 	pushw	x
      00A1E5 4B 00            [ 1] 1358 	push	#0x00
      00A1E7 4B 47            [ 1] 1359 	push	#0x47
      00A1E9 1E 0B            [ 2] 1360 	ldw	x, (0x0b, sp)
      00A1EB 89               [ 2] 1361 	pushw	x
      00A1EC 1E 0B            [ 2] 1362 	ldw	x, (0x0b, sp)
      00A1EE 89               [ 2] 1363 	pushw	x
      00A1EF CD BA C1         [ 4] 1364 	call	___fsdiv
      00A1F2 4B 00            [ 1] 1365 	push	#0x00
      00A1F4 4B 00            [ 1] 1366 	push	#0x00
      00A1F6 4B 80            [ 1] 1367 	push	#0x80
      00A1F8 4B 3F            [ 1] 1368 	push	#0x3f
      00A1FA 89               [ 2] 1369 	pushw	x
      00A1FB 90 89            [ 2] 1370 	pushw	y
      00A1FD CD B5 A7         [ 4] 1371 	call	___fsadd
      00A200 1F 07            [ 2] 1372 	ldw	(0x07, sp), x
      00A202 17 05            [ 2] 1373 	ldw	(0x05, sp), y
      00A204 CE 00 07         [ 2] 1374 	ldw	x, _CalibData+6
      00A207 CD B8 F5         [ 4] 1375 	call	___uint2fs
      00A20A 89               [ 2] 1376 	pushw	x
      00A20B 90 89            [ 2] 1377 	pushw	y
      00A20D 1E 0B            [ 2] 1378 	ldw	x, (0x0b, sp)
      00A20F 89               [ 2] 1379 	pushw	x
      00A210 1E 0B            [ 2] 1380 	ldw	x, (0x0b, sp)
      00A212 89               [ 2] 1381 	pushw	x
      00A213 CD B1 34         [ 4] 1382 	call	___fsmul
      00A216 1F 07            [ 2] 1383 	ldw	(0x07, sp), x
      00A218 17 05            [ 2] 1384 	ldw	(0x05, sp), y
                                   1385 ;	src\bme280.c: 379: p = 1048576.0 - (float)press_raw;
      00A21A 1E 0B            [ 2] 1386 	ldw	x, (0x0b, sp)
      00A21C 89               [ 2] 1387 	pushw	x
      00A21D 1E 0B            [ 2] 1388 	ldw	x, (0x0b, sp)
      00A21F 89               [ 2] 1389 	pushw	x
      00A220 CD B2 EE         [ 4] 1390 	call	___slong2fs
      00A223 5B 04            [ 2] 1391 	addw	sp, #4
      00A225 89               [ 2] 1392 	pushw	x
      00A226 90 89            [ 2] 1393 	pushw	y
      00A228 5F               [ 1] 1394 	clrw	x
      00A229 89               [ 2] 1395 	pushw	x
      00A22A 4B 80            [ 1] 1396 	push	#0x80
      00A22C 4B 49            [ 1] 1397 	push	#0x49
      00A22E CD B0 A0         [ 4] 1398 	call	___fssub
      00A231 1F 0B            [ 2] 1399 	ldw	(0x0b, sp), x
      00A233 17 09            [ 2] 1400 	ldw	(0x09, sp), y
                                   1401 ;	src\bme280.c: 380: p = (p -(val2/4096)) * 6250 / val1;
      00A235 5F               [ 1] 1402 	clrw	x
      00A236 89               [ 2] 1403 	pushw	x
      00A237 4B 80            [ 1] 1404 	push	#0x80
      00A239 4B 45            [ 1] 1405 	push	#0x45
      00A23B 1E 07            [ 2] 1406 	ldw	x, (0x07, sp)
      00A23D 89               [ 2] 1407 	pushw	x
      00A23E 1E 07            [ 2] 1408 	ldw	x, (0x07, sp)
      00A240 89               [ 2] 1409 	pushw	x
      00A241 CD BA C1         [ 4] 1410 	call	___fsdiv
      00A244 89               [ 2] 1411 	pushw	x
      00A245 90 89            [ 2] 1412 	pushw	y
      00A247 1E 0F            [ 2] 1413 	ldw	x, (0x0f, sp)
      00A249 89               [ 2] 1414 	pushw	x
      00A24A 1E 0F            [ 2] 1415 	ldw	x, (0x0f, sp)
      00A24C 89               [ 2] 1416 	pushw	x
      00A24D CD B0 A0         [ 4] 1417 	call	___fssub
      00A250 89               [ 2] 1418 	pushw	x
      00A251 90 89            [ 2] 1419 	pushw	y
      00A253 4B 00            [ 1] 1420 	push	#0x00
      00A255 4B 50            [ 1] 1421 	push	#0x50
      00A257 4B C3            [ 1] 1422 	push	#0xc3
      00A259 4B 45            [ 1] 1423 	push	#0x45
      00A25B CD B1 34         [ 4] 1424 	call	___fsmul
      00A25E 1F 0B            [ 2] 1425 	ldw	(0x0b, sp), x
      00A260 1E 07            [ 2] 1426 	ldw	x, (0x07, sp)
      00A262 89               [ 2] 1427 	pushw	x
      00A263 1E 07            [ 2] 1428 	ldw	x, (0x07, sp)
      00A265 89               [ 2] 1429 	pushw	x
      00A266 1E 0F            [ 2] 1430 	ldw	x, (0x0f, sp)
      00A268 89               [ 2] 1431 	pushw	x
      00A269 90 89            [ 2] 1432 	pushw	y
      00A26B CD BA C1         [ 4] 1433 	call	___fsdiv
      00A26E 1F 07            [ 2] 1434 	ldw	(0x07, sp), x
      00A270 17 05            [ 2] 1435 	ldw	(0x05, sp), y
                                   1436 ;	src\bme280.c: 381: val1 = (float)CalibData.dig_P9 * p * p / 2147483648;
      00A272 CE 00 17         [ 2] 1437 	ldw	x, _CalibData+22
      00A275 CD B8 19         [ 4] 1438 	call	___sint2fs
      00A278 1F 0B            [ 2] 1439 	ldw	(0x0b, sp), x
      00A27A 1E 07            [ 2] 1440 	ldw	x, (0x07, sp)
      00A27C 89               [ 2] 1441 	pushw	x
      00A27D 1E 07            [ 2] 1442 	ldw	x, (0x07, sp)
      00A27F 89               [ 2] 1443 	pushw	x
      00A280 1E 0F            [ 2] 1444 	ldw	x, (0x0f, sp)
      00A282 89               [ 2] 1445 	pushw	x
      00A283 90 89            [ 2] 1446 	pushw	y
      00A285 CD B1 34         [ 4] 1447 	call	___fsmul
      00A288 1F 0B            [ 2] 1448 	ldw	(0x0b, sp), x
      00A28A 1E 07            [ 2] 1449 	ldw	x, (0x07, sp)
      00A28C 89               [ 2] 1450 	pushw	x
      00A28D 1E 07            [ 2] 1451 	ldw	x, (0x07, sp)
      00A28F 89               [ 2] 1452 	pushw	x
      00A290 1E 0F            [ 2] 1453 	ldw	x, (0x0f, sp)
      00A292 89               [ 2] 1454 	pushw	x
      00A293 90 89            [ 2] 1455 	pushw	y
      00A295 CD B1 34         [ 4] 1456 	call	___fsmul
      00A298 4B 00            [ 1] 1457 	push	#0x00
      00A29A 4B 00            [ 1] 1458 	push	#0x00
      00A29C 4B 00            [ 1] 1459 	push	#0x00
      00A29E 4B 4F            [ 1] 1460 	push	#0x4f
      00A2A0 89               [ 2] 1461 	pushw	x
      00A2A1 90 89            [ 2] 1462 	pushw	y
      00A2A3 CD BA C1         [ 4] 1463 	call	___fsdiv
      00A2A6 1F 0B            [ 2] 1464 	ldw	(0x0b, sp), x
      00A2A8 17 09            [ 2] 1465 	ldw	(0x09, sp), y
                                   1466 ;	src\bme280.c: 382: val2 = p * (float)CalibData.dig_P8 / 32768.0;
      00A2AA CE 00 15         [ 2] 1467 	ldw	x, _CalibData+20
      00A2AD CD B8 19         [ 4] 1468 	call	___sint2fs
      00A2B0 89               [ 2] 1469 	pushw	x
      00A2B1 90 89            [ 2] 1470 	pushw	y
      00A2B3 1E 0B            [ 2] 1471 	ldw	x, (0x0b, sp)
      00A2B5 89               [ 2] 1472 	pushw	x
      00A2B6 1E 0B            [ 2] 1473 	ldw	x, (0x0b, sp)
      00A2B8 89               [ 2] 1474 	pushw	x
      00A2B9 CD B1 34         [ 4] 1475 	call	___fsmul
      00A2BC 4B 00            [ 1] 1476 	push	#0x00
      00A2BE 4B 00            [ 1] 1477 	push	#0x00
      00A2C0 4B 00            [ 1] 1478 	push	#0x00
      00A2C2 4B 47            [ 1] 1479 	push	#0x47
      00A2C4 89               [ 2] 1480 	pushw	x
      00A2C5 90 89            [ 2] 1481 	pushw	y
      00A2C7 CD BA C1         [ 4] 1482 	call	___fsdiv
                                   1483 ;	src\bme280.c: 383: p = p + (val1 + val2 + (float)CalibData.dig_P7)/16.0;
      00A2CA 89               [ 2] 1484 	pushw	x
      00A2CB 90 89            [ 2] 1485 	pushw	y
      00A2CD 1E 0F            [ 2] 1486 	ldw	x, (0x0f, sp)
      00A2CF 89               [ 2] 1487 	pushw	x
      00A2D0 1E 0F            [ 2] 1488 	ldw	x, (0x0f, sp)
      00A2D2 89               [ 2] 1489 	pushw	x
      00A2D3 CD B5 A7         [ 4] 1490 	call	___fsadd
      00A2D6 1F 0B            [ 2] 1491 	ldw	(0x0b, sp), x
      00A2D8 17 09            [ 2] 1492 	ldw	(0x09, sp), y
      00A2DA CE 00 13         [ 2] 1493 	ldw	x, _CalibData+18
      00A2DD CD B8 19         [ 4] 1494 	call	___sint2fs
      00A2E0 89               [ 2] 1495 	pushw	x
      00A2E1 90 89            [ 2] 1496 	pushw	y
      00A2E3 1E 0F            [ 2] 1497 	ldw	x, (0x0f, sp)
      00A2E5 89               [ 2] 1498 	pushw	x
      00A2E6 1E 0F            [ 2] 1499 	ldw	x, (0x0f, sp)
      00A2E8 89               [ 2] 1500 	pushw	x
      00A2E9 CD B5 A7         [ 4] 1501 	call	___fsadd
      00A2EC 4B 00            [ 1] 1502 	push	#0x00
      00A2EE 4B 00            [ 1] 1503 	push	#0x00
      00A2F0 4B 80            [ 1] 1504 	push	#0x80
      00A2F2 4B 41            [ 1] 1505 	push	#0x41
      00A2F4 89               [ 2] 1506 	pushw	x
      00A2F5 90 89            [ 2] 1507 	pushw	y
      00A2F7 CD BA C1         [ 4] 1508 	call	___fsdiv
      00A2FA 89               [ 2] 1509 	pushw	x
      00A2FB 90 89            [ 2] 1510 	pushw	y
      00A2FD 1E 0B            [ 2] 1511 	ldw	x, (0x0b, sp)
      00A2FF 89               [ 2] 1512 	pushw	x
      00A300 1E 0B            [ 2] 1513 	ldw	x, (0x0b, sp)
      00A302 89               [ 2] 1514 	pushw	x
      00A303 CD B5 A7         [ 4] 1515 	call	___fsadd
                                   1516 ;	src\bme280.c: 407: return p;
                                   1517 ;	src\bme280.c: 408: }
      00A306 5B 0C            [ 2] 1518 	addw	sp, #12
      00A308 81               [ 4] 1519 	ret
                                   1520 ;	src\bme280.c: 410: float BME280_ReadHumidity(void) {
                                   1521 ;	-----------------------------------------
                                   1522 ;	 function BME280_ReadHumidity
                                   1523 ;	-----------------------------------------
      00A309                       1524 _BME280_ReadHumidity:
      00A309 52 10            [ 2] 1525 	sub	sp, #16
                                   1526 ;	src\bme280.c: 416: hum_raw = Registers.humidity;
      00A30B 90 CE 00 2A      [ 2] 1527 	ldw	y, _Registers+8
                                   1528 ;	src\bme280.c: 422: hum_raw_sign = ((int32_t)hum_raw)&0x0000FFFF;
      00A30F 5F               [ 1] 1529 	clrw	x
      00A310 90 5D            [ 2] 1530 	tnzw	y
      00A312 2A 01            [ 1] 1531 	jrpl	00117$
      00A314 5A               [ 2] 1532 	decw	x
      00A315                       1533 00117$:
      00A315 5F               [ 1] 1534 	clrw	x
                                   1535 ;	src\bme280.c: 423: v_x1_u32r = (temper_int - ((int32_t)76800));
      00A316 C6 00 2F         [ 1] 1536 	ld	a, _temper_int+3
      00A319 6B 04            [ 1] 1537 	ld	(0x04, sp), a
      00A31B C6 00 2E         [ 1] 1538 	ld	a, _temper_int+2
      00A31E A0 2C            [ 1] 1539 	sub	a, #0x2c
      00A320 6B 03            [ 1] 1540 	ld	(0x03, sp), a
      00A322 C6 00 2D         [ 1] 1541 	ld	a, _temper_int+1
      00A325 A2 01            [ 1] 1542 	sbc	a, #0x01
      00A327 6B 02            [ 1] 1543 	ld	(0x02, sp), a
      00A329 C6 00 2C         [ 1] 1544 	ld	a, _temper_int+0
      00A32C A2 00            [ 1] 1545 	sbc	a, #0x00
                                   1546 ;	src\bme280.c: 424: v_x1_u32r = (((((hum_raw_sign << 14) - (((int32_t)CalibData.dig_H4) << 20) - \
      00A32E 88               [ 1] 1547 	push	a
      00A32F A6 0E            [ 1] 1548 	ld	a, #0x0e
      00A331                       1549 00118$:
      00A331 90 58            [ 2] 1550 	sllw	y
      00A333 59               [ 2] 1551 	rlcw	x
      00A334 4A               [ 1] 1552 	dec	a
      00A335 26 FA            [ 1] 1553 	jrne	00118$
      00A337 1F 0A            [ 2] 1554 	ldw	(0x0a, sp), x
      00A339 84               [ 1] 1555 	pop	a
      00A33A CE 00 1D         [ 2] 1556 	ldw	x, _CalibData+28
      00A33D 1F 07            [ 2] 1557 	ldw	(0x07, sp), x
      00A33F 5F               [ 1] 1558 	clrw	x
      00A340 0D 07            [ 1] 1559 	tnz	(0x07, sp)
      00A342 2A 01            [ 1] 1560 	jrpl	00120$
      00A344 5A               [ 2] 1561 	decw	x
      00A345                       1562 00120$:
      00A345 88               [ 1] 1563 	push	a
      00A346 1E 08            [ 2] 1564 	ldw	x, (0x08, sp)
      00A348 0F 11            [ 1] 1565 	clr	(0x11, sp)
      00A34A 0F 10            [ 1] 1566 	clr	(0x10, sp)
      00A34C A6 04            [ 1] 1567 	ld	a, #0x04
      00A34E                       1568 00121$:
      00A34E 58               [ 2] 1569 	sllw	x
      00A34F 4A               [ 1] 1570 	dec	a
      00A350 26 FC            [ 1] 1571 	jrne	00121$
      00A352 84               [ 1] 1572 	pop	a
      00A353 72 F2 0F         [ 2] 1573 	subw	y, (0x0f, sp)
      00A356 17 07            [ 2] 1574 	ldw	(0x07, sp), y
      00A358 88               [ 1] 1575 	push	a
      00A359 7B 0B            [ 1] 1576 	ld	a, (0x0b, sp)
      00A35B 89               [ 2] 1577 	pushw	x
      00A35C 12 02            [ 1] 1578 	sbc	a, (2, sp)
      00A35E 85               [ 2] 1579 	popw	x
      00A35F 6B 07            [ 1] 1580 	ld	(0x07, sp), a
      00A361 7B 0A            [ 1] 1581 	ld	a, (0x0a, sp)
      00A363 89               [ 2] 1582 	pushw	x
      00A364 12 01            [ 1] 1583 	sbc	a, (1, sp)
      00A366 85               [ 2] 1584 	popw	x
      00A367 6B 06            [ 1] 1585 	ld	(0x06, sp), a
      00A369 84               [ 1] 1586 	pop	a
      00A36A CE 00 1F         [ 2] 1587 	ldw	x, _CalibData+30
      00A36D 1F 0F            [ 2] 1588 	ldw	(0x0f, sp), x
      00A36F 5F               [ 1] 1589 	clrw	x
      00A370 0D 0F            [ 1] 1590 	tnz	(0x0f, sp)
      00A372 2A 01            [ 1] 1591 	jrpl	00123$
      00A374 5A               [ 2] 1592 	decw	x
      00A375                       1593 00123$:
      00A375 88               [ 1] 1594 	push	a
      00A376 16 04            [ 2] 1595 	ldw	y, (0x04, sp)
      00A378 90 89            [ 2] 1596 	pushw	y
      00A37A 61               [ 1] 1597 	exg	a, yl
      00A37B 7B 05            [ 1] 1598 	ld	a, (0x05, sp)
      00A37D 61               [ 1] 1599 	exg	a, yl
      00A37E 90 89            [ 2] 1600 	pushw	y
      00A380 5B 01            [ 2] 1601 	addw	sp, #1
      00A382 88               [ 1] 1602 	push	a
      00A383 16 14            [ 2] 1603 	ldw	y, (0x14, sp)
      00A385 90 89            [ 2] 1604 	pushw	y
      00A387 89               [ 2] 1605 	pushw	x
      00A388 CD BB 47         [ 4] 1606 	call	__mullong
      00A38B 5B 08            [ 2] 1607 	addw	sp, #8
      00A38D 1F 0C            [ 2] 1608 	ldw	(0x0c, sp), x
      00A38F 17 0A            [ 2] 1609 	ldw	(0x0a, sp), y
      00A391 84               [ 1] 1610 	pop	a
      00A392 1E 07            [ 2] 1611 	ldw	x, (0x07, sp)
      00A394 72 F0 0B         [ 2] 1612 	subw	x, (0x0b, sp)
      00A397 88               [ 1] 1613 	push	a
      00A398 7B 07            [ 1] 1614 	ld	a, (0x07, sp)
      00A39A 12 0B            [ 1] 1615 	sbc	a, (0x0b, sp)
      00A39C 6B 0F            [ 1] 1616 	ld	(0x0f, sp), a
      00A39E 7B 06            [ 1] 1617 	ld	a, (0x06, sp)
      00A3A0 12 0A            [ 1] 1618 	sbc	a, (0x0a, sp)
      00A3A2 6B 0E            [ 1] 1619 	ld	(0x0e, sp), a
      00A3A4 84               [ 1] 1620 	pop	a
      00A3A5 1C 40 00         [ 2] 1621 	addw	x, #0x4000
      00A3A8 16 0D            [ 2] 1622 	ldw	y, (0x0d, sp)
      00A3AA 24 02            [ 1] 1623 	jrnc	00124$
      00A3AC 90 5C            [ 1] 1624 	incw	y
      00A3AE                       1625 00124$:
      00A3AE 88               [ 1] 1626 	push	a
      00A3AF A6 0F            [ 1] 1627 	ld	a, #0x0f
      00A3B1                       1628 00125$:
      00A3B1 90 57            [ 2] 1629 	sraw	y
      00A3B3 56               [ 2] 1630 	rrcw	x
      00A3B4 4A               [ 1] 1631 	dec	a
      00A3B5 26 FA            [ 1] 1632 	jrne	00125$
      00A3B7 1F 08            [ 2] 1633 	ldw	(0x08, sp), x
      00A3B9 17 06            [ 2] 1634 	ldw	(0x06, sp), y
      00A3BB 84               [ 1] 1635 	pop	a
      00A3BC AE 00 01         [ 2] 1636 	ldw	x, #(_CalibData+0)
      00A3BF 88               [ 1] 1637 	push	a
      00A3C0 E6 20            [ 1] 1638 	ld	a, (0x20, x)
      00A3C2 97               [ 1] 1639 	ld	xl, a
      00A3C3 49               [ 1] 1640 	rlc	a
      00A3C4 4F               [ 1] 1641 	clr	a
      00A3C5 A2 00            [ 1] 1642 	sbc	a, #0x00
      00A3C7 95               [ 1] 1643 	ld	xh, a
      00A3C8 6B 0F            [ 1] 1644 	ld	(0x0f, sp), a
      00A3CA 6B 0E            [ 1] 1645 	ld	(0x0e, sp), a
      00A3CC 84               [ 1] 1646 	pop	a
      00A3CD 88               [ 1] 1647 	push	a
      00A3CE 89               [ 2] 1648 	pushw	x
      00A3CF 1E 10            [ 2] 1649 	ldw	x, (0x10, sp)
      00A3D1 89               [ 2] 1650 	pushw	x
      00A3D2 1E 08            [ 2] 1651 	ldw	x, (0x08, sp)
      00A3D4 89               [ 2] 1652 	pushw	x
      00A3D5 41               [ 1] 1653 	exg	a, xl
      00A3D6 7B 09            [ 1] 1654 	ld	a, (0x09, sp)
      00A3D8 41               [ 1] 1655 	exg	a, xl
      00A3D9 89               [ 2] 1656 	pushw	x
      00A3DA 5B 01            [ 2] 1657 	addw	sp, #1
      00A3DC 88               [ 1] 1658 	push	a
      00A3DD CD BB 47         [ 4] 1659 	call	__mullong
      00A3E0 5B 08            [ 2] 1660 	addw	sp, #8
      00A3E2 4F               [ 1] 1661 	clr	a
      00A3E3 90 5D            [ 2] 1662 	tnzw	y
      00A3E5 2A 01            [ 1] 1663 	jrpl	00127$
      00A3E7 4A               [ 1] 1664 	dec	a
      00A3E8                       1665 00127$:
      00A3E8 90 01            [ 1] 1666 	rrwa	y
      00A3EA 01               [ 1] 1667 	rrwa	x
      00A3EB 84               [ 1] 1668 	pop	a
      00A3EC 90 57            [ 2] 1669 	sraw	y
      00A3EE 56               [ 2] 1670 	rrcw	x
      00A3EF 90 57            [ 2] 1671 	sraw	y
      00A3F1 56               [ 2] 1672 	rrcw	x
      00A3F2 1F 0B            [ 2] 1673 	ldw	(0x0b, sp), x
      00A3F4 17 09            [ 2] 1674 	ldw	(0x09, sp), y
      00A3F6 AE 00 01         [ 2] 1675 	ldw	x, #(_CalibData+0)
      00A3F9 88               [ 1] 1676 	push	a
      00A3FA E6 1B            [ 1] 1677 	ld	a, (0x1b, x)
      00A3FC 97               [ 1] 1678 	ld	xl, a
      00A3FD 84               [ 1] 1679 	pop	a
      00A3FE 02               [ 1] 1680 	rlwa	x
      00A3FF 4F               [ 1] 1681 	clr	a
      00A400 01               [ 1] 1682 	rrwa	x
      00A401 0F 0E            [ 1] 1683 	clr	(0x0e, sp)
      00A403 0F 0D            [ 1] 1684 	clr	(0x0d, sp)
      00A405 89               [ 2] 1685 	pushw	x
      00A406 1E 0F            [ 2] 1686 	ldw	x, (0x0f, sp)
      00A408 89               [ 2] 1687 	pushw	x
      00A409 1E 07            [ 2] 1688 	ldw	x, (0x07, sp)
      00A40B 89               [ 2] 1689 	pushw	x
      00A40C 41               [ 1] 1690 	exg	a, xl
      00A40D 7B 08            [ 1] 1691 	ld	a, (0x08, sp)
      00A40F 41               [ 1] 1692 	exg	a, xl
      00A410 89               [ 2] 1693 	pushw	x
      00A411 5B 01            [ 2] 1694 	addw	sp, #1
      00A413 88               [ 1] 1695 	push	a
      00A414 CD BB 47         [ 4] 1696 	call	__mullong
      00A417 5B 08            [ 2] 1697 	addw	sp, #8
      00A419 A6 0B            [ 1] 1698 	ld	a, #0x0b
      00A41B                       1699 00128$:
      00A41B 90 57            [ 2] 1700 	sraw	y
      00A41D 56               [ 2] 1701 	rrcw	x
      00A41E 4A               [ 1] 1702 	dec	a
      00A41F 26 FA            [ 1] 1703 	jrne	00128$
      00A421 17 0D            [ 2] 1704 	ldw	(0x0d, sp), y
      00A423 1C 80 00         [ 2] 1705 	addw	x, #0x8000
      00A426 16 0D            [ 2] 1706 	ldw	y, (0x0d, sp)
      00A428 24 02            [ 1] 1707 	jrnc	00130$
      00A42A 90 5C            [ 1] 1708 	incw	y
      00A42C                       1709 00130$:
      00A42C 89               [ 2] 1710 	pushw	x
      00A42D 90 89            [ 2] 1711 	pushw	y
      00A42F 1E 0F            [ 2] 1712 	ldw	x, (0x0f, sp)
      00A431 89               [ 2] 1713 	pushw	x
      00A432 1E 0F            [ 2] 1714 	ldw	x, (0x0f, sp)
      00A434 89               [ 2] 1715 	pushw	x
      00A435 CD BB 47         [ 4] 1716 	call	__mullong
      00A438 5B 08            [ 2] 1717 	addw	sp, #8
      00A43A 51               [ 1] 1718 	exgw	x, y
      00A43B 4F               [ 1] 1719 	clr	a
      00A43C 5D               [ 2] 1720 	tnzw	x
      00A43D 2A 01            [ 1] 1721 	jrpl	00131$
      00A43F 4A               [ 1] 1722 	dec	a
      00A440                       1723 00131$:
      00A440 01               [ 1] 1724 	rrwa	x
      00A441 90 01            [ 1] 1725 	rrwa	y
      00A443 57               [ 2] 1726 	sraw	x
      00A444 90 56            [ 2] 1727 	rrcw	y
      00A446 57               [ 2] 1728 	sraw	x
      00A447 90 56            [ 2] 1729 	rrcw	y
      00A449 1C 00 20         [ 2] 1730 	addw	x, #0x0020
      00A44C 1F 09            [ 2] 1731 	ldw	(0x09, sp), x
      00A44E CE 00 1A         [ 2] 1732 	ldw	x, _CalibData+25
      00A451 9E               [ 1] 1733 	ld	a, xh
      00A452 49               [ 1] 1734 	rlc	a
      00A453 4F               [ 1] 1735 	clr	a
      00A454 A2 00            [ 1] 1736 	sbc	a, #0x00
      00A456 6B 0E            [ 1] 1737 	ld	(0x0e, sp), a
      00A458 6B 0D            [ 1] 1738 	ld	(0x0d, sp), a
      00A45A 89               [ 2] 1739 	pushw	x
      00A45B 1E 0F            [ 2] 1740 	ldw	x, (0x0f, sp)
      00A45D 89               [ 2] 1741 	pushw	x
      00A45E 90 89            [ 2] 1742 	pushw	y
      00A460 1E 0F            [ 2] 1743 	ldw	x, (0x0f, sp)
      00A462 89               [ 2] 1744 	pushw	x
      00A463 CD BB 47         [ 4] 1745 	call	__mullong
      00A466 5B 08            [ 2] 1746 	addw	sp, #8
      00A468 17 0D            [ 2] 1747 	ldw	(0x0d, sp), y
      00A46A 1C 20 00         [ 2] 1748 	addw	x, #0x2000
      00A46D 16 0D            [ 2] 1749 	ldw	y, (0x0d, sp)
      00A46F 24 02            [ 1] 1750 	jrnc	00132$
      00A471 90 5C            [ 1] 1751 	incw	y
      00A473                       1752 00132$:
      00A473 A6 0E            [ 1] 1753 	ld	a, #0x0e
      00A475                       1754 00133$:
      00A475 90 57            [ 2] 1755 	sraw	y
      00A477 56               [ 2] 1756 	rrcw	x
      00A478 4A               [ 1] 1757 	dec	a
      00A479 26 FA            [ 1] 1758 	jrne	00133$
      00A47B 89               [ 2] 1759 	pushw	x
      00A47C 90 89            [ 2] 1760 	pushw	y
      00A47E 1E 0B            [ 2] 1761 	ldw	x, (0x0b, sp)
      00A480 89               [ 2] 1762 	pushw	x
      00A481 1E 0B            [ 2] 1763 	ldw	x, (0x0b, sp)
      00A483 89               [ 2] 1764 	pushw	x
      00A484 CD BB 47         [ 4] 1765 	call	__mullong
      00A487 5B 08            [ 2] 1766 	addw	sp, #8
      00A489 1F 0B            [ 2] 1767 	ldw	(0x0b, sp), x
                                   1768 ;	src\bme280.c: 429: v_x1_u32r = (v_x1_u32r - (((((v_x1_u32r >> 15) * (v_x1_u32r >> 15)) >> 7) * \
      00A48B 17 0D            [ 2] 1769 	ldw	(0x0d, sp), y
      00A48D 1E 0B            [ 2] 1770 	ldw	x, (0x0b, sp)
      00A48F A6 0F            [ 1] 1771 	ld	a, #0x0f
      00A491                       1772 00135$:
      00A491 07 0D            [ 1] 1773 	sra	(0x0d, sp)
      00A493 06 0E            [ 1] 1774 	rrc	(0x0e, sp)
      00A495 56               [ 2] 1775 	rrcw	x
      00A496 4A               [ 1] 1776 	dec	a
      00A497 26 F8            [ 1] 1777 	jrne	00135$
      00A499 90 89            [ 2] 1778 	pushw	y
      00A49B 89               [ 2] 1779 	pushw	x
      00A49C 7B 12            [ 1] 1780 	ld	a, (0x12, sp)
      00A49E 88               [ 1] 1781 	push	a
      00A49F 7B 12            [ 1] 1782 	ld	a, (0x12, sp)
      00A4A1 88               [ 1] 1783 	push	a
      00A4A2 89               [ 2] 1784 	pushw	x
      00A4A3 1E 15            [ 2] 1785 	ldw	x, (0x15, sp)
      00A4A5 89               [ 2] 1786 	pushw	x
      00A4A6 CD BB 47         [ 4] 1787 	call	__mullong
      00A4A9 5B 08            [ 2] 1788 	addw	sp, #8
      00A4AB 61               [ 1] 1789 	exg	a, yl
      00A4AC 6B 10            [ 1] 1790 	ld	(0x10, sp), a
      00A4AE 61               [ 1] 1791 	exg	a, yl
      00A4AF 90 9E            [ 1] 1792 	ld	a, yh
      00A4B1 90 85            [ 2] 1793 	popw	y
      00A4B3 88               [ 1] 1794 	push	a
      00A4B4 7B 0F            [ 1] 1795 	ld	a, (0x0f, sp)
      00A4B6 6B 07            [ 1] 1796 	ld	(0x07, sp), a
      00A4B8 84               [ 1] 1797 	pop	a
      00A4B9 47               [ 1] 1798 	sra	a
      00A4BA 06 06            [ 1] 1799 	rrc	(0x06, sp)
      00A4BC 56               [ 2] 1800 	rrcw	x
      00A4BD 47               [ 1] 1801 	sra	a
      00A4BE 06 06            [ 1] 1802 	rrc	(0x06, sp)
      00A4C0 56               [ 2] 1803 	rrcw	x
      00A4C1 47               [ 1] 1804 	sra	a
      00A4C2 06 06            [ 1] 1805 	rrc	(0x06, sp)
      00A4C4 56               [ 2] 1806 	rrcw	x
      00A4C5 47               [ 1] 1807 	sra	a
      00A4C6 06 06            [ 1] 1808 	rrc	(0x06, sp)
      00A4C8 56               [ 2] 1809 	rrcw	x
      00A4C9 47               [ 1] 1810 	sra	a
      00A4CA 06 06            [ 1] 1811 	rrc	(0x06, sp)
      00A4CC 56               [ 2] 1812 	rrcw	x
      00A4CD 47               [ 1] 1813 	sra	a
      00A4CE 06 06            [ 1] 1814 	rrc	(0x06, sp)
      00A4D0 56               [ 2] 1815 	rrcw	x
      00A4D1 47               [ 1] 1816 	sra	a
      00A4D2 06 06            [ 1] 1817 	rrc	(0x06, sp)
      00A4D4 56               [ 2] 1818 	rrcw	x
      00A4D5 1F 07            [ 2] 1819 	ldw	(0x07, sp), x
      00A4D7 6B 05            [ 1] 1820 	ld	(0x05, sp), a
      00A4D9 C6 00 19         [ 1] 1821 	ld	a, _CalibData+24
      00A4DC 5F               [ 1] 1822 	clrw	x
      00A4DD 1F 0D            [ 2] 1823 	ldw	(0x0d, sp), x
      00A4DF 90 89            [ 2] 1824 	pushw	y
      00A4E1 88               [ 1] 1825 	push	a
      00A4E2 9E               [ 1] 1826 	ld	a, xh
      00A4E3 88               [ 1] 1827 	push	a
      00A4E4 1E 11            [ 2] 1828 	ldw	x, (0x11, sp)
      00A4E6 89               [ 2] 1829 	pushw	x
      00A4E7 1E 0D            [ 2] 1830 	ldw	x, (0x0d, sp)
      00A4E9 89               [ 2] 1831 	pushw	x
      00A4EA 1E 0D            [ 2] 1832 	ldw	x, (0x0d, sp)
      00A4EC 89               [ 2] 1833 	pushw	x
      00A4ED CD BB 47         [ 4] 1834 	call	__mullong
      00A4F0 5B 08            [ 2] 1835 	addw	sp, #8
      00A4F2 17 0F            [ 2] 1836 	ldw	(0x0f, sp), y
      00A4F4 90 85            [ 2] 1837 	popw	y
      00A4F6 7B 0E            [ 1] 1838 	ld	a, (0x0e, sp)
      00A4F8 07 0D            [ 1] 1839 	sra	(0x0d, sp)
      00A4FA 46               [ 1] 1840 	rrc	a
      00A4FB 56               [ 2] 1841 	rrcw	x
      00A4FC 07 0D            [ 1] 1842 	sra	(0x0d, sp)
      00A4FE 46               [ 1] 1843 	rrc	a
      00A4FF 56               [ 2] 1844 	rrcw	x
      00A500 07 0D            [ 1] 1845 	sra	(0x0d, sp)
      00A502 46               [ 1] 1846 	rrc	a
      00A503 56               [ 2] 1847 	rrcw	x
      00A504 07 0D            [ 1] 1848 	sra	(0x0d, sp)
      00A506 46               [ 1] 1849 	rrc	a
      00A507 56               [ 2] 1850 	rrcw	x
      00A508 1F 0F            [ 2] 1851 	ldw	(0x0f, sp), x
      00A50A 1E 0B            [ 2] 1852 	ldw	x, (0x0b, sp)
      00A50C 72 F0 0F         [ 2] 1853 	subw	x, (0x0f, sp)
      00A50F 88               [ 1] 1854 	push	a
      00A510 90 9F            [ 1] 1855 	ld	a, yl
      00A512 12 01            [ 1] 1856 	sbc	a, (1, sp)
      00A514 90 02            [ 1] 1857 	rlwa	y
      00A516 12 0E            [ 1] 1858 	sbc	a, (0x0e, sp)
      00A518 90 95            [ 1] 1859 	ld	yh, a
      00A51A 84               [ 1] 1860 	pop	a
      00A51B 1F 0F            [ 2] 1861 	ldw	(0x0f, sp), x
      00A51D 17 0D            [ 2] 1862 	ldw	(0x0d, sp), y
                                   1863 ;	src\bme280.c: 431: v_x1_u32r = (v_x1_u32r < 0) ? 0 : v_x1_u32r;
      00A51F 0D 0D            [ 1] 1864 	tnz	(0x0d, sp)
      00A521 2A 05            [ 1] 1865 	jrpl	00103$
      00A523 5F               [ 1] 1866 	clrw	x
      00A524 1F 0F            [ 2] 1867 	ldw	(0x0f, sp), x
      00A526 1F 0D            [ 2] 1868 	ldw	(0x0d, sp), x
      00A528                       1869 00103$:
                                   1870 ;	src\bme280.c: 432: v_x1_u32r = (v_x1_u32r > 419430400) ? 419430400 : v_x1_u32r;
      00A528 5F               [ 1] 1871 	clrw	x
      00A529 13 0F            [ 2] 1872 	cpw	x, (0x0f, sp)
      00A52B 4F               [ 1] 1873 	clr	a
      00A52C 12 0E            [ 1] 1874 	sbc	a, (0x0e, sp)
      00A52E A6 19            [ 1] 1875 	ld	a, #0x19
      00A530 12 0D            [ 1] 1876 	sbc	a, (0x0d, sp)
      00A532 2E 07            [ 1] 1877 	jrsge	00105$
      00A534 5F               [ 1] 1878 	clrw	x
      00A535 1F 0F            [ 2] 1879 	ldw	(0x0f, sp), x
      00A537 AE 19 00         [ 2] 1880 	ldw	x, #0x1900
      00A53A C5                    1881 	.byte 0xc5
      00A53B                       1882 00105$:
      00A53B 1E 0D            [ 2] 1883 	ldw	x, (0x0d, sp)
      00A53D                       1884 00106$:
      00A53D 16 0F            [ 2] 1885 	ldw	y, (0x0f, sp)
                                   1886 ;	src\bme280.c: 433: hum_float = (uint32_t)(v_x1_u32r >> 12);
      00A53F A6 0C            [ 1] 1887 	ld	a, #0x0c
      00A541                       1888 00139$:
      00A541 57               [ 2] 1889 	sraw	x
      00A542 90 56            [ 2] 1890 	rrcw	y
      00A544 4A               [ 1] 1891 	dec	a
      00A545 26 FA            [ 1] 1892 	jrne	00139$
      00A547 90 89            [ 2] 1893 	pushw	y
      00A549 89               [ 2] 1894 	pushw	x
      00A54A CD B3 DD         [ 4] 1895 	call	___ulong2fs
      00A54D 5B 04            [ 2] 1896 	addw	sp, #4
                                   1897 ;	src\bme280.c: 434: hum_float /= 1024.0f;
      00A54F 4B 00            [ 1] 1898 	push	#0x00
      00A551 4B 00            [ 1] 1899 	push	#0x00
      00A553 4B 80            [ 1] 1900 	push	#0x80
      00A555 4B 44            [ 1] 1901 	push	#0x44
      00A557 89               [ 2] 1902 	pushw	x
      00A558 90 89            [ 2] 1903 	pushw	y
      00A55A CD BA C1         [ 4] 1904 	call	___fsdiv
                                   1905 ;	src\bme280.c: 435: return hum_float;
                                   1906 ;	src\bme280.c: 436: }
      00A55D 5B 10            [ 2] 1907 	addw	sp, #16
      00A55F 81               [ 4] 1908 	ret
                                   1909 ;	src\bme280.c: 438: float BME280_ReadAltitude(float seaLevel) {
                                   1910 ;	-----------------------------------------
                                   1911 ;	 function BME280_ReadAltitude
                                   1912 ;	-----------------------------------------
      00A560                       1913 _BME280_ReadAltitude:
                                   1914 ;	src\bme280.c: 440: float atm = BME280_ReadPressure();
      00A560 CD A1 66         [ 4] 1915 	call	_BME280_ReadPressure
                                   1916 ;	src\bme280.c: 442: return att;
      00A563 5F               [ 1] 1917 	clrw	x
      00A564 90 5F            [ 1] 1918 	clrw	y
                                   1919 ;	src\bme280.c: 443: }
      00A566 89               [ 2] 1920 	pushw	x
      00A567 1E 03            [ 2] 1921 	ldw	x, (3, sp)
      00A569 1F 07            [ 2] 1922 	ldw	(7, sp), x
      00A56B 85               [ 2] 1923 	popw	x
      00A56C 5B 04            [ 2] 1924 	addw	sp, #4
      00A56E 81               [ 4] 1925 	ret
                                   1926 	.area CODE
                                   1927 	.area CONST
                                   1928 	.area INITIALIZER
                                   1929 	.area CABS (ABS)
