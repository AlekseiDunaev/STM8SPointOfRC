                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module bme280
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_Read_Bytes
                                     12 	.globl _I2C_Read_Byte
                                     13 	.globl _I2C_Send_Bytes
                                     14 	.globl _GPIO_WriteLow
                                     15 	.globl _GPIO_WriteHigh
                                     16 	.globl _temper_int
                                     17 	.globl _CalibData
                                     18 	.globl _Error
                                     19 	.globl _BME280_Setup
                                     20 	.globl _BME280_WriteReg
                                     21 	.globl _BME280_ReadReg
                                     22 	.globl _BME280_ReadReg_U16
                                     23 	.globl _BME280_ReadReg_LE_U16
                                     24 	.globl _BME280_ReadReg_U24
                                     25 	.globl _BME280_ReadReg_LE_U24
                                     26 	.globl _BME280_ReadReg_S16
                                     27 	.globl _BME280_ReadReg_LE_S16
                                     28 	.globl _BME280_ReadStatus
                                     29 	.globl _BME280_ReadCoefficients
                                     30 	.globl _BME280_SetStandby
                                     31 	.globl _BME280_SetFilter
                                     32 	.globl _BME280_SetOversamplingTemper
                                     33 	.globl _BME280_SetOversamplingPressure
                                     34 	.globl _BME280_SetOversamplingHum
                                     35 	.globl _BME280_SetMode
                                     36 	.globl _BME280_ReadTemperature
                                     37 	.globl _BME280_ReadPressure
                                     38 	.globl _BME280_ReadHumidity
                                     39 ;--------------------------------------------------------
                                     40 ; ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area DATA
      000001                         43 _CalibData::
      000001                         44 	.ds 33
      000022                         45 _temper_int::
      000022                         46 	.ds 4
                                     47 ;--------------------------------------------------------
                                     48 ; ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area INITIALIZED
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DABS (ABS)
                                     55 
                                     56 ; default segment ordering for linker
                                     57 	.area HOME
                                     58 	.area GSINIT
                                     59 	.area GSFINAL
                                     60 	.area CONST
                                     61 	.area INITIALIZER
                                     62 	.area CODE
                                     63 
                                     64 ;--------------------------------------------------------
                                     65 ; global & static initialisations
                                     66 ;--------------------------------------------------------
                                     67 	.area HOME
                                     68 	.area GSINIT
                                     69 	.area GSFINAL
                                     70 	.area GSINIT
                                     71 ;--------------------------------------------------------
                                     72 ; Home
                                     73 ;--------------------------------------------------------
                                     74 	.area HOME
                                     75 	.area HOME
                                     76 ;--------------------------------------------------------
                                     77 ; code
                                     78 ;--------------------------------------------------------
                                     79 	.area CODE
                                     80 ;	src\bme280.c: 16: void Error(void) {
                                     81 ;	-----------------------------------------
                                     82 ;	 function Error
                                     83 ;	-----------------------------------------
      0095EF                         84 _Error:
                                     85 ;	src\bme280.c: 17: LED_OFF;
      0095EF A6 20            [ 1]   86 	ld	a, #0x20
      0095F1 AE 50 14         [ 2]   87 	ldw	x, #0x5014
                                     88 ;	src\bme280.c: 18: }
      0095F4 CC 88 6B         [ 2]   89 	jp	_GPIO_WriteHigh
                                     90 ;	src\bme280.c: 20: void BME280_Setup(void) {
                                     91 ;	-----------------------------------------
                                     92 ;	 function BME280_Setup
                                     93 ;	-----------------------------------------
      0095F7                         94 _BME280_Setup:
                                     95 ;	src\bme280.c: 23: uint8_t res = BME280_ReadReg(BME280_REG_ID);
      0095F7 A6 D0            [ 1]   96 	ld	a, #0xd0
      0095F9 CD 96 58         [ 4]   97 	call	_BME280_ReadReg
                                     98 ;	src\bme280.c: 28: if (res != BME280_ID) {
      0095FC A1 60            [ 1]   99 	cp	a, #0x60
      0095FE 27 03            [ 1]  100 	jreq	00102$
                                    101 ;	src\bme280.c: 29: Error();
                                    102 ;	src\bme280.c: 30: return;
      009600 CC 95 EF         [ 2]  103 	jp	_Error
      009603                        104 00102$:
                                    105 ;	src\bme280.c: 33: BME280_WriteReg(BME280_REG_SOFTRESET, BME280_SOFTRESET_VALUE);
      009603 4B B6            [ 1]  106 	push	#0xb6
      009605 A6 E0            [ 1]  107 	ld	a, #0xe0
      009607 CD 96 43         [ 4]  108 	call	_BME280_WriteReg
                                    109 ;	src\bme280.c: 34: while (BME280_ReadStatus() & BME280_STATUS_IM_UPDATE);
      00960A                        110 00103$:
      00960A CD 98 EA         [ 4]  111 	call	_BME280_ReadStatus
      00960D 44               [ 1]  112 	srl	a
      00960E 25 FA            [ 1]  113 	jrc	00103$
                                    114 ;	src\bme280.c: 36: BME280_ReadCoefficients();
      009610 CD 98 F2         [ 4]  115 	call	_BME280_ReadCoefficients
                                    116 ;	src\bme280.c: 37: BME280_SetStandby(BME280_STBY_1000);
      009613 A6 A0            [ 1]  117 	ld	a, #0xa0
      009615 CD 99 B7         [ 4]  118 	call	_BME280_SetStandby
                                    119 ;	src\bme280.c: 38: BME280_SetFilter(BME280_FILTER_4);
      009618 A6 08            [ 1]  120 	ld	a, #0x08
      00961A CD 99 D1         [ 4]  121 	call	_BME280_SetFilter
                                    122 ;	src\bme280.c: 39: BME280_SetOversamplingTemper(BME280_OSRS_T_x4);
      00961D A6 60            [ 1]  123 	ld	a, #0x60
      00961F CD 99 EB         [ 4]  124 	call	_BME280_SetOversamplingTemper
                                    125 ;	src\bme280.c: 40: BME280_SetOversamplingPressure(BME280_OSRS_P_x2);
      009622 A6 08            [ 1]  126 	ld	a, #0x08
      009624 CD 9A 05         [ 4]  127 	call	_BME280_SetOversamplingPressure
                                    128 ;	src\bme280.c: 41: BME280_SetOversamplingHum(BME280_OSRS_H_x1);
      009627 A6 01            [ 1]  129 	ld	a, #0x01
      009629 CD 9A 1F         [ 4]  130 	call	_BME280_SetOversamplingHum
                                    131 ;	src\bme280.c: 43: value32 = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      00962C A6 F4            [ 1]  132 	ld	a, #0xf4
      00962E CD 96 58         [ 4]  133 	call	_BME280_ReadReg
                                    134 ;	src\bme280.c: 44: value32 |= BME280_ReadReg(BME280_REG_CTRL_HUM) << 8;
      009631 A6 F2            [ 1]  135 	ld	a, #0xf2
      009633 CD 96 58         [ 4]  136 	call	_BME280_ReadReg
                                    137 ;	src\bme280.c: 57: BME280_SetMode(BME280_MODE_NORMAL);
      009636 A6 03            [ 1]  138 	ld	a, #0x03
      009638 CD 9A 44         [ 4]  139 	call	_BME280_SetMode
                                    140 ;	src\bme280.c: 59: LED_ON;
      00963B A6 20            [ 1]  141 	ld	a, #0x20
      00963D AE 50 14         [ 2]  142 	ldw	x, #0x5014
                                    143 ;	src\bme280.c: 60: }
      009640 CC 88 74         [ 2]  144 	jp	_GPIO_WriteLow
                                    145 ;	src\bme280.c: 62: void BME280_WriteReg(uint8_t iReg, uint8_t iValue) {
                                    146 ;	-----------------------------------------
                                    147 ;	 function BME280_WriteReg
                                    148 ;	-----------------------------------------
      009643                        149 _BME280_WriteReg:
      009643 89               [ 2]  150 	pushw	x
                                    151 ;	src\bme280.c: 64: iData[0] = iReg;
      009644 96               [ 1]  152 	ldw	x, sp
      009645 5C               [ 1]  153 	incw	x
      009646 F7               [ 1]  154 	ld	(x), a
                                    155 ;	src\bme280.c: 65: iData[1] = iValue;
      009647 7B 05            [ 1]  156 	ld	a, (0x05, sp)
      009649 6B 02            [ 1]  157 	ld	(0x02, sp), a
                                    158 ;	src\bme280.c: 66: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00964B 89               [ 2]  159 	pushw	x
      00964C AE 00 02         [ 2]  160 	ldw	x, #0x0002
      00964F A6 EE            [ 1]  161 	ld	a, #0xee
      009651 CD A1 99         [ 4]  162 	call	_I2C_Send_Bytes
                                    163 ;	src\bme280.c: 67: }
      009654 85               [ 2]  164 	popw	x
      009655 85               [ 2]  165 	popw	x
      009656 84               [ 1]  166 	pop	a
      009657 FC               [ 2]  167 	jp	(x)
                                    168 ;	src\bme280.c: 69: uint8_t BME280_ReadReg(uint8_t iReg) {
                                    169 ;	-----------------------------------------
                                    170 ;	 function BME280_ReadReg
                                    171 ;	-----------------------------------------
      009658                        172 _BME280_ReadReg:
      009658 88               [ 1]  173 	push	a
                                    174 ;	src\bme280.c: 71: iData[0] = iReg;
      009659 96               [ 1]  175 	ldw	x, sp
      00965A 5C               [ 1]  176 	incw	x
      00965B F7               [ 1]  177 	ld	(x), a
                                    178 ;	src\bme280.c: 72: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00965C 89               [ 2]  179 	pushw	x
      00965D 5F               [ 1]  180 	clrw	x
      00965E 5C               [ 1]  181 	incw	x
      00965F A6 EE            [ 1]  182 	ld	a, #0xee
      009661 CD A1 99         [ 4]  183 	call	_I2C_Send_Bytes
                                    184 ;	src\bme280.c: 73: return I2C_Read_Byte(BME280_ADDRESS);
      009664 A6 EE            [ 1]  185 	ld	a, #0xee
      009666 CD A2 DA         [ 4]  186 	call	_I2C_Read_Byte
                                    187 ;	src\bme280.c: 74: }
      009669 5B 01            [ 2]  188 	addw	sp, #1
      00966B 81               [ 4]  189 	ret
                                    190 ;	src\bme280.c: 76: void BME280_ReadReg_U16(uint8_t iReg, uint16_t *iValue) {
                                    191 ;	-----------------------------------------
                                    192 ;	 function BME280_ReadReg_U16
                                    193 ;	-----------------------------------------
      00966C                        194 _BME280_ReadReg_U16:
      00966C 52 07            [ 2]  195 	sub	sp, #7
      00966E 1F 06            [ 2]  196 	ldw	(0x06, sp), x
                                    197 ;	src\bme280.c: 79: iData[0] = iReg;
      009670 96               [ 1]  198 	ldw	x, sp
      009671 5C               [ 1]  199 	incw	x
      009672 F7               [ 1]  200 	ld	(x), a
                                    201 ;	src\bme280.c: 80: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      009673 89               [ 2]  202 	pushw	x
      009674 5F               [ 1]  203 	clrw	x
      009675 5C               [ 1]  204 	incw	x
      009676 A6 EE            [ 1]  205 	ld	a, #0xee
      009678 CD A1 99         [ 4]  206 	call	_I2C_Send_Bytes
                                    207 ;	src\bme280.c: 81: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      00967B 96               [ 1]  208 	ldw	x, sp
      00967C 5C               [ 1]  209 	incw	x
      00967D 5C               [ 1]  210 	incw	x
      00967E 89               [ 2]  211 	pushw	x
      00967F AE 00 02         [ 2]  212 	ldw	x, #0x0002
      009682 A6 EE            [ 1]  213 	ld	a, #0xee
      009684 CD A3 D9         [ 4]  214 	call	_I2C_Read_Bytes
                                    215 ;	src\bme280.c: 82: *iValue = iRes[0];
      009687 7B 02            [ 1]  216 	ld	a, (0x02, sp)
      009689 90 5F            [ 1]  217 	clrw	y
      00968B 90 97            [ 1]  218 	ld	yl, a
      00968D 1E 06            [ 2]  219 	ldw	x, (0x06, sp)
      00968F FF               [ 2]  220 	ldw	(x), y
                                    221 ;	src\bme280.c: 83: *iValue <<= 8;
      009690 4F               [ 1]  222 	clr	a
      009691 90 02            [ 1]  223 	rlwa	y
      009693 1E 06            [ 2]  224 	ldw	x, (0x06, sp)
      009695 FF               [ 2]  225 	ldw	(x), y
                                    226 ;	src\bme280.c: 84: *iValue += iRes[1];
      009696 7B 03            [ 1]  227 	ld	a, (0x03, sp)
      009698 5F               [ 1]  228 	clrw	x
      009699 97               [ 1]  229 	ld	xl, a
      00969A 1F 04            [ 2]  230 	ldw	(0x04, sp), x
      00969C 72 F9 04         [ 2]  231 	addw	y, (0x04, sp)
      00969F 1E 06            [ 2]  232 	ldw	x, (0x06, sp)
      0096A1 FF               [ 2]  233 	ldw	(x), y
                                    234 ;	src\bme280.c: 85: }
      0096A2 5B 07            [ 2]  235 	addw	sp, #7
      0096A4 81               [ 4]  236 	ret
                                    237 ;	src\bme280.c: 87: void BME280_ReadReg_LE_U16(uint8_t iReg, uint16_t *iValue) {
                                    238 ;	-----------------------------------------
                                    239 ;	 function BME280_ReadReg_LE_U16
                                    240 ;	-----------------------------------------
      0096A5                        241 _BME280_ReadReg_LE_U16:
      0096A5 52 09            [ 2]  242 	sub	sp, #9
      0096A7 1F 08            [ 2]  243 	ldw	(0x08, sp), x
                                    244 ;	src\bme280.c: 90: iData[0] = iReg;
      0096A9 96               [ 1]  245 	ldw	x, sp
      0096AA 5C               [ 1]  246 	incw	x
      0096AB F7               [ 1]  247 	ld	(x), a
                                    248 ;	src\bme280.c: 91: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0096AC 89               [ 2]  249 	pushw	x
      0096AD 5F               [ 1]  250 	clrw	x
      0096AE 5C               [ 1]  251 	incw	x
      0096AF A6 EE            [ 1]  252 	ld	a, #0xee
      0096B1 CD A1 99         [ 4]  253 	call	_I2C_Send_Bytes
                                    254 ;	src\bme280.c: 92: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0096B4 96               [ 1]  255 	ldw	x, sp
      0096B5 5C               [ 1]  256 	incw	x
      0096B6 5C               [ 1]  257 	incw	x
      0096B7 89               [ 2]  258 	pushw	x
      0096B8 AE 00 02         [ 2]  259 	ldw	x, #0x0002
      0096BB A6 EE            [ 1]  260 	ld	a, #0xee
      0096BD CD A3 D9         [ 4]  261 	call	_I2C_Read_Bytes
                                    262 ;	src\bme280.c: 93: *iValue = iRes[0];
      0096C0 7B 02            [ 1]  263 	ld	a, (0x02, sp)
      0096C2 90 5F            [ 1]  264 	clrw	y
      0096C4 90 97            [ 1]  265 	ld	yl, a
      0096C6 1E 08            [ 2]  266 	ldw	x, (0x08, sp)
      0096C8 FF               [ 2]  267 	ldw	(x), y
                                    268 ;	src\bme280.c: 94: *iValue <<= 8;
      0096C9 4F               [ 1]  269 	clr	a
      0096CA 90 02            [ 1]  270 	rlwa	y
      0096CC 1E 08            [ 2]  271 	ldw	x, (0x08, sp)
      0096CE FF               [ 2]  272 	ldw	(x), y
                                    273 ;	src\bme280.c: 95: *iValue += iRes[1];
      0096CF 7B 03            [ 1]  274 	ld	a, (0x03, sp)
      0096D1 5F               [ 1]  275 	clrw	x
      0096D2 97               [ 1]  276 	ld	xl, a
      0096D3 1F 06            [ 2]  277 	ldw	(0x06, sp), x
      0096D5 72 F9 06         [ 2]  278 	addw	y, (0x06, sp)
      0096D8 1E 08            [ 2]  279 	ldw	x, (0x08, sp)
      0096DA FF               [ 2]  280 	ldw	(x), y
                                    281 ;	src\bme280.c: 96: *(uint16_t *)iValue = be16toword(*(uint16_t *) iValue);
      0096DB 93               [ 1]  282 	ldw	x, y
      0096DC 0F 05            [ 1]  283 	clr	(0x05, sp)
      0096DE 90 9F            [ 1]  284 	ld	a, yl
      0096E0 0F 06            [ 1]  285 	clr	(0x06, sp)
      0096E2 1A 06            [ 1]  286 	or	a, (0x06, sp)
      0096E4 90 95            [ 1]  287 	ld	yh, a
      0096E6 9E               [ 1]  288 	ld	a, xh
      0096E7 1A 05            [ 1]  289 	or	a, (0x05, sp)
      0096E9 90 97            [ 1]  290 	ld	yl, a
      0096EB 1E 08            [ 2]  291 	ldw	x, (0x08, sp)
      0096ED FF               [ 2]  292 	ldw	(x), y
                                    293 ;	src\bme280.c: 97: }
      0096EE 5B 09            [ 2]  294 	addw	sp, #9
      0096F0 81               [ 4]  295 	ret
                                    296 ;	src\bme280.c: 99: void BME280_ReadReg_U24(uint8_t iReg, uint32_t *iValue) {
                                    297 ;	-----------------------------------------
                                    298 ;	 function BME280_ReadReg_U24
                                    299 ;	-----------------------------------------
      0096F1                        300 _BME280_ReadReg_U24:
      0096F1 52 0E            [ 2]  301 	sub	sp, #14
      0096F3 1F 0D            [ 2]  302 	ldw	(0x0d, sp), x
                                    303 ;	src\bme280.c: 102: iData[0] = iReg;
      0096F5 96               [ 1]  304 	ldw	x, sp
      0096F6 5C               [ 1]  305 	incw	x
      0096F7 F7               [ 1]  306 	ld	(x), a
                                    307 ;	src\bme280.c: 103: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0096F8 89               [ 2]  308 	pushw	x
      0096F9 5F               [ 1]  309 	clrw	x
      0096FA 5C               [ 1]  310 	incw	x
      0096FB A6 EE            [ 1]  311 	ld	a, #0xee
      0096FD CD A1 99         [ 4]  312 	call	_I2C_Send_Bytes
                                    313 ;	src\bme280.c: 104: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009700 96               [ 1]  314 	ldw	x, sp
      009701 5C               [ 1]  315 	incw	x
      009702 5C               [ 1]  316 	incw	x
      009703 89               [ 2]  317 	pushw	x
      009704 AE 00 03         [ 2]  318 	ldw	x, #0x0003
      009707 A6 EE            [ 1]  319 	ld	a, #0xee
      009709 CD A3 D9         [ 4]  320 	call	_I2C_Read_Bytes
                                    321 ;	src\bme280.c: 105: *iValue = iRes[0];
      00970C 7B 02            [ 1]  322 	ld	a, (0x02, sp)
      00970E 90 5F            [ 1]  323 	clrw	y
      009710 0F 05            [ 1]  324 	clr	(0x05, sp)
      009712 1E 0D            [ 2]  325 	ldw	x, (0x0d, sp)
      009714 E7 03            [ 1]  326 	ld	(0x3, x), a
      009716 EF 01            [ 2]  327 	ldw	(0x1, x), y
      009718 88               [ 1]  328 	push	a
      009719 7B 06            [ 1]  329 	ld	a, (0x06, sp)
      00971B F7               [ 1]  330 	ld	(x), a
      00971C 84               [ 1]  331 	pop	a
                                    332 ;	src\bme280.c: 106: *iValue <<= 8;
      00971D 6B 0B            [ 1]  333 	ld	(0x0b, sp), a
      00971F 17 09            [ 2]  334 	ldw	(0x09, sp), y
      009721 0F 0C            [ 1]  335 	clr	(0x0c, sp)
      009723 1E 0D            [ 2]  336 	ldw	x, (0x0d, sp)
      009725 16 0B            [ 2]  337 	ldw	y, (0x0b, sp)
      009727 EF 02            [ 2]  338 	ldw	(0x2, x), y
      009729 16 09            [ 2]  339 	ldw	y, (0x09, sp)
      00972B FF               [ 2]  340 	ldw	(x), y
                                    341 ;	src\bme280.c: 107: *iValue += iRes[1];
      00972C 7B 03            [ 1]  342 	ld	a, (0x03, sp)
      00972E 90 5F            [ 1]  343 	clrw	y
      009730 5F               [ 1]  344 	clrw	x
      009731 90 97            [ 1]  345 	ld	yl, a
      009733 72 F9 0B         [ 2]  346 	addw	y, (0x0b, sp)
      009736 9F               [ 1]  347 	ld	a, xl
      009737 19 0A            [ 1]  348 	adc	a, (0x0a, sp)
      009739 88               [ 1]  349 	push	a
      00973A 9E               [ 1]  350 	ld	a, xh
      00973B 19 0A            [ 1]  351 	adc	a, (0x0a, sp)
      00973D 6B 06            [ 1]  352 	ld	(0x06, sp), a
      00973F 84               [ 1]  353 	pop	a
      009740 1E 0D            [ 2]  354 	ldw	x, (0x0d, sp)
      009742 EF 02            [ 2]  355 	ldw	(0x2, x), y
      009744 E7 01            [ 1]  356 	ld	(0x1, x), a
      009746 88               [ 1]  357 	push	a
      009747 7B 06            [ 1]  358 	ld	a, (0x06, sp)
      009749 F7               [ 1]  359 	ld	(x), a
      00974A 84               [ 1]  360 	pop	a
                                    361 ;	src\bme280.c: 108: *iValue <<= 8;
      00974B 17 0A            [ 2]  362 	ldw	(0x0a, sp), y
      00974D 6B 09            [ 1]  363 	ld	(0x09, sp), a
      00974F 0F 0C            [ 1]  364 	clr	(0x0c, sp)
      009751 1E 0D            [ 2]  365 	ldw	x, (0x0d, sp)
      009753 16 0B            [ 2]  366 	ldw	y, (0x0b, sp)
      009755 EF 02            [ 2]  367 	ldw	(0x2, x), y
      009757 16 09            [ 2]  368 	ldw	y, (0x09, sp)
      009759 FF               [ 2]  369 	ldw	(x), y
                                    370 ;	src\bme280.c: 109: *iValue += iRes[2];
      00975A 7B 04            [ 1]  371 	ld	a, (0x04, sp)
      00975C 90 5F            [ 1]  372 	clrw	y
      00975E 5F               [ 1]  373 	clrw	x
      00975F 90 97            [ 1]  374 	ld	yl, a
      009761 72 F9 0B         [ 2]  375 	addw	y, (0x0b, sp)
      009764 9F               [ 1]  376 	ld	a, xl
      009765 19 0A            [ 1]  377 	adc	a, (0x0a, sp)
      009767 88               [ 1]  378 	push	a
      009768 9E               [ 1]  379 	ld	a, xh
      009769 19 0A            [ 1]  380 	adc	a, (0x0a, sp)
      00976B 6B 06            [ 1]  381 	ld	(0x06, sp), a
      00976D 84               [ 1]  382 	pop	a
      00976E 1E 0D            [ 2]  383 	ldw	x, (0x0d, sp)
      009770 EF 02            [ 2]  384 	ldw	(0x2, x), y
      009772 E7 01            [ 1]  385 	ld	(0x1, x), a
      009774 88               [ 1]  386 	push	a
      009775 7B 06            [ 1]  387 	ld	a, (0x06, sp)
      009777 F7               [ 1]  388 	ld	(x), a
      009778 84               [ 1]  389 	pop	a
                                    390 ;	src\bme280.c: 110: *(uint32_t*)iValue &= 0x00FFFFFF;
      009779 6B 0A            [ 1]  391 	ld	(0x0a, sp), a
      00977B 0F 09            [ 1]  392 	clr	(0x09, sp)
      00977D 1E 0D            [ 2]  393 	ldw	x, (0x0d, sp)
      00977F EF 02            [ 2]  394 	ldw	(0x2, x), y
      009781 16 09            [ 2]  395 	ldw	y, (0x09, sp)
      009783 FF               [ 2]  396 	ldw	(x), y
                                    397 ;	src\bme280.c: 111: }
      009784 5B 0E            [ 2]  398 	addw	sp, #14
      009786 81               [ 4]  399 	ret
                                    400 ;	src\bme280.c: 113: void BME280_ReadReg_LE_U24(uint8_t iReg, uint32_t *iValue) {
                                    401 ;	-----------------------------------------
                                    402 ;	 function BME280_ReadReg_LE_U24
                                    403 ;	-----------------------------------------
      009787                        404 _BME280_ReadReg_LE_U24:
      009787 52 16            [ 2]  405 	sub	sp, #22
      009789 1F 15            [ 2]  406 	ldw	(0x15, sp), x
                                    407 ;	src\bme280.c: 116: iData[0] = iReg;
      00978B 96               [ 1]  408 	ldw	x, sp
      00978C 5C               [ 1]  409 	incw	x
      00978D F7               [ 1]  410 	ld	(x), a
                                    411 ;	src\bme280.c: 117: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00978E 89               [ 2]  412 	pushw	x
      00978F 5F               [ 1]  413 	clrw	x
      009790 5C               [ 1]  414 	incw	x
      009791 A6 EE            [ 1]  415 	ld	a, #0xee
      009793 CD A1 99         [ 4]  416 	call	_I2C_Send_Bytes
                                    417 ;	src\bme280.c: 118: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009796 96               [ 1]  418 	ldw	x, sp
      009797 5C               [ 1]  419 	incw	x
      009798 5C               [ 1]  420 	incw	x
      009799 89               [ 2]  421 	pushw	x
      00979A AE 00 03         [ 2]  422 	ldw	x, #0x0003
      00979D A6 EE            [ 1]  423 	ld	a, #0xee
      00979F CD A3 D9         [ 4]  424 	call	_I2C_Read_Bytes
                                    425 ;	src\bme280.c: 119: *iValue = iRes[0];
      0097A2 7B 02            [ 1]  426 	ld	a, (0x02, sp)
      0097A4 90 5F            [ 1]  427 	clrw	y
      0097A6 0F 0D            [ 1]  428 	clr	(0x0d, sp)
      0097A8 1E 15            [ 2]  429 	ldw	x, (0x15, sp)
      0097AA E7 03            [ 1]  430 	ld	(0x3, x), a
      0097AC EF 01            [ 2]  431 	ldw	(0x1, x), y
      0097AE 88               [ 1]  432 	push	a
      0097AF 7B 0E            [ 1]  433 	ld	a, (0x0e, sp)
      0097B1 F7               [ 1]  434 	ld	(x), a
      0097B2 84               [ 1]  435 	pop	a
                                    436 ;	src\bme280.c: 120: *iValue <<= 8;
      0097B3 6B 13            [ 1]  437 	ld	(0x13, sp), a
      0097B5 17 11            [ 2]  438 	ldw	(0x11, sp), y
      0097B7 0F 14            [ 1]  439 	clr	(0x14, sp)
      0097B9 1E 15            [ 2]  440 	ldw	x, (0x15, sp)
      0097BB 16 13            [ 2]  441 	ldw	y, (0x13, sp)
      0097BD EF 02            [ 2]  442 	ldw	(0x2, x), y
      0097BF 16 11            [ 2]  443 	ldw	y, (0x11, sp)
      0097C1 FF               [ 2]  444 	ldw	(x), y
                                    445 ;	src\bme280.c: 121: *iValue += iRes[1];
      0097C2 7B 03            [ 1]  446 	ld	a, (0x03, sp)
      0097C4 90 5F            [ 1]  447 	clrw	y
      0097C6 5F               [ 1]  448 	clrw	x
      0097C7 90 97            [ 1]  449 	ld	yl, a
      0097C9 72 F9 13         [ 2]  450 	addw	y, (0x13, sp)
      0097CC 9F               [ 1]  451 	ld	a, xl
      0097CD 19 12            [ 1]  452 	adc	a, (0x12, sp)
      0097CF 88               [ 1]  453 	push	a
      0097D0 9E               [ 1]  454 	ld	a, xh
      0097D1 19 12            [ 1]  455 	adc	a, (0x12, sp)
      0097D3 6B 0E            [ 1]  456 	ld	(0x0e, sp), a
      0097D5 84               [ 1]  457 	pop	a
      0097D6 1E 15            [ 2]  458 	ldw	x, (0x15, sp)
      0097D8 EF 02            [ 2]  459 	ldw	(0x2, x), y
      0097DA E7 01            [ 1]  460 	ld	(0x1, x), a
      0097DC 88               [ 1]  461 	push	a
      0097DD 7B 0E            [ 1]  462 	ld	a, (0x0e, sp)
      0097DF F7               [ 1]  463 	ld	(x), a
      0097E0 84               [ 1]  464 	pop	a
                                    465 ;	src\bme280.c: 122: *iValue <<= 8;
      0097E1 17 12            [ 2]  466 	ldw	(0x12, sp), y
      0097E3 6B 11            [ 1]  467 	ld	(0x11, sp), a
      0097E5 0F 14            [ 1]  468 	clr	(0x14, sp)
      0097E7 1E 15            [ 2]  469 	ldw	x, (0x15, sp)
      0097E9 16 13            [ 2]  470 	ldw	y, (0x13, sp)
      0097EB EF 02            [ 2]  471 	ldw	(0x2, x), y
      0097ED 16 11            [ 2]  472 	ldw	y, (0x11, sp)
      0097EF FF               [ 2]  473 	ldw	(x), y
                                    474 ;	src\bme280.c: 123: *iValue += iRes[2];
      0097F0 7B 04            [ 1]  475 	ld	a, (0x04, sp)
      0097F2 90 5F            [ 1]  476 	clrw	y
      0097F4 5F               [ 1]  477 	clrw	x
      0097F5 90 97            [ 1]  478 	ld	yl, a
      0097F7 72 F9 13         [ 2]  479 	addw	y, (0x13, sp)
      0097FA 9F               [ 1]  480 	ld	a, xl
      0097FB 19 12            [ 1]  481 	adc	a, (0x12, sp)
      0097FD 6B 06            [ 1]  482 	ld	(0x06, sp), a
      0097FF 9E               [ 1]  483 	ld	a, xh
      009800 19 11            [ 1]  484 	adc	a, (0x11, sp)
      009802 6B 05            [ 1]  485 	ld	(0x05, sp), a
      009804 1E 15            [ 2]  486 	ldw	x, (0x15, sp)
      009806 EF 02            [ 2]  487 	ldw	(0x2, x), y
      009808 7B 06            [ 1]  488 	ld	a, (0x06, sp)
      00980A E7 01            [ 1]  489 	ld	(0x1, x), a
      00980C 7B 05            [ 1]  490 	ld	a, (0x05, sp)
      00980E F7               [ 1]  491 	ld	(x), a
                                    492 ;	src\bme280.c: 124: *(uint32_t*)iValue = be24toword(*(uint32_t *)iValue) & 0x00FFFFFF;
      00980F 7B 06            [ 1]  493 	ld	a, (0x06, sp)
      009811 97               [ 1]  494 	ld	xl, a
      009812 0F 0C            [ 1]  495 	clr	(0x0c, sp)
      009814 02               [ 1]  496 	rlwa	x
      009815 90 9E            [ 1]  497 	ld	a, yh
      009817 01               [ 1]  498 	rrwa	x
      009818 4F               [ 1]  499 	clr	a
      009819 0F 09            [ 1]  500 	clr	(0x09, sp)
      00981B 0F 0F            [ 1]  501 	clr	(0x0f, sp)
      00981D 0F 0E            [ 1]  502 	clr	(0x0e, sp)
      00981F 0F 0D            [ 1]  503 	clr	(0x0d, sp)
      009821 1A 0E            [ 1]  504 	or	a, (0x0e, sp)
      009823 6B 12            [ 1]  505 	ld	(0x12, sp), a
      009825 9F               [ 1]  506 	ld	a, xl
      009826 1A 0C            [ 1]  507 	or	a, (0x0c, sp)
      009828 97               [ 1]  508 	ld	xl, a
      009829 89               [ 2]  509 	pushw	x
      00982A 7B 11            [ 1]  510 	ld	a, (0x11, sp)
      00982C 1A 01            [ 1]  511 	or	a, (1, sp)
      00982E 85               [ 2]  512 	popw	x
      00982F 95               [ 1]  513 	ld	xh, a
      009830 7B 0D            [ 1]  514 	ld	a, (0x0d, sp)
      009832 1A 09            [ 1]  515 	or	a, (0x09, sp)
      009834 0F 10            [ 1]  516 	clr	(0x10, sp)
      009836 0F 0F            [ 1]  517 	clr	(0x0f, sp)
      009838 88               [ 1]  518 	push	a
      009839 0F 0D            [ 1]  519 	clr	(0x0d, sp)
      00983B 0F 0C            [ 1]  520 	clr	(0x0c, sp)
      00983D 0F 0A            [ 1]  521 	clr	(0x0a, sp)
      00983F 84               [ 1]  522 	pop	a
      009840 1A 09            [ 1]  523 	or	a, (0x09, sp)
      009842 90 95            [ 1]  524 	ld	yh, a
      009844 9F               [ 1]  525 	ld	a, xl
      009845 1A 0C            [ 1]  526 	or	a, (0x0c, sp)
      009847 02               [ 1]  527 	rlwa	x
      009848 1A 0B            [ 1]  528 	or	a, (0x0b, sp)
      00984A 95               [ 1]  529 	ld	xh, a
      00984B 90 89            [ 2]  530 	pushw	y
      00984D 7B 14            [ 1]  531 	ld	a, (0x14, sp)
      00984F 1A 02            [ 1]  532 	or	a, (2, sp)
      009851 90 85            [ 2]  533 	popw	y
      009853 6B 0E            [ 1]  534 	ld	(0x0e, sp), a
      009855 6B 12            [ 1]  535 	ld	(0x12, sp), a
      009857 0F 11            [ 1]  536 	clr	(0x11, sp)
      009859 16 15            [ 2]  537 	ldw	y, (0x15, sp)
      00985B 90 EF 02         [ 2]  538 	ldw	(0x2, y), x
      00985E 1E 11            [ 2]  539 	ldw	x, (0x11, sp)
      009860 90 FF            [ 2]  540 	ldw	(y), x
                                    541 ;	src\bme280.c: 125: }
      009862 5B 16            [ 2]  542 	addw	sp, #22
      009864 81               [ 4]  543 	ret
                                    544 ;	src\bme280.c: 127: void BME280_ReadReg_S16(uint8_t iReg, int16_t *iValue) {
                                    545 ;	-----------------------------------------
                                    546 ;	 function BME280_ReadReg_S16
                                    547 ;	-----------------------------------------
      009865                        548 _BME280_ReadReg_S16:
      009865 52 07            [ 2]  549 	sub	sp, #7
      009867 1F 06            [ 2]  550 	ldw	(0x06, sp), x
                                    551 ;	src\bme280.c: 130: iData[0] = iReg;
      009869 96               [ 1]  552 	ldw	x, sp
      00986A 5C               [ 1]  553 	incw	x
      00986B F7               [ 1]  554 	ld	(x), a
                                    555 ;	src\bme280.c: 131: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00986C 89               [ 2]  556 	pushw	x
      00986D 5F               [ 1]  557 	clrw	x
      00986E 5C               [ 1]  558 	incw	x
      00986F A6 EE            [ 1]  559 	ld	a, #0xee
      009871 CD A1 99         [ 4]  560 	call	_I2C_Send_Bytes
                                    561 ;	src\bme280.c: 132: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      009874 96               [ 1]  562 	ldw	x, sp
      009875 5C               [ 1]  563 	incw	x
      009876 5C               [ 1]  564 	incw	x
      009877 89               [ 2]  565 	pushw	x
      009878 AE 00 02         [ 2]  566 	ldw	x, #0x0002
      00987B A6 EE            [ 1]  567 	ld	a, #0xee
      00987D CD A3 D9         [ 4]  568 	call	_I2C_Read_Bytes
                                    569 ;	src\bme280.c: 133: *iValue = iRes[0];
      009880 7B 02            [ 1]  570 	ld	a, (0x02, sp)
      009882 5F               [ 1]  571 	clrw	x
      009883 97               [ 1]  572 	ld	xl, a
      009884 16 06            [ 2]  573 	ldw	y, (0x06, sp)
      009886 90 FF            [ 2]  574 	ldw	(y), x
                                    575 ;	src\bme280.c: 134: *iValue <<= 8;
      009888 4F               [ 1]  576 	clr	a
      009889 02               [ 1]  577 	rlwa	x
      00988A 16 06            [ 2]  578 	ldw	y, (0x06, sp)
      00988C 90 FF            [ 2]  579 	ldw	(y), x
                                    580 ;	src\bme280.c: 135: *iValue += iRes[1];
      00988E 7B 03            [ 1]  581 	ld	a, (0x03, sp)
      009890 6B 05            [ 1]  582 	ld	(0x05, sp), a
      009892 0F 04            [ 1]  583 	clr	(0x04, sp)
      009894 72 FB 04         [ 2]  584 	addw	x, (0x04, sp)
      009897 16 06            [ 2]  585 	ldw	y, (0x06, sp)
      009899 90 FF            [ 2]  586 	ldw	(y), x
                                    587 ;	src\bme280.c: 136: }
      00989B 5B 07            [ 2]  588 	addw	sp, #7
      00989D 81               [ 4]  589 	ret
                                    590 ;	src\bme280.c: 138: void BME280_ReadReg_LE_S16(uint8_t iReg, int16_t *iValue) {
                                    591 ;	-----------------------------------------
                                    592 ;	 function BME280_ReadReg_LE_S16
                                    593 ;	-----------------------------------------
      00989E                        594 _BME280_ReadReg_LE_S16:
      00989E 52 09            [ 2]  595 	sub	sp, #9
      0098A0 1F 08            [ 2]  596 	ldw	(0x08, sp), x
                                    597 ;	src\bme280.c: 141: iData[0] = iReg;
      0098A2 96               [ 1]  598 	ldw	x, sp
      0098A3 5C               [ 1]  599 	incw	x
      0098A4 F7               [ 1]  600 	ld	(x), a
                                    601 ;	src\bme280.c: 142: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0098A5 89               [ 2]  602 	pushw	x
      0098A6 5F               [ 1]  603 	clrw	x
      0098A7 5C               [ 1]  604 	incw	x
      0098A8 A6 EE            [ 1]  605 	ld	a, #0xee
      0098AA CD A1 99         [ 4]  606 	call	_I2C_Send_Bytes
                                    607 ;	src\bme280.c: 143: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0098AD 96               [ 1]  608 	ldw	x, sp
      0098AE 5C               [ 1]  609 	incw	x
      0098AF 5C               [ 1]  610 	incw	x
      0098B0 89               [ 2]  611 	pushw	x
      0098B1 AE 00 02         [ 2]  612 	ldw	x, #0x0002
      0098B4 A6 EE            [ 1]  613 	ld	a, #0xee
      0098B6 CD A3 D9         [ 4]  614 	call	_I2C_Read_Bytes
                                    615 ;	src\bme280.c: 144: *iValue = iRes[0];
      0098B9 7B 02            [ 1]  616 	ld	a, (0x02, sp)
      0098BB 5F               [ 1]  617 	clrw	x
      0098BC 97               [ 1]  618 	ld	xl, a
      0098BD 16 08            [ 2]  619 	ldw	y, (0x08, sp)
      0098BF 90 FF            [ 2]  620 	ldw	(y), x
                                    621 ;	src\bme280.c: 145: *iValue <<= 8;
      0098C1 4F               [ 1]  622 	clr	a
      0098C2 02               [ 1]  623 	rlwa	x
      0098C3 16 08            [ 2]  624 	ldw	y, (0x08, sp)
      0098C5 90 FF            [ 2]  625 	ldw	(y), x
                                    626 ;	src\bme280.c: 146: *iValue += iRes[1];
      0098C7 7B 03            [ 1]  627 	ld	a, (0x03, sp)
      0098C9 6B 07            [ 1]  628 	ld	(0x07, sp), a
      0098CB 0F 06            [ 1]  629 	clr	(0x06, sp)
      0098CD 72 FB 06         [ 2]  630 	addw	x, (0x06, sp)
      0098D0 16 08            [ 2]  631 	ldw	y, (0x08, sp)
      0098D2 90 FF            [ 2]  632 	ldw	(y), x
                                    633 ;	src\bme280.c: 147: *(int16_t *)iValue = be16toword(*(int16_t *) iValue);
      0098D4 90 93            [ 1]  634 	ldw	y, x
      0098D6 0F 05            [ 1]  635 	clr	(0x05, sp)
      0098D8 9F               [ 1]  636 	ld	a, xl
      0098D9 0F 06            [ 1]  637 	clr	(0x06, sp)
      0098DB 1A 06            [ 1]  638 	or	a, (0x06, sp)
      0098DD 95               [ 1]  639 	ld	xh, a
      0098DE 90 9E            [ 1]  640 	ld	a, yh
      0098E0 1A 05            [ 1]  641 	or	a, (0x05, sp)
      0098E2 97               [ 1]  642 	ld	xl, a
      0098E3 16 08            [ 2]  643 	ldw	y, (0x08, sp)
      0098E5 90 FF            [ 2]  644 	ldw	(y), x
                                    645 ;	src\bme280.c: 148: }
      0098E7 5B 09            [ 2]  646 	addw	sp, #9
      0098E9 81               [ 4]  647 	ret
                                    648 ;	src\bme280.c: 150: uint8_t BME280_ReadStatus(void) {
                                    649 ;	-----------------------------------------
                                    650 ;	 function BME280_ReadStatus
                                    651 ;	-----------------------------------------
      0098EA                        652 _BME280_ReadStatus:
                                    653 ;	src\bme280.c: 152: uint8_t res = BME280_ReadReg(BME280_REGISTER_STATUS) & 0x09;
      0098EA A6 F3            [ 1]  654 	ld	a, #0xf3
      0098EC CD 96 58         [ 4]  655 	call	_BME280_ReadReg
      0098EF A4 09            [ 1]  656 	and	a, #0x09
                                    657 ;	src\bme280.c: 153: return res;
                                    658 ;	src\bme280.c: 154: }
      0098F1 81               [ 4]  659 	ret
                                    660 ;	src\bme280.c: 156: void BME280_ReadCoefficients(void) {
                                    661 ;	-----------------------------------------
                                    662 ;	 function BME280_ReadCoefficients
                                    663 ;	-----------------------------------------
      0098F2                        664 _BME280_ReadCoefficients:
      0098F2 52 04            [ 2]  665 	sub	sp, #4
                                    666 ;	src\bme280.c: 157: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_T1, &CalibData.dig_T1);
      0098F4 AE 00 01         [ 2]  667 	ldw	x, #(_CalibData+0)
      0098F7 A6 88            [ 1]  668 	ld	a, #0x88
      0098F9 CD 96 A5         [ 4]  669 	call	_BME280_ReadReg_LE_U16
                                    670 ;	src\bme280.c: 158: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T2, &CalibData.dig_T2);
      0098FC AE 00 03         [ 2]  671 	ldw	x, #(_CalibData+2)
      0098FF A6 8A            [ 1]  672 	ld	a, #0x8a
      009901 CD 98 9E         [ 4]  673 	call	_BME280_ReadReg_LE_S16
                                    674 ;	src\bme280.c: 159: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T3, &CalibData.dig_T3);
      009904 AE 00 05         [ 2]  675 	ldw	x, #(_CalibData+4)
      009907 A6 8C            [ 1]  676 	ld	a, #0x8c
      009909 CD 98 9E         [ 4]  677 	call	_BME280_ReadReg_LE_S16
                                    678 ;	src\bme280.c: 160: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_P1, &CalibData.dig_P1);
      00990C AE 00 07         [ 2]  679 	ldw	x, #(_CalibData+6)
      00990F A6 8E            [ 1]  680 	ld	a, #0x8e
      009911 CD 96 A5         [ 4]  681 	call	_BME280_ReadReg_LE_U16
                                    682 ;	src\bme280.c: 161: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P2, &CalibData.dig_P2);
      009914 AE 00 09         [ 2]  683 	ldw	x, #(_CalibData+8)
      009917 A6 90            [ 1]  684 	ld	a, #0x90
      009919 CD 98 9E         [ 4]  685 	call	_BME280_ReadReg_LE_S16
                                    686 ;	src\bme280.c: 162: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P3, &CalibData.dig_P3);
      00991C AE 00 0B         [ 2]  687 	ldw	x, #(_CalibData+10)
      00991F A6 92            [ 1]  688 	ld	a, #0x92
      009921 CD 98 9E         [ 4]  689 	call	_BME280_ReadReg_LE_S16
                                    690 ;	src\bme280.c: 163: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P4, &CalibData.dig_P4);
      009924 AE 00 0D         [ 2]  691 	ldw	x, #(_CalibData+12)
      009927 A6 94            [ 1]  692 	ld	a, #0x94
      009929 CD 98 9E         [ 4]  693 	call	_BME280_ReadReg_LE_S16
                                    694 ;	src\bme280.c: 164: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P5, &CalibData.dig_P5);
      00992C AE 00 0F         [ 2]  695 	ldw	x, #(_CalibData+14)
      00992F A6 96            [ 1]  696 	ld	a, #0x96
      009931 CD 98 9E         [ 4]  697 	call	_BME280_ReadReg_LE_S16
                                    698 ;	src\bme280.c: 165: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P6, &CalibData.dig_P6);
      009934 AE 00 11         [ 2]  699 	ldw	x, #(_CalibData+16)
      009937 A6 98            [ 1]  700 	ld	a, #0x98
      009939 CD 98 9E         [ 4]  701 	call	_BME280_ReadReg_LE_S16
                                    702 ;	src\bme280.c: 166: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P7, &CalibData.dig_P7);
      00993C AE 00 13         [ 2]  703 	ldw	x, #(_CalibData+18)
      00993F A6 9A            [ 1]  704 	ld	a, #0x9a
      009941 CD 98 9E         [ 4]  705 	call	_BME280_ReadReg_LE_S16
                                    706 ;	src\bme280.c: 167: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P8, &CalibData.dig_P8);
      009944 AE 00 15         [ 2]  707 	ldw	x, #(_CalibData+20)
      009947 A6 9C            [ 1]  708 	ld	a, #0x9c
      009949 CD 98 9E         [ 4]  709 	call	_BME280_ReadReg_LE_S16
                                    710 ;	src\bme280.c: 168: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P9, &CalibData.dig_P9);
      00994C AE 00 17         [ 2]  711 	ldw	x, #(_CalibData+22)
      00994F A6 9E            [ 1]  712 	ld	a, #0x9e
      009951 CD 98 9E         [ 4]  713 	call	_BME280_ReadReg_LE_S16
                                    714 ;	src\bme280.c: 169: CalibData.dig_H1 = BME280_ReadReg(BME280_REGISTER_DIG_H1);
      009954 A6 A1            [ 1]  715 	ld	a, #0xa1
      009956 CD 96 58         [ 4]  716 	call	_BME280_ReadReg
      009959 C7 00 19         [ 1]  717 	ld	_CalibData+24, a
                                    718 ;	src\bme280.c: 170: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_H2, &CalibData.dig_H2);
      00995C AE 00 1A         [ 2]  719 	ldw	x, #(_CalibData+25)
      00995F A6 E1            [ 1]  720 	ld	a, #0xe1
      009961 CD 98 9E         [ 4]  721 	call	_BME280_ReadReg_LE_S16
                                    722 ;	src\bme280.c: 171: CalibData.dig_H3 = BME280_ReadReg(BME280_REGISTER_DIG_H3);
      009964 A6 E3            [ 1]  723 	ld	a, #0xe3
      009966 CD 96 58         [ 4]  724 	call	_BME280_ReadReg
      009969 C7 00 1C         [ 1]  725 	ld	_CalibData+27, a
                                    726 ;	src\bme280.c: 172: CalibData.dig_H4 = (BME280_ReadReg(BME280_REGISTER_DIG_H4) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H4+1) & 0xF);
      00996C A6 E4            [ 1]  727 	ld	a, #0xe4
      00996E CD 96 58         [ 4]  728 	call	_BME280_ReadReg
      009971 5F               [ 1]  729 	clrw	x
      009972 97               [ 1]  730 	ld	xl, a
      009973 58               [ 2]  731 	sllw	x
      009974 58               [ 2]  732 	sllw	x
      009975 58               [ 2]  733 	sllw	x
      009976 58               [ 2]  734 	sllw	x
      009977 1F 01            [ 2]  735 	ldw	(0x01, sp), x
      009979 A6 E5            [ 1]  736 	ld	a, #0xe5
      00997B CD 96 58         [ 4]  737 	call	_BME280_ReadReg
      00997E A4 0F            [ 1]  738 	and	a, #0x0f
      009980 6B 04            [ 1]  739 	ld	(0x04, sp), a
      009982 7B 01            [ 1]  740 	ld	a, (0x01, sp)
      009984 95               [ 1]  741 	ld	xh, a
      009985 7B 02            [ 1]  742 	ld	a, (0x02, sp)
      009987 1A 04            [ 1]  743 	or	a, (0x04, sp)
      009989 97               [ 1]  744 	ld	xl, a
      00998A CF 00 1D         [ 2]  745 	ldw	_CalibData+28, x
                                    746 ;	src\bme280.c: 173: CalibData.dig_H5 = (BME280_ReadReg(BME280_REGISTER_DIG_H5+1) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H5) >> 4);
      00998D A6 E6            [ 1]  747 	ld	a, #0xe6
      00998F CD 96 58         [ 4]  748 	call	_BME280_ReadReg
      009992 5F               [ 1]  749 	clrw	x
      009993 97               [ 1]  750 	ld	xl, a
      009994 58               [ 2]  751 	sllw	x
      009995 58               [ 2]  752 	sllw	x
      009996 58               [ 2]  753 	sllw	x
      009997 58               [ 2]  754 	sllw	x
      009998 1F 03            [ 2]  755 	ldw	(0x03, sp), x
      00999A A6 E5            [ 1]  756 	ld	a, #0xe5
      00999C CD 96 58         [ 4]  757 	call	_BME280_ReadReg
      00999F 4E               [ 1]  758 	swap	a
      0099A0 A4 0F            [ 1]  759 	and	a, #0x0f
      0099A2 5F               [ 1]  760 	clrw	x
      0099A3 1A 04            [ 1]  761 	or	a, (0x04, sp)
      0099A5 02               [ 1]  762 	rlwa	x
      0099A6 1A 03            [ 1]  763 	or	a, (0x03, sp)
      0099A8 95               [ 1]  764 	ld	xh, a
      0099A9 CF 00 1F         [ 2]  765 	ldw	_CalibData+30, x
                                    766 ;	src\bme280.c: 174: CalibData.dig_H6 = (int8_t)BME280_ReadReg(BME280_REGISTER_DIG_H6);
      0099AC A6 E7            [ 1]  767 	ld	a, #0xe7
      0099AE CD 96 58         [ 4]  768 	call	_BME280_ReadReg
      0099B1 C7 00 21         [ 1]  769 	ld	_CalibData+32, a
                                    770 ;	src\bme280.c: 214: }
      0099B4 5B 04            [ 2]  771 	addw	sp, #4
      0099B6 81               [ 4]  772 	ret
                                    773 ;	src\bme280.c: 216: void BME280_SetStandby(uint8_t tsb) {
                                    774 ;	-----------------------------------------
                                    775 ;	 function BME280_SetStandby
                                    776 ;	-----------------------------------------
      0099B7                        777 _BME280_SetStandby:
      0099B7 89               [ 2]  778 	pushw	x
      0099B8 6B 02            [ 1]  779 	ld	(0x02, sp), a
                                    780 ;	src\bme280.c: 218: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_STBY_MSK;
      0099BA A6 F5            [ 1]  781 	ld	a, #0xf5
      0099BC CD 96 58         [ 4]  782 	call	_BME280_ReadReg
      0099BF A4 1F            [ 1]  783 	and	a, #0x1f
      0099C1 6B 01            [ 1]  784 	ld	(0x01, sp), a
                                    785 ;	src\bme280.c: 219: reg |= tsb & BME280_STBY_MSK;
      0099C3 7B 02            [ 1]  786 	ld	a, (0x02, sp)
      0099C5 A4 E0            [ 1]  787 	and	a, #0xe0
      0099C7 1A 01            [ 1]  788 	or	a, (0x01, sp)
                                    789 ;	src\bme280.c: 220: BME280_WriteReg(BME280_REG_CONFIG,reg);
      0099C9 88               [ 1]  790 	push	a
      0099CA A6 F5            [ 1]  791 	ld	a, #0xf5
      0099CC CD 96 43         [ 4]  792 	call	_BME280_WriteReg
                                    793 ;	src\bme280.c: 221: }
      0099CF 85               [ 2]  794 	popw	x
      0099D0 81               [ 4]  795 	ret
                                    796 ;	src\bme280.c: 223: void BME280_SetFilter(uint8_t filter) {
                                    797 ;	-----------------------------------------
                                    798 ;	 function BME280_SetFilter
                                    799 ;	-----------------------------------------
      0099D1                        800 _BME280_SetFilter:
      0099D1 89               [ 2]  801 	pushw	x
      0099D2 6B 02            [ 1]  802 	ld	(0x02, sp), a
                                    803 ;	src\bme280.c: 225: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_FILTER_MSK;
      0099D4 A6 F5            [ 1]  804 	ld	a, #0xf5
      0099D6 CD 96 58         [ 4]  805 	call	_BME280_ReadReg
      0099D9 A4 E3            [ 1]  806 	and	a, #0xe3
      0099DB 6B 01            [ 1]  807 	ld	(0x01, sp), a
                                    808 ;	src\bme280.c: 226: reg |= filter & BME280_FILTER_MSK;
      0099DD 7B 02            [ 1]  809 	ld	a, (0x02, sp)
      0099DF A4 1C            [ 1]  810 	and	a, #0x1c
      0099E1 1A 01            [ 1]  811 	or	a, (0x01, sp)
                                    812 ;	src\bme280.c: 227: BME280_WriteReg(BME280_REG_CONFIG,reg);
      0099E3 88               [ 1]  813 	push	a
      0099E4 A6 F5            [ 1]  814 	ld	a, #0xf5
      0099E6 CD 96 43         [ 4]  815 	call	_BME280_WriteReg
                                    816 ;	src\bme280.c: 228: }
      0099E9 85               [ 2]  817 	popw	x
      0099EA 81               [ 4]  818 	ret
                                    819 ;	src\bme280.c: 230: void BME280_SetOversamplingTemper(uint8_t osrs) {
                                    820 ;	-----------------------------------------
                                    821 ;	 function BME280_SetOversamplingTemper
                                    822 ;	-----------------------------------------
      0099EB                        823 _BME280_SetOversamplingTemper:
      0099EB 89               [ 2]  824 	pushw	x
      0099EC 6B 02            [ 1]  825 	ld	(0x02, sp), a
                                    826 ;	src\bme280.c: 232: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_T_MSK;
      0099EE A6 F4            [ 1]  827 	ld	a, #0xf4
      0099F0 CD 96 58         [ 4]  828 	call	_BME280_ReadReg
      0099F3 A4 1F            [ 1]  829 	and	a, #0x1f
      0099F5 6B 01            [ 1]  830 	ld	(0x01, sp), a
                                    831 ;	src\bme280.c: 233: reg |= osrs & BME280_OSRS_T_MSK;
      0099F7 7B 02            [ 1]  832 	ld	a, (0x02, sp)
      0099F9 A4 E0            [ 1]  833 	and	a, #0xe0
      0099FB 1A 01            [ 1]  834 	or	a, (0x01, sp)
                                    835 ;	src\bme280.c: 234: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      0099FD 88               [ 1]  836 	push	a
      0099FE A6 F4            [ 1]  837 	ld	a, #0xf4
      009A00 CD 96 43         [ 4]  838 	call	_BME280_WriteReg
                                    839 ;	src\bme280.c: 235: }
      009A03 85               [ 2]  840 	popw	x
      009A04 81               [ 4]  841 	ret
                                    842 ;	src\bme280.c: 237: void BME280_SetOversamplingPressure(uint8_t osrs) {
                                    843 ;	-----------------------------------------
                                    844 ;	 function BME280_SetOversamplingPressure
                                    845 ;	-----------------------------------------
      009A05                        846 _BME280_SetOversamplingPressure:
      009A05 89               [ 2]  847 	pushw	x
      009A06 6B 02            [ 1]  848 	ld	(0x02, sp), a
                                    849 ;	src\bme280.c: 239: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_P_MSK;
      009A08 A6 F4            [ 1]  850 	ld	a, #0xf4
      009A0A CD 96 58         [ 4]  851 	call	_BME280_ReadReg
      009A0D A4 E3            [ 1]  852 	and	a, #0xe3
      009A0F 6B 01            [ 1]  853 	ld	(0x01, sp), a
                                    854 ;	src\bme280.c: 240: reg |= osrs & BME280_OSRS_P_MSK;
      009A11 7B 02            [ 1]  855 	ld	a, (0x02, sp)
      009A13 A4 1C            [ 1]  856 	and	a, #0x1c
      009A15 1A 01            [ 1]  857 	or	a, (0x01, sp)
                                    858 ;	src\bme280.c: 241: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      009A17 88               [ 1]  859 	push	a
      009A18 A6 F4            [ 1]  860 	ld	a, #0xf4
      009A1A CD 96 43         [ 4]  861 	call	_BME280_WriteReg
                                    862 ;	src\bme280.c: 242: }
      009A1D 85               [ 2]  863 	popw	x
      009A1E 81               [ 4]  864 	ret
                                    865 ;	src\bme280.c: 244: void BME280_SetOversamplingHum(uint8_t osrs) {
                                    866 ;	-----------------------------------------
                                    867 ;	 function BME280_SetOversamplingHum
                                    868 ;	-----------------------------------------
      009A1F                        869 _BME280_SetOversamplingHum:
      009A1F 89               [ 2]  870 	pushw	x
      009A20 6B 02            [ 1]  871 	ld	(0x02, sp), a
                                    872 ;	src\bme280.c: 246: reg = BME280_ReadReg(BME280_REG_CTRL_HUM) & ~BME280_OSRS_H_MSK;
      009A22 A6 F2            [ 1]  873 	ld	a, #0xf2
      009A24 CD 96 58         [ 4]  874 	call	_BME280_ReadReg
      009A27 A4 F8            [ 1]  875 	and	a, #0xf8
      009A29 6B 01            [ 1]  876 	ld	(0x01, sp), a
                                    877 ;	src\bme280.c: 247: reg |= osrs & BME280_OSRS_H_MSK;
      009A2B 7B 02            [ 1]  878 	ld	a, (0x02, sp)
      009A2D A4 07            [ 1]  879 	and	a, #0x07
      009A2F 1A 01            [ 1]  880 	or	a, (0x01, sp)
                                    881 ;	src\bme280.c: 248: BME280_WriteReg(BME280_REG_CTRL_HUM,reg);
      009A31 88               [ 1]  882 	push	a
      009A32 A6 F2            [ 1]  883 	ld	a, #0xf2
      009A34 CD 96 43         [ 4]  884 	call	_BME280_WriteReg
                                    885 ;	src\bme280.c: 251: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      009A37 A6 F4            [ 1]  886 	ld	a, #0xf4
      009A39 CD 96 58         [ 4]  887 	call	_BME280_ReadReg
                                    888 ;	src\bme280.c: 252: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      009A3C 88               [ 1]  889 	push	a
      009A3D A6 F4            [ 1]  890 	ld	a, #0xf4
      009A3F CD 96 43         [ 4]  891 	call	_BME280_WriteReg
                                    892 ;	src\bme280.c: 253: }
      009A42 85               [ 2]  893 	popw	x
      009A43 81               [ 4]  894 	ret
                                    895 ;	src\bme280.c: 255: void BME280_SetMode(uint8_t mode) {
                                    896 ;	-----------------------------------------
                                    897 ;	 function BME280_SetMode
                                    898 ;	-----------------------------------------
      009A44                        899 _BME280_SetMode:
      009A44 89               [ 2]  900 	pushw	x
      009A45 6B 02            [ 1]  901 	ld	(0x02, sp), a
                                    902 ;	src\bme280.c: 257: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_MODE_MSK;
      009A47 A6 F4            [ 1]  903 	ld	a, #0xf4
      009A49 CD 96 58         [ 4]  904 	call	_BME280_ReadReg
      009A4C A4 FC            [ 1]  905 	and	a, #0xfc
      009A4E 6B 01            [ 1]  906 	ld	(0x01, sp), a
                                    907 ;	src\bme280.c: 258: reg |= mode & BME280_MODE_MSK;
      009A50 7B 02            [ 1]  908 	ld	a, (0x02, sp)
      009A52 A4 03            [ 1]  909 	and	a, #0x03
      009A54 1A 01            [ 1]  910 	or	a, (0x01, sp)
                                    911 ;	src\bme280.c: 259: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      009A56 88               [ 1]  912 	push	a
      009A57 A6 F4            [ 1]  913 	ld	a, #0xf4
      009A59 CD 96 43         [ 4]  914 	call	_BME280_WriteReg
                                    915 ;	src\bme280.c: 260: }
      009A5C 85               [ 2]  916 	popw	x
      009A5D 81               [ 4]  917 	ret
                                    918 ;	src\bme280.c: 262: float BME280_ReadTemperature(void) {
                                    919 ;	-----------------------------------------
                                    920 ;	 function BME280_ReadTemperature
                                    921 ;	-----------------------------------------
      009A5E                        922 _BME280_ReadTemperature:
      009A5E 52 10            [ 2]  923 	sub	sp, #16
                                    924 ;	src\bme280.c: 268: BME280_ReadReg_U24(BME280_REGISTER_TEMPDATA, &temper_raw);
      009A60 96               [ 1]  925 	ldw	x, sp
      009A61 5C               [ 1]  926 	incw	x
      009A62 A6 FA            [ 1]  927 	ld	a, #0xfa
      009A64 CD 96 F1         [ 4]  928 	call	_BME280_ReadReg_U24
                                    929 ;	src\bme280.c: 277: temper_raw >>= 4;
      009A67 1E 03            [ 2]  930 	ldw	x, (0x03, sp)
      009A69 16 01            [ 2]  931 	ldw	y, (0x01, sp)
      009A6B 90 57            [ 2]  932 	sraw	y
      009A6D 56               [ 2]  933 	rrcw	x
      009A6E 90 57            [ 2]  934 	sraw	y
      009A70 56               [ 2]  935 	rrcw	x
      009A71 90 57            [ 2]  936 	sraw	y
      009A73 56               [ 2]  937 	rrcw	x
      009A74 90 57            [ 2]  938 	sraw	y
      009A76 56               [ 2]  939 	rrcw	x
      009A77 1F 03            [ 2]  940 	ldw	(0x03, sp), x
      009A79 17 01            [ 2]  941 	ldw	(0x01, sp), y
                                    942 ;	src\bme280.c: 286: val1 = ((((temper_raw>>3) - ((int32_t)CalibData.dig_T1<<1))) * ((int32_t)CalibData.dig_T2)) >> 11;
      009A7B 16 03            [ 2]  943 	ldw	y, (0x03, sp)
      009A7D 1E 01            [ 2]  944 	ldw	x, (0x01, sp)
      009A7F 57               [ 2]  945 	sraw	x
      009A80 90 56            [ 2]  946 	rrcw	y
      009A82 57               [ 2]  947 	sraw	x
      009A83 90 56            [ 2]  948 	rrcw	y
      009A85 57               [ 2]  949 	sraw	x
      009A86 90 56            [ 2]  950 	rrcw	y
      009A88 1F 05            [ 2]  951 	ldw	(0x05, sp), x
      009A8A CE 00 01         [ 2]  952 	ldw	x, _CalibData+0
      009A8D 0F 0E            [ 1]  953 	clr	(0x0e, sp)
      009A8F 4F               [ 1]  954 	clr	a
      009A90 6B 09            [ 1]  955 	ld	(0x09, sp), a
      009A92 7B 0E            [ 1]  956 	ld	a, (0x0e, sp)
      009A94 58               [ 2]  957 	sllw	x
      009A95 49               [ 1]  958 	rlc	a
      009A96 09 09            [ 1]  959 	rlc	(0x09, sp)
      009A98 1F 0B            [ 2]  960 	ldw	(0x0b, sp), x
      009A9A 72 F2 0B         [ 2]  961 	subw	y, (0x0b, sp)
      009A9D 88               [ 1]  962 	push	a
      009A9E 7B 07            [ 1]  963 	ld	a, (0x07, sp)
      009AA0 12 01            [ 1]  964 	sbc	a, (1, sp)
      009AA2 6B 0F            [ 1]  965 	ld	(0x0f, sp), a
      009AA4 7B 06            [ 1]  966 	ld	a, (0x06, sp)
      009AA6 12 0A            [ 1]  967 	sbc	a, (0x0a, sp)
      009AA8 6B 0E            [ 1]  968 	ld	(0x0e, sp), a
      009AAA 84               [ 1]  969 	pop	a
      009AAB CE 00 03         [ 2]  970 	ldw	x, _CalibData+2
      009AAE 9E               [ 1]  971 	ld	a, xh
      009AAF 49               [ 1]  972 	rlc	a
      009AB0 4F               [ 1]  973 	clr	a
      009AB1 A2 00            [ 1]  974 	sbc	a, #0x00
      009AB3 6B 0A            [ 1]  975 	ld	(0x0a, sp), a
      009AB5 6B 09            [ 1]  976 	ld	(0x09, sp), a
      009AB7 89               [ 2]  977 	pushw	x
      009AB8 1E 0B            [ 2]  978 	ldw	x, (0x0b, sp)
      009ABA 89               [ 2]  979 	pushw	x
      009ABB 90 89            [ 2]  980 	pushw	y
      009ABD 1E 13            [ 2]  981 	ldw	x, (0x13, sp)
      009ABF 89               [ 2]  982 	pushw	x
      009AC0 CD B4 88         [ 4]  983 	call	__mullong
      009AC3 5B 08            [ 2]  984 	addw	sp, #8
      009AC5 A6 0B            [ 1]  985 	ld	a, #0x0b
      009AC7                        986 00103$:
      009AC7 90 57            [ 2]  987 	sraw	y
      009AC9 56               [ 2]  988 	rrcw	x
      009ACA 4A               [ 1]  989 	dec	a
      009ACB 26 FA            [ 1]  990 	jrne	00103$
      009ACD 1F 07            [ 2]  991 	ldw	(0x07, sp), x
      009ACF 17 05            [ 2]  992 	ldw	(0x05, sp), y
                                    993 ;	src\bme280.c: 287: val2 = (((((temper_raw>>4) - ((int32_t)CalibData.dig_T1)) * ((temper_raw>>4) - ((int32_t)CalibData.dig_T1)))>>12) * ((int32_t)CalibData.dig_T3)) >> 14;
      009AD1 16 03            [ 2]  994 	ldw	y, (0x03, sp)
      009AD3 1E 01            [ 2]  995 	ldw	x, (0x01, sp)
      009AD5 57               [ 2]  996 	sraw	x
      009AD6 90 56            [ 2]  997 	rrcw	y
      009AD8 57               [ 2]  998 	sraw	x
      009AD9 90 56            [ 2]  999 	rrcw	y
      009ADB 57               [ 2] 1000 	sraw	x
      009ADC 90 56            [ 2] 1001 	rrcw	y
      009ADE 57               [ 2] 1002 	sraw	x
      009ADF 90 56            [ 2] 1003 	rrcw	y
      009AE1 1F 09            [ 2] 1004 	ldw	(0x09, sp), x
      009AE3 CE 00 01         [ 2] 1005 	ldw	x, _CalibData+0
      009AE6 1F 0F            [ 2] 1006 	ldw	(0x0f, sp), x
      009AE8 5F               [ 1] 1007 	clrw	x
      009AE9 72 F2 0F         [ 2] 1008 	subw	y, (0x0f, sp)
      009AEC 7B 0A            [ 1] 1009 	ld	a, (0x0a, sp)
      009AEE 89               [ 2] 1010 	pushw	x
      009AEF 12 02            [ 1] 1011 	sbc	a, (2, sp)
      009AF1 85               [ 2] 1012 	popw	x
      009AF2 97               [ 1] 1013 	ld	xl, a
      009AF3 7B 09            [ 1] 1014 	ld	a, (0x09, sp)
      009AF5 89               [ 2] 1015 	pushw	x
      009AF6 12 01            [ 1] 1016 	sbc	a, (1, sp)
      009AF8 85               [ 2] 1017 	popw	x
      009AF9 95               [ 1] 1018 	ld	xh, a
      009AFA 90 89            [ 2] 1019 	pushw	y
      009AFC 89               [ 2] 1020 	pushw	x
      009AFD 90 89            [ 2] 1021 	pushw	y
      009AFF 89               [ 2] 1022 	pushw	x
      009B00 CD B4 88         [ 4] 1023 	call	__mullong
      009B03 5B 08            [ 2] 1024 	addw	sp, #8
      009B05 A6 0C            [ 1] 1025 	ld	a, #0x0c
      009B07                       1026 00105$:
      009B07 90 57            [ 2] 1027 	sraw	y
      009B09 56               [ 2] 1028 	rrcw	x
      009B0A 4A               [ 1] 1029 	dec	a
      009B0B 26 FA            [ 1] 1030 	jrne	00105$
      009B0D 1F 0B            [ 2] 1031 	ldw	(0x0b, sp), x
      009B0F CE 00 05         [ 2] 1032 	ldw	x, _CalibData+4
      009B12 9E               [ 1] 1033 	ld	a, xh
      009B13 49               [ 1] 1034 	rlc	a
      009B14 4F               [ 1] 1035 	clr	a
      009B15 A2 00            [ 1] 1036 	sbc	a, #0x00
      009B17 6B 0E            [ 1] 1037 	ld	(0x0e, sp), a
      009B19 6B 0D            [ 1] 1038 	ld	(0x0d, sp), a
      009B1B 89               [ 2] 1039 	pushw	x
      009B1C 1E 0F            [ 2] 1040 	ldw	x, (0x0f, sp)
      009B1E 89               [ 2] 1041 	pushw	x
      009B1F 1E 0F            [ 2] 1042 	ldw	x, (0x0f, sp)
      009B21 89               [ 2] 1043 	pushw	x
      009B22 90 89            [ 2] 1044 	pushw	y
      009B24 CD B4 88         [ 4] 1045 	call	__mullong
      009B27 5B 08            [ 2] 1046 	addw	sp, #8
      009B29 51               [ 1] 1047 	exgw	x, y
      009B2A A6 0E            [ 1] 1048 	ld	a, #0x0e
      009B2C                       1049 00107$:
      009B2C 57               [ 2] 1050 	sraw	x
      009B2D 90 56            [ 2] 1051 	rrcw	y
      009B2F 4A               [ 1] 1052 	dec	a
      009B30 26 FA            [ 1] 1053 	jrne	00107$
                                   1054 ;	src\bme280.c: 288: temper_int = val1 + val2;
      009B32 72 F9 07         [ 2] 1055 	addw	y, (0x07, sp)
      009B35 9F               [ 1] 1056 	ld	a, xl
      009B36 19 06            [ 1] 1057 	adc	a, (0x06, sp)
      009B38 02               [ 1] 1058 	rlwa	x
      009B39 19 05            [ 1] 1059 	adc	a, (0x05, sp)
      009B3B 95               [ 1] 1060 	ld	xh, a
      009B3C 90 CF 00 24      [ 2] 1061 	ldw	_temper_int+2, y
      009B40 CF 00 22         [ 2] 1062 	ldw	_temper_int+0, x
                                   1063 ;	src\bme280.c: 299: temper_float = ((temper_int * 5 + 128) >> 8);
      009B43 CE 00 24         [ 2] 1064 	ldw	x, _temper_int+2
      009B46 89               [ 2] 1065 	pushw	x
      009B47 CE 00 22         [ 2] 1066 	ldw	x, _temper_int+0
      009B4A 89               [ 2] 1067 	pushw	x
      009B4B 4B 05            [ 1] 1068 	push	#0x05
      009B4D 5F               [ 1] 1069 	clrw	x
      009B4E 89               [ 2] 1070 	pushw	x
      009B4F 4B 00            [ 1] 1071 	push	#0x00
      009B51 CD B4 88         [ 4] 1072 	call	__mullong
      009B54 5B 08            [ 2] 1073 	addw	sp, #8
      009B56 17 0D            [ 2] 1074 	ldw	(0x0d, sp), y
      009B58 1C 00 80         [ 2] 1075 	addw	x, #0x0080
      009B5B 51               [ 1] 1076 	exgw	x, y
      009B5C 1E 0D            [ 2] 1077 	ldw	x, (0x0d, sp)
      009B5E 24 01            [ 1] 1078 	jrnc	00109$
      009B60 5C               [ 1] 1079 	incw	x
      009B61                       1080 00109$:
      009B61 4F               [ 1] 1081 	clr	a
      009B62 5D               [ 2] 1082 	tnzw	x
      009B63 2A 01            [ 1] 1083 	jrpl	00110$
      009B65 4A               [ 1] 1084 	dec	a
      009B66                       1085 00110$:
      009B66 01               [ 1] 1086 	rrwa	x
      009B67 90 01            [ 1] 1087 	rrwa	y
      009B69 90 89            [ 2] 1088 	pushw	y
      009B6B 89               [ 2] 1089 	pushw	x
      009B6C CD AC 82         [ 4] 1090 	call	___slong2fs
      009B6F 5B 04            [ 2] 1091 	addw	sp, #4
                                   1092 ;	src\bme280.c: 300: temper_float /= 100.0f;
      009B71 4B 00            [ 1] 1093 	push	#0x00
      009B73 4B 00            [ 1] 1094 	push	#0x00
      009B75 4B C8            [ 1] 1095 	push	#0xc8
      009B77 4B 42            [ 1] 1096 	push	#0x42
      009B79 89               [ 2] 1097 	pushw	x
      009B7A 90 89            [ 2] 1098 	pushw	y
      009B7C CD B4 02         [ 4] 1099 	call	___fsdiv
                                   1100 ;	src\bme280.c: 302: return temper_float;
                                   1101 ;	src\bme280.c: 303: }
      009B7F 5B 10            [ 2] 1102 	addw	sp, #16
      009B81 81               [ 4] 1103 	ret
                                   1104 ;	src\bme280.c: 305: float BME280_ReadPressure(void) {
                                   1105 ;	-----------------------------------------
                                   1106 ;	 function BME280_ReadPressure
                                   1107 ;	-----------------------------------------
      009B82                       1108 _BME280_ReadPressure:
      009B82 52 10            [ 2] 1109 	sub	sp, #16
                                   1110 ;	src\bme280.c: 312: BME280_ReadTemperature(); // must be done first to get t_fine
      009B84 CD 9A 5E         [ 4] 1111 	call	_BME280_ReadTemperature
                                   1112 ;	src\bme280.c: 313: BME280_ReadReg_U24(BME280_REGISTER_PRESSUREDATA, &press_raw);
      009B87 96               [ 1] 1113 	ldw	x, sp
      009B88 5C               [ 1] 1114 	incw	x
      009B89 A6 F7            [ 1] 1115 	ld	a, #0xf7
      009B8B CD 96 F1         [ 4] 1116 	call	_BME280_ReadReg_U24
                                   1117 ;	src\bme280.c: 322: press_raw >>= 4;
      009B8E 1E 03            [ 2] 1118 	ldw	x, (0x03, sp)
      009B90 16 01            [ 2] 1119 	ldw	y, (0x01, sp)
      009B92 90 57            [ 2] 1120 	sraw	y
      009B94 56               [ 2] 1121 	rrcw	x
      009B95 90 57            [ 2] 1122 	sraw	y
      009B97 56               [ 2] 1123 	rrcw	x
      009B98 90 57            [ 2] 1124 	sraw	y
      009B9A 56               [ 2] 1125 	rrcw	x
      009B9B 90 57            [ 2] 1126 	sraw	y
      009B9D 56               [ 2] 1127 	rrcw	x
      009B9E 1F 03            [ 2] 1128 	ldw	(0x03, sp), x
      009BA0 17 01            [ 2] 1129 	ldw	(0x01, sp), y
                                   1130 ;	src\bme280.c: 331: val1 = (float)temper_int/2 - 64000.0;
      009BA2 CE 00 24         [ 2] 1131 	ldw	x, _temper_int+2
      009BA5 89               [ 2] 1132 	pushw	x
      009BA6 CE 00 22         [ 2] 1133 	ldw	x, _temper_int+0
      009BA9 89               [ 2] 1134 	pushw	x
      009BAA CD AC 82         [ 4] 1135 	call	___slong2fs
      009BAD 5B 04            [ 2] 1136 	addw	sp, #4
      009BAF 4B 00            [ 1] 1137 	push	#0x00
      009BB1 4B 00            [ 1] 1138 	push	#0x00
      009BB3 4B 00            [ 1] 1139 	push	#0x00
      009BB5 4B 40            [ 1] 1140 	push	#0x40
      009BB7 89               [ 2] 1141 	pushw	x
      009BB8 90 89            [ 2] 1142 	pushw	y
      009BBA CD B4 02         [ 4] 1143 	call	___fsdiv
      009BBD 4B 00            [ 1] 1144 	push	#0x00
      009BBF 4B 00            [ 1] 1145 	push	#0x00
      009BC1 4B 7A            [ 1] 1146 	push	#0x7a
      009BC3 4B 47            [ 1] 1147 	push	#0x47
      009BC5 89               [ 2] 1148 	pushw	x
      009BC6 90 89            [ 2] 1149 	pushw	y
      009BC8 CD AA 34         [ 4] 1150 	call	___fssub
      009BCB 1F 0F            [ 2] 1151 	ldw	(0x0f, sp), x
      009BCD 17 0D            [ 2] 1152 	ldw	(0x0d, sp), y
                                   1153 ;	src\bme280.c: 350: val2 = (val1/4.0) + CalibData.dig_P4 * 65536;
      009BCF 5F               [ 1] 1154 	clrw	x
      009BD0 89               [ 2] 1155 	pushw	x
      009BD1 4B 80            [ 1] 1156 	push	#0x80
      009BD3 4B 40            [ 1] 1157 	push	#0x40
      009BD5 1E 13            [ 2] 1158 	ldw	x, (0x13, sp)
      009BD7 89               [ 2] 1159 	pushw	x
      009BD8 1E 13            [ 2] 1160 	ldw	x, (0x13, sp)
      009BDA 89               [ 2] 1161 	pushw	x
      009BDB CD B4 02         [ 4] 1162 	call	___fsdiv
      009BDE 1F 0B            [ 2] 1163 	ldw	(0x0b, sp), x
      009BE0 17 09            [ 2] 1164 	ldw	(0x09, sp), y
      009BE2 CE 00 0D         [ 2] 1165 	ldw	x, _CalibData+12
      009BE5 9E               [ 1] 1166 	ld	a, xh
      009BE6 49               [ 1] 1167 	rlc	a
      009BE7 4F               [ 1] 1168 	clr	a
      009BE8 A2 00            [ 1] 1169 	sbc	a, #0x00
      009BEA 90 5F            [ 1] 1170 	clrw	y
      009BEC 90 89            [ 2] 1171 	pushw	y
      009BEE 89               [ 2] 1172 	pushw	x
      009BEF CD AC 82         [ 4] 1173 	call	___slong2fs
      009BF2 5B 04            [ 2] 1174 	addw	sp, #4
      009BF4 89               [ 2] 1175 	pushw	x
      009BF5 90 89            [ 2] 1176 	pushw	y
      009BF7 1E 0F            [ 2] 1177 	ldw	x, (0x0f, sp)
      009BF9 89               [ 2] 1178 	pushw	x
      009BFA 1E 0F            [ 2] 1179 	ldw	x, (0x0f, sp)
      009BFC 89               [ 2] 1180 	pushw	x
      009BFD CD AF 3B         [ 4] 1181 	call	___fsadd
      009C00 1F 07            [ 2] 1182 	ldw	(0x07, sp), x
      009C02 17 05            [ 2] 1183 	ldw	(0x05, sp), y
                                   1184 ;	src\bme280.c: 351: val1 = (1 + val1 / 32768) * (float)CalibData.dig_P1;
      009C04 5F               [ 1] 1185 	clrw	x
      009C05 89               [ 2] 1186 	pushw	x
      009C06 4B 00            [ 1] 1187 	push	#0x00
      009C08 4B 47            [ 1] 1188 	push	#0x47
      009C0A 1E 13            [ 2] 1189 	ldw	x, (0x13, sp)
      009C0C 89               [ 2] 1190 	pushw	x
      009C0D 1E 13            [ 2] 1191 	ldw	x, (0x13, sp)
      009C0F 89               [ 2] 1192 	pushw	x
      009C10 CD B4 02         [ 4] 1193 	call	___fsdiv
      009C13 4B 00            [ 1] 1194 	push	#0x00
      009C15 4B 00            [ 1] 1195 	push	#0x00
      009C17 4B 80            [ 1] 1196 	push	#0x80
      009C19 4B 3F            [ 1] 1197 	push	#0x3f
      009C1B 89               [ 2] 1198 	pushw	x
      009C1C 90 89            [ 2] 1199 	pushw	y
      009C1E CD AF 3B         [ 4] 1200 	call	___fsadd
      009C21 1F 0F            [ 2] 1201 	ldw	(0x0f, sp), x
      009C23 17 0D            [ 2] 1202 	ldw	(0x0d, sp), y
      009C25 CE 00 07         [ 2] 1203 	ldw	x, _CalibData+6
      009C28 CD B2 36         [ 4] 1204 	call	___uint2fs
      009C2B 89               [ 2] 1205 	pushw	x
      009C2C 90 89            [ 2] 1206 	pushw	y
      009C2E 1E 13            [ 2] 1207 	ldw	x, (0x13, sp)
      009C30 89               [ 2] 1208 	pushw	x
      009C31 1E 13            [ 2] 1209 	ldw	x, (0x13, sp)
      009C33 89               [ 2] 1210 	pushw	x
      009C34 CD AA C8         [ 4] 1211 	call	___fsmul
      009C37 1F 0B            [ 2] 1212 	ldw	(0x0b, sp), x
      009C39 17 09            [ 2] 1213 	ldw	(0x09, sp), y
                                   1214 ;	src\bme280.c: 352: p = 1048576.0 - (float)press_raw;
      009C3B 1E 03            [ 2] 1215 	ldw	x, (0x03, sp)
      009C3D 89               [ 2] 1216 	pushw	x
      009C3E 1E 03            [ 2] 1217 	ldw	x, (0x03, sp)
      009C40 89               [ 2] 1218 	pushw	x
      009C41 CD AC 82         [ 4] 1219 	call	___slong2fs
      009C44 5B 04            [ 2] 1220 	addw	sp, #4
      009C46 89               [ 2] 1221 	pushw	x
      009C47 90 89            [ 2] 1222 	pushw	y
      009C49 5F               [ 1] 1223 	clrw	x
      009C4A 89               [ 2] 1224 	pushw	x
      009C4B 4B 80            [ 1] 1225 	push	#0x80
      009C4D 4B 49            [ 1] 1226 	push	#0x49
      009C4F CD AA 34         [ 4] 1227 	call	___fssub
      009C52 1F 0F            [ 2] 1228 	ldw	(0x0f, sp), x
      009C54 17 0D            [ 2] 1229 	ldw	(0x0d, sp), y
                                   1230 ;	src\bme280.c: 353: p = (p -(val2/4096)) * 6250 / val1;
      009C56 5F               [ 1] 1231 	clrw	x
      009C57 89               [ 2] 1232 	pushw	x
      009C58 4B 80            [ 1] 1233 	push	#0x80
      009C5A 4B 45            [ 1] 1234 	push	#0x45
      009C5C 1E 0B            [ 2] 1235 	ldw	x, (0x0b, sp)
      009C5E 89               [ 2] 1236 	pushw	x
      009C5F 1E 0B            [ 2] 1237 	ldw	x, (0x0b, sp)
      009C61 89               [ 2] 1238 	pushw	x
      009C62 CD B4 02         [ 4] 1239 	call	___fsdiv
      009C65 89               [ 2] 1240 	pushw	x
      009C66 90 89            [ 2] 1241 	pushw	y
      009C68 1E 13            [ 2] 1242 	ldw	x, (0x13, sp)
      009C6A 89               [ 2] 1243 	pushw	x
      009C6B 1E 13            [ 2] 1244 	ldw	x, (0x13, sp)
      009C6D 89               [ 2] 1245 	pushw	x
      009C6E CD AA 34         [ 4] 1246 	call	___fssub
      009C71 89               [ 2] 1247 	pushw	x
      009C72 90 89            [ 2] 1248 	pushw	y
      009C74 4B 00            [ 1] 1249 	push	#0x00
      009C76 4B 50            [ 1] 1250 	push	#0x50
      009C78 4B C3            [ 1] 1251 	push	#0xc3
      009C7A 4B 45            [ 1] 1252 	push	#0x45
      009C7C CD AA C8         [ 4] 1253 	call	___fsmul
      009C7F 1F 0F            [ 2] 1254 	ldw	(0x0f, sp), x
      009C81 1E 0B            [ 2] 1255 	ldw	x, (0x0b, sp)
      009C83 89               [ 2] 1256 	pushw	x
      009C84 1E 0B            [ 2] 1257 	ldw	x, (0x0b, sp)
      009C86 89               [ 2] 1258 	pushw	x
      009C87 1E 13            [ 2] 1259 	ldw	x, (0x13, sp)
      009C89 89               [ 2] 1260 	pushw	x
      009C8A 90 89            [ 2] 1261 	pushw	y
      009C8C CD B4 02         [ 4] 1262 	call	___fsdiv
      009C8F 1F 0B            [ 2] 1263 	ldw	(0x0b, sp), x
      009C91 17 09            [ 2] 1264 	ldw	(0x09, sp), y
                                   1265 ;	src\bme280.c: 354: val1 = (float)CalibData.dig_P9 * p * p / 2147483648;
      009C93 CE 00 17         [ 2] 1266 	ldw	x, _CalibData+22
      009C96 CD B1 AD         [ 4] 1267 	call	___sint2fs
      009C99 1F 0F            [ 2] 1268 	ldw	(0x0f, sp), x
      009C9B 1E 0B            [ 2] 1269 	ldw	x, (0x0b, sp)
      009C9D 89               [ 2] 1270 	pushw	x
      009C9E 1E 0B            [ 2] 1271 	ldw	x, (0x0b, sp)
      009CA0 89               [ 2] 1272 	pushw	x
      009CA1 1E 13            [ 2] 1273 	ldw	x, (0x13, sp)
      009CA3 89               [ 2] 1274 	pushw	x
      009CA4 90 89            [ 2] 1275 	pushw	y
      009CA6 CD AA C8         [ 4] 1276 	call	___fsmul
      009CA9 1F 0F            [ 2] 1277 	ldw	(0x0f, sp), x
      009CAB 1E 0B            [ 2] 1278 	ldw	x, (0x0b, sp)
      009CAD 89               [ 2] 1279 	pushw	x
      009CAE 1E 0B            [ 2] 1280 	ldw	x, (0x0b, sp)
      009CB0 89               [ 2] 1281 	pushw	x
      009CB1 1E 13            [ 2] 1282 	ldw	x, (0x13, sp)
      009CB3 89               [ 2] 1283 	pushw	x
      009CB4 90 89            [ 2] 1284 	pushw	y
      009CB6 CD AA C8         [ 4] 1285 	call	___fsmul
      009CB9 4B 00            [ 1] 1286 	push	#0x00
      009CBB 4B 00            [ 1] 1287 	push	#0x00
      009CBD 4B 00            [ 1] 1288 	push	#0x00
      009CBF 4B 4F            [ 1] 1289 	push	#0x4f
      009CC1 89               [ 2] 1290 	pushw	x
      009CC2 90 89            [ 2] 1291 	pushw	y
      009CC4 CD B4 02         [ 4] 1292 	call	___fsdiv
      009CC7 1F 0F            [ 2] 1293 	ldw	(0x0f, sp), x
      009CC9 17 0D            [ 2] 1294 	ldw	(0x0d, sp), y
                                   1295 ;	src\bme280.c: 355: val2 = p * (float)CalibData.dig_P8 / 32768.0;
      009CCB CE 00 15         [ 2] 1296 	ldw	x, _CalibData+20
      009CCE CD B1 AD         [ 4] 1297 	call	___sint2fs
      009CD1 89               [ 2] 1298 	pushw	x
      009CD2 90 89            [ 2] 1299 	pushw	y
      009CD4 1E 0F            [ 2] 1300 	ldw	x, (0x0f, sp)
      009CD6 89               [ 2] 1301 	pushw	x
      009CD7 1E 0F            [ 2] 1302 	ldw	x, (0x0f, sp)
      009CD9 89               [ 2] 1303 	pushw	x
      009CDA CD AA C8         [ 4] 1304 	call	___fsmul
      009CDD 4B 00            [ 1] 1305 	push	#0x00
      009CDF 4B 00            [ 1] 1306 	push	#0x00
      009CE1 4B 00            [ 1] 1307 	push	#0x00
      009CE3 4B 47            [ 1] 1308 	push	#0x47
      009CE5 89               [ 2] 1309 	pushw	x
      009CE6 90 89            [ 2] 1310 	pushw	y
      009CE8 CD B4 02         [ 4] 1311 	call	___fsdiv
                                   1312 ;	src\bme280.c: 356: p = p + (val1 + val2 + (float)CalibData.dig_P7)/16.0;
      009CEB 89               [ 2] 1313 	pushw	x
      009CEC 90 89            [ 2] 1314 	pushw	y
      009CEE 1E 13            [ 2] 1315 	ldw	x, (0x13, sp)
      009CF0 89               [ 2] 1316 	pushw	x
      009CF1 1E 13            [ 2] 1317 	ldw	x, (0x13, sp)
      009CF3 89               [ 2] 1318 	pushw	x
      009CF4 CD AF 3B         [ 4] 1319 	call	___fsadd
      009CF7 1F 0F            [ 2] 1320 	ldw	(0x0f, sp), x
      009CF9 17 0D            [ 2] 1321 	ldw	(0x0d, sp), y
      009CFB CE 00 13         [ 2] 1322 	ldw	x, _CalibData+18
      009CFE CD B1 AD         [ 4] 1323 	call	___sint2fs
      009D01 89               [ 2] 1324 	pushw	x
      009D02 90 89            [ 2] 1325 	pushw	y
      009D04 1E 13            [ 2] 1326 	ldw	x, (0x13, sp)
      009D06 89               [ 2] 1327 	pushw	x
      009D07 1E 13            [ 2] 1328 	ldw	x, (0x13, sp)
      009D09 89               [ 2] 1329 	pushw	x
      009D0A CD AF 3B         [ 4] 1330 	call	___fsadd
      009D0D 4B 00            [ 1] 1331 	push	#0x00
      009D0F 4B 00            [ 1] 1332 	push	#0x00
      009D11 4B 80            [ 1] 1333 	push	#0x80
      009D13 4B 41            [ 1] 1334 	push	#0x41
      009D15 89               [ 2] 1335 	pushw	x
      009D16 90 89            [ 2] 1336 	pushw	y
      009D18 CD B4 02         [ 4] 1337 	call	___fsdiv
      009D1B 89               [ 2] 1338 	pushw	x
      009D1C 90 89            [ 2] 1339 	pushw	y
      009D1E 1E 0F            [ 2] 1340 	ldw	x, (0x0f, sp)
      009D20 89               [ 2] 1341 	pushw	x
      009D21 1E 0F            [ 2] 1342 	ldw	x, (0x0f, sp)
      009D23 89               [ 2] 1343 	pushw	x
      009D24 CD AF 3B         [ 4] 1344 	call	___fsadd
                                   1345 ;	src\bme280.c: 380: return p;
                                   1346 ;	src\bme280.c: 381: }
      009D27 5B 10            [ 2] 1347 	addw	sp, #16
      009D29 81               [ 4] 1348 	ret
                                   1349 ;	src\bme280.c: 383: float BME280_ReadHumidity(void) {
                                   1350 ;	-----------------------------------------
                                   1351 ;	 function BME280_ReadHumidity
                                   1352 ;	-----------------------------------------
      009D2A                       1353 _BME280_ReadHumidity:
      009D2A 52 12            [ 2] 1354 	sub	sp, #18
                                   1355 ;	src\bme280.c: 387: BME280_ReadTemperature(); // must be done first to get t_fine
      009D2C CD 9A 5E         [ 4] 1356 	call	_BME280_ReadTemperature
                                   1357 ;	src\bme280.c: 388: BME280_ReadReg_S16(BME280_REGISTER_HUMIDDATA, &hum_raw);
      009D2F 96               [ 1] 1358 	ldw	x, sp
      009D30 5C               [ 1] 1359 	incw	x
      009D31 A6 FD            [ 1] 1360 	ld	a, #0xfd
      009D33 CD 98 65         [ 4] 1361 	call	_BME280_ReadReg_S16
                                   1362 ;	src\bme280.c: 393: hum_raw_sign = ((int32_t)hum_raw)&0x0000FFFF;
      009D36 16 01            [ 2] 1363 	ldw	y, (0x01, sp)
      009D38 5F               [ 1] 1364 	clrw	x
      009D39 90 5D            [ 2] 1365 	tnzw	y
      009D3B 2A 01            [ 1] 1366 	jrpl	00117$
      009D3D 5A               [ 2] 1367 	decw	x
      009D3E                       1368 00117$:
      009D3E 0F 10            [ 1] 1369 	clr	(0x10, sp)
      009D40 0F 0F            [ 1] 1370 	clr	(0x0f, sp)
                                   1371 ;	src\bme280.c: 394: v_x1_u32r = (temper_int - ((int32_t)76800));
      009D42 CE 00 24         [ 2] 1372 	ldw	x, _temper_int+2
      009D45 1D 2C 00         [ 2] 1373 	subw	x, #0x2c00
      009D48 1F 05            [ 2] 1374 	ldw	(0x05, sp), x
      009D4A C6 00 23         [ 1] 1375 	ld	a, _temper_int+1
      009D4D A2 01            [ 1] 1376 	sbc	a, #0x01
      009D4F 6B 04            [ 1] 1377 	ld	(0x04, sp), a
      009D51 C6 00 22         [ 1] 1378 	ld	a, _temper_int+0
      009D54 A2 00            [ 1] 1379 	sbc	a, #0x00
                                   1380 ;	src\bme280.c: 395: v_x1_u32r = (((((hum_raw_sign << 14) - (((int32_t)CalibData.dig_H4) << 20) - \
      009D56 88               [ 1] 1381 	push	a
      009D57 1E 10            [ 2] 1382 	ldw	x, (0x10, sp)
      009D59 A6 0E            [ 1] 1383 	ld	a, #0x0e
      009D5B                       1384 00118$:
      009D5B 90 58            [ 2] 1385 	sllw	y
      009D5D 59               [ 2] 1386 	rlcw	x
      009D5E 4A               [ 1] 1387 	dec	a
      009D5F 26 FA            [ 1] 1388 	jrne	00118$
      009D61 1F 0C            [ 2] 1389 	ldw	(0x0c, sp), x
      009D63 84               [ 1] 1390 	pop	a
      009D64 CE 00 1D         [ 2] 1391 	ldw	x, _CalibData+28
      009D67 1F 09            [ 2] 1392 	ldw	(0x09, sp), x
      009D69 5F               [ 1] 1393 	clrw	x
      009D6A 0D 09            [ 1] 1394 	tnz	(0x09, sp)
      009D6C 2A 01            [ 1] 1395 	jrpl	00120$
      009D6E 5A               [ 2] 1396 	decw	x
      009D6F                       1397 00120$:
      009D6F 88               [ 1] 1398 	push	a
      009D70 1E 0A            [ 2] 1399 	ldw	x, (0x0a, sp)
      009D72 0F 13            [ 1] 1400 	clr	(0x13, sp)
      009D74 0F 12            [ 1] 1401 	clr	(0x12, sp)
      009D76 A6 04            [ 1] 1402 	ld	a, #0x04
      009D78                       1403 00121$:
      009D78 58               [ 2] 1404 	sllw	x
      009D79 4A               [ 1] 1405 	dec	a
      009D7A 26 FC            [ 1] 1406 	jrne	00121$
      009D7C 84               [ 1] 1407 	pop	a
      009D7D 72 F2 11         [ 2] 1408 	subw	y, (0x11, sp)
      009D80 17 09            [ 2] 1409 	ldw	(0x09, sp), y
      009D82 88               [ 1] 1410 	push	a
      009D83 7B 0D            [ 1] 1411 	ld	a, (0x0d, sp)
      009D85 89               [ 2] 1412 	pushw	x
      009D86 12 02            [ 1] 1413 	sbc	a, (2, sp)
      009D88 85               [ 2] 1414 	popw	x
      009D89 6B 09            [ 1] 1415 	ld	(0x09, sp), a
      009D8B 7B 0C            [ 1] 1416 	ld	a, (0x0c, sp)
      009D8D 89               [ 2] 1417 	pushw	x
      009D8E 12 01            [ 1] 1418 	sbc	a, (1, sp)
      009D90 85               [ 2] 1419 	popw	x
      009D91 6B 08            [ 1] 1420 	ld	(0x08, sp), a
      009D93 84               [ 1] 1421 	pop	a
      009D94 CE 00 1F         [ 2] 1422 	ldw	x, _CalibData+30
      009D97 1F 11            [ 2] 1423 	ldw	(0x11, sp), x
      009D99 5F               [ 1] 1424 	clrw	x
      009D9A 0D 11            [ 1] 1425 	tnz	(0x11, sp)
      009D9C 2A 01            [ 1] 1426 	jrpl	00123$
      009D9E 5A               [ 2] 1427 	decw	x
      009D9F                       1428 00123$:
      009D9F 88               [ 1] 1429 	push	a
      009DA0 16 06            [ 2] 1430 	ldw	y, (0x06, sp)
      009DA2 90 89            [ 2] 1431 	pushw	y
      009DA4 61               [ 1] 1432 	exg	a, yl
      009DA5 7B 07            [ 1] 1433 	ld	a, (0x07, sp)
      009DA7 61               [ 1] 1434 	exg	a, yl
      009DA8 90 89            [ 2] 1435 	pushw	y
      009DAA 5B 01            [ 2] 1436 	addw	sp, #1
      009DAC 88               [ 1] 1437 	push	a
      009DAD 16 16            [ 2] 1438 	ldw	y, (0x16, sp)
      009DAF 90 89            [ 2] 1439 	pushw	y
      009DB1 89               [ 2] 1440 	pushw	x
      009DB2 CD B4 88         [ 4] 1441 	call	__mullong
      009DB5 5B 08            [ 2] 1442 	addw	sp, #8
      009DB7 1F 0E            [ 2] 1443 	ldw	(0x0e, sp), x
      009DB9 17 0C            [ 2] 1444 	ldw	(0x0c, sp), y
      009DBB 84               [ 1] 1445 	pop	a
      009DBC 1E 09            [ 2] 1446 	ldw	x, (0x09, sp)
      009DBE 72 F0 0D         [ 2] 1447 	subw	x, (0x0d, sp)
      009DC1 88               [ 1] 1448 	push	a
      009DC2 7B 09            [ 1] 1449 	ld	a, (0x09, sp)
      009DC4 12 0D            [ 1] 1450 	sbc	a, (0x0d, sp)
      009DC6 6B 11            [ 1] 1451 	ld	(0x11, sp), a
      009DC8 7B 08            [ 1] 1452 	ld	a, (0x08, sp)
      009DCA 12 0C            [ 1] 1453 	sbc	a, (0x0c, sp)
      009DCC 6B 10            [ 1] 1454 	ld	(0x10, sp), a
      009DCE 84               [ 1] 1455 	pop	a
      009DCF 1C 40 00         [ 2] 1456 	addw	x, #0x4000
      009DD2 16 0F            [ 2] 1457 	ldw	y, (0x0f, sp)
      009DD4 24 02            [ 1] 1458 	jrnc	00124$
      009DD6 90 5C            [ 1] 1459 	incw	y
      009DD8                       1460 00124$:
      009DD8 88               [ 1] 1461 	push	a
      009DD9 A6 0F            [ 1] 1462 	ld	a, #0x0f
      009DDB                       1463 00125$:
      009DDB 90 57            [ 2] 1464 	sraw	y
      009DDD 56               [ 2] 1465 	rrcw	x
      009DDE 4A               [ 1] 1466 	dec	a
      009DDF 26 FA            [ 1] 1467 	jrne	00125$
      009DE1 1F 0A            [ 2] 1468 	ldw	(0x0a, sp), x
      009DE3 17 08            [ 2] 1469 	ldw	(0x08, sp), y
      009DE5 84               [ 1] 1470 	pop	a
      009DE6 AE 00 01         [ 2] 1471 	ldw	x, #(_CalibData+0)
      009DE9 88               [ 1] 1472 	push	a
      009DEA E6 20            [ 1] 1473 	ld	a, (0x20, x)
      009DEC 97               [ 1] 1474 	ld	xl, a
      009DED 49               [ 1] 1475 	rlc	a
      009DEE 4F               [ 1] 1476 	clr	a
      009DEF A2 00            [ 1] 1477 	sbc	a, #0x00
      009DF1 95               [ 1] 1478 	ld	xh, a
      009DF2 6B 11            [ 1] 1479 	ld	(0x11, sp), a
      009DF4 6B 10            [ 1] 1480 	ld	(0x10, sp), a
      009DF6 84               [ 1] 1481 	pop	a
      009DF7 88               [ 1] 1482 	push	a
      009DF8 89               [ 2] 1483 	pushw	x
      009DF9 1E 12            [ 2] 1484 	ldw	x, (0x12, sp)
      009DFB 89               [ 2] 1485 	pushw	x
      009DFC 1E 0A            [ 2] 1486 	ldw	x, (0x0a, sp)
      009DFE 89               [ 2] 1487 	pushw	x
      009DFF 41               [ 1] 1488 	exg	a, xl
      009E00 7B 0B            [ 1] 1489 	ld	a, (0x0b, sp)
      009E02 41               [ 1] 1490 	exg	a, xl
      009E03 89               [ 2] 1491 	pushw	x
      009E04 5B 01            [ 2] 1492 	addw	sp, #1
      009E06 88               [ 1] 1493 	push	a
      009E07 CD B4 88         [ 4] 1494 	call	__mullong
      009E0A 5B 08            [ 2] 1495 	addw	sp, #8
      009E0C 4F               [ 1] 1496 	clr	a
      009E0D 90 5D            [ 2] 1497 	tnzw	y
      009E0F 2A 01            [ 1] 1498 	jrpl	00127$
      009E11 4A               [ 1] 1499 	dec	a
      009E12                       1500 00127$:
      009E12 90 01            [ 1] 1501 	rrwa	y
      009E14 01               [ 1] 1502 	rrwa	x
      009E15 84               [ 1] 1503 	pop	a
      009E16 90 57            [ 2] 1504 	sraw	y
      009E18 56               [ 2] 1505 	rrcw	x
      009E19 90 57            [ 2] 1506 	sraw	y
      009E1B 56               [ 2] 1507 	rrcw	x
      009E1C 1F 0D            [ 2] 1508 	ldw	(0x0d, sp), x
      009E1E 17 0B            [ 2] 1509 	ldw	(0x0b, sp), y
      009E20 AE 00 01         [ 2] 1510 	ldw	x, #(_CalibData+0)
      009E23 88               [ 1] 1511 	push	a
      009E24 E6 1B            [ 1] 1512 	ld	a, (0x1b, x)
      009E26 97               [ 1] 1513 	ld	xl, a
      009E27 84               [ 1] 1514 	pop	a
      009E28 02               [ 1] 1515 	rlwa	x
      009E29 4F               [ 1] 1516 	clr	a
      009E2A 01               [ 1] 1517 	rrwa	x
      009E2B 0F 10            [ 1] 1518 	clr	(0x10, sp)
      009E2D 0F 0F            [ 1] 1519 	clr	(0x0f, sp)
      009E2F 89               [ 2] 1520 	pushw	x
      009E30 1E 11            [ 2] 1521 	ldw	x, (0x11, sp)
      009E32 89               [ 2] 1522 	pushw	x
      009E33 1E 09            [ 2] 1523 	ldw	x, (0x09, sp)
      009E35 89               [ 2] 1524 	pushw	x
      009E36 41               [ 1] 1525 	exg	a, xl
      009E37 7B 0A            [ 1] 1526 	ld	a, (0x0a, sp)
      009E39 41               [ 1] 1527 	exg	a, xl
      009E3A 89               [ 2] 1528 	pushw	x
      009E3B 5B 01            [ 2] 1529 	addw	sp, #1
      009E3D 88               [ 1] 1530 	push	a
      009E3E CD B4 88         [ 4] 1531 	call	__mullong
      009E41 5B 08            [ 2] 1532 	addw	sp, #8
      009E43 A6 0B            [ 1] 1533 	ld	a, #0x0b
      009E45                       1534 00128$:
      009E45 90 57            [ 2] 1535 	sraw	y
      009E47 56               [ 2] 1536 	rrcw	x
      009E48 4A               [ 1] 1537 	dec	a
      009E49 26 FA            [ 1] 1538 	jrne	00128$
      009E4B 17 0F            [ 2] 1539 	ldw	(0x0f, sp), y
      009E4D 1C 80 00         [ 2] 1540 	addw	x, #0x8000
      009E50 16 0F            [ 2] 1541 	ldw	y, (0x0f, sp)
      009E52 24 02            [ 1] 1542 	jrnc	00130$
      009E54 90 5C            [ 1] 1543 	incw	y
      009E56                       1544 00130$:
      009E56 89               [ 2] 1545 	pushw	x
      009E57 90 89            [ 2] 1546 	pushw	y
      009E59 1E 11            [ 2] 1547 	ldw	x, (0x11, sp)
      009E5B 89               [ 2] 1548 	pushw	x
      009E5C 1E 11            [ 2] 1549 	ldw	x, (0x11, sp)
      009E5E 89               [ 2] 1550 	pushw	x
      009E5F CD B4 88         [ 4] 1551 	call	__mullong
      009E62 5B 08            [ 2] 1552 	addw	sp, #8
      009E64 51               [ 1] 1553 	exgw	x, y
      009E65 4F               [ 1] 1554 	clr	a
      009E66 5D               [ 2] 1555 	tnzw	x
      009E67 2A 01            [ 1] 1556 	jrpl	00131$
      009E69 4A               [ 1] 1557 	dec	a
      009E6A                       1558 00131$:
      009E6A 01               [ 1] 1559 	rrwa	x
      009E6B 90 01            [ 1] 1560 	rrwa	y
      009E6D 57               [ 2] 1561 	sraw	x
      009E6E 90 56            [ 2] 1562 	rrcw	y
      009E70 57               [ 2] 1563 	sraw	x
      009E71 90 56            [ 2] 1564 	rrcw	y
      009E73 1C 00 20         [ 2] 1565 	addw	x, #0x0020
      009E76 1F 0B            [ 2] 1566 	ldw	(0x0b, sp), x
      009E78 CE 00 1A         [ 2] 1567 	ldw	x, _CalibData+25
      009E7B 9E               [ 1] 1568 	ld	a, xh
      009E7C 49               [ 1] 1569 	rlc	a
      009E7D 4F               [ 1] 1570 	clr	a
      009E7E A2 00            [ 1] 1571 	sbc	a, #0x00
      009E80 6B 10            [ 1] 1572 	ld	(0x10, sp), a
      009E82 6B 0F            [ 1] 1573 	ld	(0x0f, sp), a
      009E84 89               [ 2] 1574 	pushw	x
      009E85 1E 11            [ 2] 1575 	ldw	x, (0x11, sp)
      009E87 89               [ 2] 1576 	pushw	x
      009E88 90 89            [ 2] 1577 	pushw	y
      009E8A 1E 11            [ 2] 1578 	ldw	x, (0x11, sp)
      009E8C 89               [ 2] 1579 	pushw	x
      009E8D CD B4 88         [ 4] 1580 	call	__mullong
      009E90 5B 08            [ 2] 1581 	addw	sp, #8
      009E92 17 0F            [ 2] 1582 	ldw	(0x0f, sp), y
      009E94 1C 20 00         [ 2] 1583 	addw	x, #0x2000
      009E97 16 0F            [ 2] 1584 	ldw	y, (0x0f, sp)
      009E99 24 02            [ 1] 1585 	jrnc	00132$
      009E9B 90 5C            [ 1] 1586 	incw	y
      009E9D                       1587 00132$:
      009E9D A6 0E            [ 1] 1588 	ld	a, #0x0e
      009E9F                       1589 00133$:
      009E9F 90 57            [ 2] 1590 	sraw	y
      009EA1 56               [ 2] 1591 	rrcw	x
      009EA2 4A               [ 1] 1592 	dec	a
      009EA3 26 FA            [ 1] 1593 	jrne	00133$
      009EA5 89               [ 2] 1594 	pushw	x
      009EA6 90 89            [ 2] 1595 	pushw	y
      009EA8 1E 0D            [ 2] 1596 	ldw	x, (0x0d, sp)
      009EAA 89               [ 2] 1597 	pushw	x
      009EAB 1E 0D            [ 2] 1598 	ldw	x, (0x0d, sp)
      009EAD 89               [ 2] 1599 	pushw	x
      009EAE CD B4 88         [ 4] 1600 	call	__mullong
      009EB1 5B 08            [ 2] 1601 	addw	sp, #8
      009EB3 1F 0D            [ 2] 1602 	ldw	(0x0d, sp), x
                                   1603 ;	src\bme280.c: 400: v_x1_u32r = (v_x1_u32r - (((((v_x1_u32r >> 15) * (v_x1_u32r >> 15)) >> 7) * \
      009EB5 17 0F            [ 2] 1604 	ldw	(0x0f, sp), y
      009EB7 1E 0D            [ 2] 1605 	ldw	x, (0x0d, sp)
      009EB9 A6 0F            [ 1] 1606 	ld	a, #0x0f
      009EBB                       1607 00135$:
      009EBB 07 0F            [ 1] 1608 	sra	(0x0f, sp)
      009EBD 06 10            [ 1] 1609 	rrc	(0x10, sp)
      009EBF 56               [ 2] 1610 	rrcw	x
      009EC0 4A               [ 1] 1611 	dec	a
      009EC1 26 F8            [ 1] 1612 	jrne	00135$
      009EC3 90 89            [ 2] 1613 	pushw	y
      009EC5 89               [ 2] 1614 	pushw	x
      009EC6 7B 14            [ 1] 1615 	ld	a, (0x14, sp)
      009EC8 88               [ 1] 1616 	push	a
      009EC9 7B 14            [ 1] 1617 	ld	a, (0x14, sp)
      009ECB 88               [ 1] 1618 	push	a
      009ECC 89               [ 2] 1619 	pushw	x
      009ECD 1E 17            [ 2] 1620 	ldw	x, (0x17, sp)
      009ECF 89               [ 2] 1621 	pushw	x
      009ED0 CD B4 88         [ 4] 1622 	call	__mullong
      009ED3 5B 08            [ 2] 1623 	addw	sp, #8
      009ED5 61               [ 1] 1624 	exg	a, yl
      009ED6 6B 12            [ 1] 1625 	ld	(0x12, sp), a
      009ED8 61               [ 1] 1626 	exg	a, yl
      009ED9 90 9E            [ 1] 1627 	ld	a, yh
      009EDB 90 85            [ 2] 1628 	popw	y
      009EDD 88               [ 1] 1629 	push	a
      009EDE 7B 11            [ 1] 1630 	ld	a, (0x11, sp)
      009EE0 6B 09            [ 1] 1631 	ld	(0x09, sp), a
      009EE2 84               [ 1] 1632 	pop	a
      009EE3 47               [ 1] 1633 	sra	a
      009EE4 06 08            [ 1] 1634 	rrc	(0x08, sp)
      009EE6 56               [ 2] 1635 	rrcw	x
      009EE7 47               [ 1] 1636 	sra	a
      009EE8 06 08            [ 1] 1637 	rrc	(0x08, sp)
      009EEA 56               [ 2] 1638 	rrcw	x
      009EEB 47               [ 1] 1639 	sra	a
      009EEC 06 08            [ 1] 1640 	rrc	(0x08, sp)
      009EEE 56               [ 2] 1641 	rrcw	x
      009EEF 47               [ 1] 1642 	sra	a
      009EF0 06 08            [ 1] 1643 	rrc	(0x08, sp)
      009EF2 56               [ 2] 1644 	rrcw	x
      009EF3 47               [ 1] 1645 	sra	a
      009EF4 06 08            [ 1] 1646 	rrc	(0x08, sp)
      009EF6 56               [ 2] 1647 	rrcw	x
      009EF7 47               [ 1] 1648 	sra	a
      009EF8 06 08            [ 1] 1649 	rrc	(0x08, sp)
      009EFA 56               [ 2] 1650 	rrcw	x
      009EFB 47               [ 1] 1651 	sra	a
      009EFC 06 08            [ 1] 1652 	rrc	(0x08, sp)
      009EFE 56               [ 2] 1653 	rrcw	x
      009EFF 1F 09            [ 2] 1654 	ldw	(0x09, sp), x
      009F01 6B 07            [ 1] 1655 	ld	(0x07, sp), a
      009F03 C6 00 19         [ 1] 1656 	ld	a, _CalibData+24
      009F06 5F               [ 1] 1657 	clrw	x
      009F07 1F 0F            [ 2] 1658 	ldw	(0x0f, sp), x
      009F09 90 89            [ 2] 1659 	pushw	y
      009F0B 88               [ 1] 1660 	push	a
      009F0C 9E               [ 1] 1661 	ld	a, xh
      009F0D 88               [ 1] 1662 	push	a
      009F0E 1E 13            [ 2] 1663 	ldw	x, (0x13, sp)
      009F10 89               [ 2] 1664 	pushw	x
      009F11 1E 0F            [ 2] 1665 	ldw	x, (0x0f, sp)
      009F13 89               [ 2] 1666 	pushw	x
      009F14 1E 0F            [ 2] 1667 	ldw	x, (0x0f, sp)
      009F16 89               [ 2] 1668 	pushw	x
      009F17 CD B4 88         [ 4] 1669 	call	__mullong
      009F1A 5B 08            [ 2] 1670 	addw	sp, #8
      009F1C 17 11            [ 2] 1671 	ldw	(0x11, sp), y
      009F1E 90 85            [ 2] 1672 	popw	y
      009F20 7B 10            [ 1] 1673 	ld	a, (0x10, sp)
      009F22 07 0F            [ 1] 1674 	sra	(0x0f, sp)
      009F24 46               [ 1] 1675 	rrc	a
      009F25 56               [ 2] 1676 	rrcw	x
      009F26 07 0F            [ 1] 1677 	sra	(0x0f, sp)
      009F28 46               [ 1] 1678 	rrc	a
      009F29 56               [ 2] 1679 	rrcw	x
      009F2A 07 0F            [ 1] 1680 	sra	(0x0f, sp)
      009F2C 46               [ 1] 1681 	rrc	a
      009F2D 56               [ 2] 1682 	rrcw	x
      009F2E 07 0F            [ 1] 1683 	sra	(0x0f, sp)
      009F30 46               [ 1] 1684 	rrc	a
      009F31 56               [ 2] 1685 	rrcw	x
      009F32 1F 11            [ 2] 1686 	ldw	(0x11, sp), x
      009F34 1E 0D            [ 2] 1687 	ldw	x, (0x0d, sp)
      009F36 72 F0 11         [ 2] 1688 	subw	x, (0x11, sp)
      009F39 88               [ 1] 1689 	push	a
      009F3A 90 9F            [ 1] 1690 	ld	a, yl
      009F3C 12 01            [ 1] 1691 	sbc	a, (1, sp)
      009F3E 90 02            [ 1] 1692 	rlwa	y
      009F40 12 10            [ 1] 1693 	sbc	a, (0x10, sp)
      009F42 90 95            [ 1] 1694 	ld	yh, a
      009F44 84               [ 1] 1695 	pop	a
      009F45 1F 11            [ 2] 1696 	ldw	(0x11, sp), x
      009F47 17 0F            [ 2] 1697 	ldw	(0x0f, sp), y
                                   1698 ;	src\bme280.c: 402: v_x1_u32r = (v_x1_u32r < 0) ? 0 : v_x1_u32r;
      009F49 0D 0F            [ 1] 1699 	tnz	(0x0f, sp)
      009F4B 2A 05            [ 1] 1700 	jrpl	00103$
      009F4D 5F               [ 1] 1701 	clrw	x
      009F4E 1F 11            [ 2] 1702 	ldw	(0x11, sp), x
      009F50 1F 0F            [ 2] 1703 	ldw	(0x0f, sp), x
      009F52                       1704 00103$:
                                   1705 ;	src\bme280.c: 403: v_x1_u32r = (v_x1_u32r > 419430400) ? 419430400 : v_x1_u32r;
      009F52 5F               [ 1] 1706 	clrw	x
      009F53 13 11            [ 2] 1707 	cpw	x, (0x11, sp)
      009F55 4F               [ 1] 1708 	clr	a
      009F56 12 10            [ 1] 1709 	sbc	a, (0x10, sp)
      009F58 A6 19            [ 1] 1710 	ld	a, #0x19
      009F5A 12 0F            [ 1] 1711 	sbc	a, (0x0f, sp)
      009F5C 2E 07            [ 1] 1712 	jrsge	00105$
      009F5E 5F               [ 1] 1713 	clrw	x
      009F5F 1F 11            [ 2] 1714 	ldw	(0x11, sp), x
      009F61 AE 19 00         [ 2] 1715 	ldw	x, #0x1900
      009F64 C5                    1716 	.byte 0xc5
      009F65                       1717 00105$:
      009F65 1E 0F            [ 2] 1718 	ldw	x, (0x0f, sp)
      009F67                       1719 00106$:
      009F67 16 11            [ 2] 1720 	ldw	y, (0x11, sp)
                                   1721 ;	src\bme280.c: 404: hum_float = (uint32_t)(v_x1_u32r >> 12);
      009F69 A6 0C            [ 1] 1722 	ld	a, #0x0c
      009F6B                       1723 00139$:
      009F6B 57               [ 2] 1724 	sraw	x
      009F6C 90 56            [ 2] 1725 	rrcw	y
      009F6E 4A               [ 1] 1726 	dec	a
      009F6F 26 FA            [ 1] 1727 	jrne	00139$
      009F71 90 89            [ 2] 1728 	pushw	y
      009F73 89               [ 2] 1729 	pushw	x
      009F74 CD AD 71         [ 4] 1730 	call	___ulong2fs
      009F77 5B 04            [ 2] 1731 	addw	sp, #4
                                   1732 ;	src\bme280.c: 405: hum_float /= 1024.0f;
      009F79 4B 00            [ 1] 1733 	push	#0x00
      009F7B 4B 00            [ 1] 1734 	push	#0x00
      009F7D 4B 80            [ 1] 1735 	push	#0x80
      009F7F 4B 44            [ 1] 1736 	push	#0x44
      009F81 89               [ 2] 1737 	pushw	x
      009F82 90 89            [ 2] 1738 	pushw	y
      009F84 CD B4 02         [ 4] 1739 	call	___fsdiv
                                   1740 ;	src\bme280.c: 406: return hum_float;
                                   1741 ;	src\bme280.c: 407: }
      009F87 5B 12            [ 2] 1742 	addw	sp, #18
      009F89 81               [ 4] 1743 	ret
                                   1744 	.area CODE
                                   1745 	.area CONST
                                   1746 	.area INITIALIZER
                                   1747 	.area CABS (ABS)
