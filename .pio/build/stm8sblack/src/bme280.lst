                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module bme280
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_Read_Bytes
                                     12 	.globl _I2C_Read_Byte
                                     13 	.globl _I2C_Send_Bytes
                                     14 	.globl _GPIO_WriteLow
                                     15 	.globl _GPIO_WriteHigh
                                     16 	.globl _temper_int
                                     17 	.globl _CalibData
                                     18 	.globl _Error
                                     19 	.globl _BME280_Setup
                                     20 	.globl _BME280_WriteReg
                                     21 	.globl _BME280_ReadReg
                                     22 	.globl _BME280_ReadReg_U16
                                     23 	.globl _BME280_ReadReg_LE_U16
                                     24 	.globl _BME280_ReadReg_U24
                                     25 	.globl _BME280_ReadReg_LE_U24
                                     26 	.globl _BME280_ReadReg_S16
                                     27 	.globl _BME280_ReadReg_LE_S16
                                     28 	.globl _BME280_ReadStatus
                                     29 	.globl _BME280_ReadCoefficients
                                     30 	.globl _BME280_SetStandby
                                     31 	.globl _BME280_SetFilter
                                     32 	.globl _BME280_SetOversamplingTemper
                                     33 	.globl _BME280_SetOversamplingPressure
                                     34 	.globl _BME280_SetOversamplingHum
                                     35 	.globl _BME280_SetMode
                                     36 	.globl _BME280_ReadTemperature
                                     37 	.globl _BME280_ReadPressure
                                     38 	.globl _BME280_ReadHumidity
                                     39 ;--------------------------------------------------------
                                     40 ; ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area DATA
      000000                         43 _CalibData::
      000000                         44 	.ds 33
      000021                         45 _temper_int::
      000021                         46 	.ds 4
                                     47 ;--------------------------------------------------------
                                     48 ; ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area INITIALIZED
                                     51 ;--------------------------------------------------------
                                     52 ; absolute external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area DABS (ABS)
                                     55 
                                     56 ; default segment ordering for linker
                                     57 	.area HOME
                                     58 	.area GSINIT
                                     59 	.area GSFINAL
                                     60 	.area CONST
                                     61 	.area INITIALIZER
                                     62 	.area CODE
                                     63 
                                     64 ;--------------------------------------------------------
                                     65 ; global & static initialisations
                                     66 ;--------------------------------------------------------
                                     67 	.area HOME
                                     68 	.area GSINIT
                                     69 	.area GSFINAL
                                     70 	.area GSINIT
                                     71 ;--------------------------------------------------------
                                     72 ; Home
                                     73 ;--------------------------------------------------------
                                     74 	.area HOME
                                     75 	.area HOME
                                     76 ;--------------------------------------------------------
                                     77 ; code
                                     78 ;--------------------------------------------------------
                                     79 	.area CODE
                                     80 ;	src\bme280.c: 16: void Error(void) {
                                     81 ;	-----------------------------------------
                                     82 ;	 function Error
                                     83 ;	-----------------------------------------
      000000                         84 _Error:
                                     85 ;	src\bme280.c: 17: LED_OFF;
      000000 A6 20            [ 1]   86 	ld	a, #0x20
      000002 AE 50 14         [ 2]   87 	ldw	x, #0x5014
                                     88 ;	src\bme280.c: 18: }
      000005 CCr00r00         [ 2]   89 	jp	_GPIO_WriteHigh
                                     90 ;	src\bme280.c: 20: void BME280_Setup(void) {
                                     91 ;	-----------------------------------------
                                     92 ;	 function BME280_Setup
                                     93 ;	-----------------------------------------
      000008                         94 _BME280_Setup:
                                     95 ;	src\bme280.c: 23: uint8_t res = BME280_ReadReg(BME280_REG_ID);
      000008 A6 D0            [ 1]   96 	ld	a, #0xd0
      00000A CDr00r69         [ 4]   97 	call	_BME280_ReadReg
                                     98 ;	src\bme280.c: 28: if (res != BME280_ID) {
      00000D A1 60            [ 1]   99 	cp	a, #0x60
      00000F 27 03            [ 1]  100 	jreq	00102$
                                    101 ;	src\bme280.c: 29: Error();
                                    102 ;	src\bme280.c: 30: return;
      000011 CCr00r00         [ 2]  103 	jp	_Error
      000014                        104 00102$:
                                    105 ;	src\bme280.c: 33: BME280_WriteReg(BME280_REG_SOFTRESET, BME280_SOFTRESET_VALUE);
      000014 4B B6            [ 1]  106 	push	#0xb6
      000016 A6 E0            [ 1]  107 	ld	a, #0xe0
      000018 CDr00r54         [ 4]  108 	call	_BME280_WriteReg
                                    109 ;	src\bme280.c: 34: while (BME280_ReadStatus() & BME280_STATUS_IM_UPDATE);
      00001B                        110 00103$:
      00001B CDr02rFB         [ 4]  111 	call	_BME280_ReadStatus
      00001E 44               [ 1]  112 	srl	a
      00001F 25 FA            [ 1]  113 	jrc	00103$
                                    114 ;	src\bme280.c: 36: BME280_ReadCoefficients();
      000021 CDr03r03         [ 4]  115 	call	_BME280_ReadCoefficients
                                    116 ;	src\bme280.c: 37: BME280_SetStandby(BME280_STBY_1000);
      000024 A6 A0            [ 1]  117 	ld	a, #0xa0
      000026 CDr03rC8         [ 4]  118 	call	_BME280_SetStandby
                                    119 ;	src\bme280.c: 38: BME280_SetFilter(BME280_FILTER_4);
      000029 A6 08            [ 1]  120 	ld	a, #0x08
      00002B CDr03rE2         [ 4]  121 	call	_BME280_SetFilter
                                    122 ;	src\bme280.c: 39: BME280_SetOversamplingTemper(BME280_OSRS_T_x4);
      00002E A6 60            [ 1]  123 	ld	a, #0x60
      000030 CDr03rFC         [ 4]  124 	call	_BME280_SetOversamplingTemper
                                    125 ;	src\bme280.c: 40: BME280_SetOversamplingPressure(BME280_OSRS_P_x2);
      000033 A6 08            [ 1]  126 	ld	a, #0x08
      000035 CDr04r16         [ 4]  127 	call	_BME280_SetOversamplingPressure
                                    128 ;	src\bme280.c: 41: BME280_SetOversamplingHum(BME280_OSRS_H_x1);
      000038 A6 01            [ 1]  129 	ld	a, #0x01
      00003A CDr04r30         [ 4]  130 	call	_BME280_SetOversamplingHum
                                    131 ;	src\bme280.c: 43: value32 = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      00003D A6 F4            [ 1]  132 	ld	a, #0xf4
      00003F CDr00r69         [ 4]  133 	call	_BME280_ReadReg
                                    134 ;	src\bme280.c: 44: value32 |= BME280_ReadReg(BME280_REG_CTRL_HUM) << 8;
      000042 A6 F2            [ 1]  135 	ld	a, #0xf2
      000044 CDr00r69         [ 4]  136 	call	_BME280_ReadReg
                                    137 ;	src\bme280.c: 57: BME280_SetMode(BME280_MODE_NORMAL);
      000047 A6 03            [ 1]  138 	ld	a, #0x03
      000049 CDr04r55         [ 4]  139 	call	_BME280_SetMode
                                    140 ;	src\bme280.c: 59: LED_ON;
      00004C A6 20            [ 1]  141 	ld	a, #0x20
      00004E AE 50 14         [ 2]  142 	ldw	x, #0x5014
                                    143 ;	src\bme280.c: 60: }
      000051 CCr00r00         [ 2]  144 	jp	_GPIO_WriteLow
                                    145 ;	src\bme280.c: 62: void BME280_WriteReg(uint8_t iReg, uint8_t iValue) {
                                    146 ;	-----------------------------------------
                                    147 ;	 function BME280_WriteReg
                                    148 ;	-----------------------------------------
      000054                        149 _BME280_WriteReg:
      000054 89               [ 2]  150 	pushw	x
                                    151 ;	src\bme280.c: 64: iData[0] = iReg;
      000055 96               [ 1]  152 	ldw	x, sp
      000056 5C               [ 1]  153 	incw	x
      000057 F7               [ 1]  154 	ld	(x), a
                                    155 ;	src\bme280.c: 65: iData[1] = iValue;
      000058 7B 05            [ 1]  156 	ld	a, (0x05, sp)
      00005A 6B 02            [ 1]  157 	ld	(0x02, sp), a
                                    158 ;	src\bme280.c: 66: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00005C 89               [ 2]  159 	pushw	x
      00005D AE 00 02         [ 2]  160 	ldw	x, #0x0002
      000060 A6 EE            [ 1]  161 	ld	a, #0xee
      000062 CDr00r00         [ 4]  162 	call	_I2C_Send_Bytes
                                    163 ;	src\bme280.c: 67: }
      000065 85               [ 2]  164 	popw	x
      000066 85               [ 2]  165 	popw	x
      000067 84               [ 1]  166 	pop	a
      000068 FC               [ 2]  167 	jp	(x)
                                    168 ;	src\bme280.c: 69: uint8_t BME280_ReadReg(uint8_t iReg) {
                                    169 ;	-----------------------------------------
                                    170 ;	 function BME280_ReadReg
                                    171 ;	-----------------------------------------
      000069                        172 _BME280_ReadReg:
      000069 88               [ 1]  173 	push	a
                                    174 ;	src\bme280.c: 71: iData[0] = iReg;
      00006A 96               [ 1]  175 	ldw	x, sp
      00006B 5C               [ 1]  176 	incw	x
      00006C F7               [ 1]  177 	ld	(x), a
                                    178 ;	src\bme280.c: 72: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00006D 89               [ 2]  179 	pushw	x
      00006E 5F               [ 1]  180 	clrw	x
      00006F 5C               [ 1]  181 	incw	x
      000070 A6 EE            [ 1]  182 	ld	a, #0xee
      000072 CDr00r00         [ 4]  183 	call	_I2C_Send_Bytes
                                    184 ;	src\bme280.c: 73: return I2C_Read_Byte(BME280_ADDRESS);
      000075 A6 EE            [ 1]  185 	ld	a, #0xee
      000077 CDr00r00         [ 4]  186 	call	_I2C_Read_Byte
                                    187 ;	src\bme280.c: 74: }
      00007A 5B 01            [ 2]  188 	addw	sp, #1
      00007C 81               [ 4]  189 	ret
                                    190 ;	src\bme280.c: 76: void BME280_ReadReg_U16(uint8_t iReg, uint16_t *iValue) {
                                    191 ;	-----------------------------------------
                                    192 ;	 function BME280_ReadReg_U16
                                    193 ;	-----------------------------------------
      00007D                        194 _BME280_ReadReg_U16:
      00007D 52 07            [ 2]  195 	sub	sp, #7
      00007F 1F 06            [ 2]  196 	ldw	(0x06, sp), x
                                    197 ;	src\bme280.c: 79: iData[0] = iReg;
      000081 96               [ 1]  198 	ldw	x, sp
      000082 5C               [ 1]  199 	incw	x
      000083 F7               [ 1]  200 	ld	(x), a
                                    201 ;	src\bme280.c: 80: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      000084 89               [ 2]  202 	pushw	x
      000085 5F               [ 1]  203 	clrw	x
      000086 5C               [ 1]  204 	incw	x
      000087 A6 EE            [ 1]  205 	ld	a, #0xee
      000089 CDr00r00         [ 4]  206 	call	_I2C_Send_Bytes
                                    207 ;	src\bme280.c: 81: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      00008C 96               [ 1]  208 	ldw	x, sp
      00008D 5C               [ 1]  209 	incw	x
      00008E 5C               [ 1]  210 	incw	x
      00008F 89               [ 2]  211 	pushw	x
      000090 AE 00 02         [ 2]  212 	ldw	x, #0x0002
      000093 A6 EE            [ 1]  213 	ld	a, #0xee
      000095 CDr00r00         [ 4]  214 	call	_I2C_Read_Bytes
                                    215 ;	src\bme280.c: 82: *iValue = iRes[0];
      000098 7B 02            [ 1]  216 	ld	a, (0x02, sp)
      00009A 90 5F            [ 1]  217 	clrw	y
      00009C 90 97            [ 1]  218 	ld	yl, a
      00009E 1E 06            [ 2]  219 	ldw	x, (0x06, sp)
      0000A0 FF               [ 2]  220 	ldw	(x), y
                                    221 ;	src\bme280.c: 83: *iValue <<= 8;
      0000A1 4F               [ 1]  222 	clr	a
      0000A2 90 02            [ 1]  223 	rlwa	y
      0000A4 1E 06            [ 2]  224 	ldw	x, (0x06, sp)
      0000A6 FF               [ 2]  225 	ldw	(x), y
                                    226 ;	src\bme280.c: 84: *iValue += iRes[1];
      0000A7 7B 03            [ 1]  227 	ld	a, (0x03, sp)
      0000A9 5F               [ 1]  228 	clrw	x
      0000AA 97               [ 1]  229 	ld	xl, a
      0000AB 1F 04            [ 2]  230 	ldw	(0x04, sp), x
      0000AD 72 F9 04         [ 2]  231 	addw	y, (0x04, sp)
      0000B0 1E 06            [ 2]  232 	ldw	x, (0x06, sp)
      0000B2 FF               [ 2]  233 	ldw	(x), y
                                    234 ;	src\bme280.c: 85: }
      0000B3 5B 07            [ 2]  235 	addw	sp, #7
      0000B5 81               [ 4]  236 	ret
                                    237 ;	src\bme280.c: 87: void BME280_ReadReg_LE_U16(uint8_t iReg, uint16_t *iValue) {
                                    238 ;	-----------------------------------------
                                    239 ;	 function BME280_ReadReg_LE_U16
                                    240 ;	-----------------------------------------
      0000B6                        241 _BME280_ReadReg_LE_U16:
      0000B6 52 09            [ 2]  242 	sub	sp, #9
      0000B8 1F 08            [ 2]  243 	ldw	(0x08, sp), x
                                    244 ;	src\bme280.c: 90: iData[0] = iReg;
      0000BA 96               [ 1]  245 	ldw	x, sp
      0000BB 5C               [ 1]  246 	incw	x
      0000BC F7               [ 1]  247 	ld	(x), a
                                    248 ;	src\bme280.c: 91: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0000BD 89               [ 2]  249 	pushw	x
      0000BE 5F               [ 1]  250 	clrw	x
      0000BF 5C               [ 1]  251 	incw	x
      0000C0 A6 EE            [ 1]  252 	ld	a, #0xee
      0000C2 CDr00r00         [ 4]  253 	call	_I2C_Send_Bytes
                                    254 ;	src\bme280.c: 92: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0000C5 96               [ 1]  255 	ldw	x, sp
      0000C6 5C               [ 1]  256 	incw	x
      0000C7 5C               [ 1]  257 	incw	x
      0000C8 89               [ 2]  258 	pushw	x
      0000C9 AE 00 02         [ 2]  259 	ldw	x, #0x0002
      0000CC A6 EE            [ 1]  260 	ld	a, #0xee
      0000CE CDr00r00         [ 4]  261 	call	_I2C_Read_Bytes
                                    262 ;	src\bme280.c: 93: *iValue = iRes[0];
      0000D1 7B 02            [ 1]  263 	ld	a, (0x02, sp)
      0000D3 90 5F            [ 1]  264 	clrw	y
      0000D5 90 97            [ 1]  265 	ld	yl, a
      0000D7 1E 08            [ 2]  266 	ldw	x, (0x08, sp)
      0000D9 FF               [ 2]  267 	ldw	(x), y
                                    268 ;	src\bme280.c: 94: *iValue <<= 8;
      0000DA 4F               [ 1]  269 	clr	a
      0000DB 90 02            [ 1]  270 	rlwa	y
      0000DD 1E 08            [ 2]  271 	ldw	x, (0x08, sp)
      0000DF FF               [ 2]  272 	ldw	(x), y
                                    273 ;	src\bme280.c: 95: *iValue += iRes[1];
      0000E0 7B 03            [ 1]  274 	ld	a, (0x03, sp)
      0000E2 5F               [ 1]  275 	clrw	x
      0000E3 97               [ 1]  276 	ld	xl, a
      0000E4 1F 06            [ 2]  277 	ldw	(0x06, sp), x
      0000E6 72 F9 06         [ 2]  278 	addw	y, (0x06, sp)
      0000E9 1E 08            [ 2]  279 	ldw	x, (0x08, sp)
      0000EB FF               [ 2]  280 	ldw	(x), y
                                    281 ;	src\bme280.c: 96: *(uint16_t *)iValue = be16toword(*(uint16_t *) iValue);
      0000EC 93               [ 1]  282 	ldw	x, y
      0000ED 0F 05            [ 1]  283 	clr	(0x05, sp)
      0000EF 90 9F            [ 1]  284 	ld	a, yl
      0000F1 0F 06            [ 1]  285 	clr	(0x06, sp)
      0000F3 1A 06            [ 1]  286 	or	a, (0x06, sp)
      0000F5 90 95            [ 1]  287 	ld	yh, a
      0000F7 9E               [ 1]  288 	ld	a, xh
      0000F8 1A 05            [ 1]  289 	or	a, (0x05, sp)
      0000FA 90 97            [ 1]  290 	ld	yl, a
      0000FC 1E 08            [ 2]  291 	ldw	x, (0x08, sp)
      0000FE FF               [ 2]  292 	ldw	(x), y
                                    293 ;	src\bme280.c: 97: }
      0000FF 5B 09            [ 2]  294 	addw	sp, #9
      000101 81               [ 4]  295 	ret
                                    296 ;	src\bme280.c: 99: void BME280_ReadReg_U24(uint8_t iReg, uint32_t *iValue) {
                                    297 ;	-----------------------------------------
                                    298 ;	 function BME280_ReadReg_U24
                                    299 ;	-----------------------------------------
      000102                        300 _BME280_ReadReg_U24:
      000102 52 0E            [ 2]  301 	sub	sp, #14
      000104 1F 0D            [ 2]  302 	ldw	(0x0d, sp), x
                                    303 ;	src\bme280.c: 102: iData[0] = iReg;
      000106 96               [ 1]  304 	ldw	x, sp
      000107 5C               [ 1]  305 	incw	x
      000108 F7               [ 1]  306 	ld	(x), a
                                    307 ;	src\bme280.c: 103: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      000109 89               [ 2]  308 	pushw	x
      00010A 5F               [ 1]  309 	clrw	x
      00010B 5C               [ 1]  310 	incw	x
      00010C A6 EE            [ 1]  311 	ld	a, #0xee
      00010E CDr00r00         [ 4]  312 	call	_I2C_Send_Bytes
                                    313 ;	src\bme280.c: 104: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      000111 96               [ 1]  314 	ldw	x, sp
      000112 5C               [ 1]  315 	incw	x
      000113 5C               [ 1]  316 	incw	x
      000114 89               [ 2]  317 	pushw	x
      000115 AE 00 03         [ 2]  318 	ldw	x, #0x0003
      000118 A6 EE            [ 1]  319 	ld	a, #0xee
      00011A CDr00r00         [ 4]  320 	call	_I2C_Read_Bytes
                                    321 ;	src\bme280.c: 105: *iValue = iRes[0];
      00011D 7B 02            [ 1]  322 	ld	a, (0x02, sp)
      00011F 90 5F            [ 1]  323 	clrw	y
      000121 0F 05            [ 1]  324 	clr	(0x05, sp)
      000123 1E 0D            [ 2]  325 	ldw	x, (0x0d, sp)
      000125 E7 03            [ 1]  326 	ld	(0x3, x), a
      000127 EF 01            [ 2]  327 	ldw	(0x1, x), y
      000129 88               [ 1]  328 	push	a
      00012A 7B 06            [ 1]  329 	ld	a, (0x06, sp)
      00012C F7               [ 1]  330 	ld	(x), a
      00012D 84               [ 1]  331 	pop	a
                                    332 ;	src\bme280.c: 106: *iValue <<= 8;
      00012E 6B 0B            [ 1]  333 	ld	(0x0b, sp), a
      000130 17 09            [ 2]  334 	ldw	(0x09, sp), y
      000132 0F 0C            [ 1]  335 	clr	(0x0c, sp)
      000134 1E 0D            [ 2]  336 	ldw	x, (0x0d, sp)
      000136 16 0B            [ 2]  337 	ldw	y, (0x0b, sp)
      000138 EF 02            [ 2]  338 	ldw	(0x2, x), y
      00013A 16 09            [ 2]  339 	ldw	y, (0x09, sp)
      00013C FF               [ 2]  340 	ldw	(x), y
                                    341 ;	src\bme280.c: 107: *iValue += iRes[1];
      00013D 7B 03            [ 1]  342 	ld	a, (0x03, sp)
      00013F 90 5F            [ 1]  343 	clrw	y
      000141 5F               [ 1]  344 	clrw	x
      000142 90 97            [ 1]  345 	ld	yl, a
      000144 72 F9 0B         [ 2]  346 	addw	y, (0x0b, sp)
      000147 9F               [ 1]  347 	ld	a, xl
      000148 19 0A            [ 1]  348 	adc	a, (0x0a, sp)
      00014A 88               [ 1]  349 	push	a
      00014B 9E               [ 1]  350 	ld	a, xh
      00014C 19 0A            [ 1]  351 	adc	a, (0x0a, sp)
      00014E 6B 06            [ 1]  352 	ld	(0x06, sp), a
      000150 84               [ 1]  353 	pop	a
      000151 1E 0D            [ 2]  354 	ldw	x, (0x0d, sp)
      000153 EF 02            [ 2]  355 	ldw	(0x2, x), y
      000155 E7 01            [ 1]  356 	ld	(0x1, x), a
      000157 88               [ 1]  357 	push	a
      000158 7B 06            [ 1]  358 	ld	a, (0x06, sp)
      00015A F7               [ 1]  359 	ld	(x), a
      00015B 84               [ 1]  360 	pop	a
                                    361 ;	src\bme280.c: 108: *iValue <<= 8;
      00015C 17 0A            [ 2]  362 	ldw	(0x0a, sp), y
      00015E 6B 09            [ 1]  363 	ld	(0x09, sp), a
      000160 0F 0C            [ 1]  364 	clr	(0x0c, sp)
      000162 1E 0D            [ 2]  365 	ldw	x, (0x0d, sp)
      000164 16 0B            [ 2]  366 	ldw	y, (0x0b, sp)
      000166 EF 02            [ 2]  367 	ldw	(0x2, x), y
      000168 16 09            [ 2]  368 	ldw	y, (0x09, sp)
      00016A FF               [ 2]  369 	ldw	(x), y
                                    370 ;	src\bme280.c: 109: *iValue += iRes[2];
      00016B 7B 04            [ 1]  371 	ld	a, (0x04, sp)
      00016D 90 5F            [ 1]  372 	clrw	y
      00016F 5F               [ 1]  373 	clrw	x
      000170 90 97            [ 1]  374 	ld	yl, a
      000172 72 F9 0B         [ 2]  375 	addw	y, (0x0b, sp)
      000175 9F               [ 1]  376 	ld	a, xl
      000176 19 0A            [ 1]  377 	adc	a, (0x0a, sp)
      000178 88               [ 1]  378 	push	a
      000179 9E               [ 1]  379 	ld	a, xh
      00017A 19 0A            [ 1]  380 	adc	a, (0x0a, sp)
      00017C 6B 06            [ 1]  381 	ld	(0x06, sp), a
      00017E 84               [ 1]  382 	pop	a
      00017F 1E 0D            [ 2]  383 	ldw	x, (0x0d, sp)
      000181 EF 02            [ 2]  384 	ldw	(0x2, x), y
      000183 E7 01            [ 1]  385 	ld	(0x1, x), a
      000185 88               [ 1]  386 	push	a
      000186 7B 06            [ 1]  387 	ld	a, (0x06, sp)
      000188 F7               [ 1]  388 	ld	(x), a
      000189 84               [ 1]  389 	pop	a
                                    390 ;	src\bme280.c: 110: *(uint32_t*)iValue &= 0x00FFFFFF;
      00018A 6B 0A            [ 1]  391 	ld	(0x0a, sp), a
      00018C 0F 09            [ 1]  392 	clr	(0x09, sp)
      00018E 1E 0D            [ 2]  393 	ldw	x, (0x0d, sp)
      000190 EF 02            [ 2]  394 	ldw	(0x2, x), y
      000192 16 09            [ 2]  395 	ldw	y, (0x09, sp)
      000194 FF               [ 2]  396 	ldw	(x), y
                                    397 ;	src\bme280.c: 111: }
      000195 5B 0E            [ 2]  398 	addw	sp, #14
      000197 81               [ 4]  399 	ret
                                    400 ;	src\bme280.c: 113: void BME280_ReadReg_LE_U24(uint8_t iReg, uint32_t *iValue) {
                                    401 ;	-----------------------------------------
                                    402 ;	 function BME280_ReadReg_LE_U24
                                    403 ;	-----------------------------------------
      000198                        404 _BME280_ReadReg_LE_U24:
      000198 52 16            [ 2]  405 	sub	sp, #22
      00019A 1F 15            [ 2]  406 	ldw	(0x15, sp), x
                                    407 ;	src\bme280.c: 116: iData[0] = iReg;
      00019C 96               [ 1]  408 	ldw	x, sp
      00019D 5C               [ 1]  409 	incw	x
      00019E F7               [ 1]  410 	ld	(x), a
                                    411 ;	src\bme280.c: 117: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00019F 89               [ 2]  412 	pushw	x
      0001A0 5F               [ 1]  413 	clrw	x
      0001A1 5C               [ 1]  414 	incw	x
      0001A2 A6 EE            [ 1]  415 	ld	a, #0xee
      0001A4 CDr00r00         [ 4]  416 	call	_I2C_Send_Bytes
                                    417 ;	src\bme280.c: 118: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0001A7 96               [ 1]  418 	ldw	x, sp
      0001A8 5C               [ 1]  419 	incw	x
      0001A9 5C               [ 1]  420 	incw	x
      0001AA 89               [ 2]  421 	pushw	x
      0001AB AE 00 03         [ 2]  422 	ldw	x, #0x0003
      0001AE A6 EE            [ 1]  423 	ld	a, #0xee
      0001B0 CDr00r00         [ 4]  424 	call	_I2C_Read_Bytes
                                    425 ;	src\bme280.c: 119: *iValue = iRes[0];
      0001B3 7B 02            [ 1]  426 	ld	a, (0x02, sp)
      0001B5 90 5F            [ 1]  427 	clrw	y
      0001B7 0F 0D            [ 1]  428 	clr	(0x0d, sp)
      0001B9 1E 15            [ 2]  429 	ldw	x, (0x15, sp)
      0001BB E7 03            [ 1]  430 	ld	(0x3, x), a
      0001BD EF 01            [ 2]  431 	ldw	(0x1, x), y
      0001BF 88               [ 1]  432 	push	a
      0001C0 7B 0E            [ 1]  433 	ld	a, (0x0e, sp)
      0001C2 F7               [ 1]  434 	ld	(x), a
      0001C3 84               [ 1]  435 	pop	a
                                    436 ;	src\bme280.c: 120: *iValue <<= 8;
      0001C4 6B 13            [ 1]  437 	ld	(0x13, sp), a
      0001C6 17 11            [ 2]  438 	ldw	(0x11, sp), y
      0001C8 0F 14            [ 1]  439 	clr	(0x14, sp)
      0001CA 1E 15            [ 2]  440 	ldw	x, (0x15, sp)
      0001CC 16 13            [ 2]  441 	ldw	y, (0x13, sp)
      0001CE EF 02            [ 2]  442 	ldw	(0x2, x), y
      0001D0 16 11            [ 2]  443 	ldw	y, (0x11, sp)
      0001D2 FF               [ 2]  444 	ldw	(x), y
                                    445 ;	src\bme280.c: 121: *iValue += iRes[1];
      0001D3 7B 03            [ 1]  446 	ld	a, (0x03, sp)
      0001D5 90 5F            [ 1]  447 	clrw	y
      0001D7 5F               [ 1]  448 	clrw	x
      0001D8 90 97            [ 1]  449 	ld	yl, a
      0001DA 72 F9 13         [ 2]  450 	addw	y, (0x13, sp)
      0001DD 9F               [ 1]  451 	ld	a, xl
      0001DE 19 12            [ 1]  452 	adc	a, (0x12, sp)
      0001E0 88               [ 1]  453 	push	a
      0001E1 9E               [ 1]  454 	ld	a, xh
      0001E2 19 12            [ 1]  455 	adc	a, (0x12, sp)
      0001E4 6B 0E            [ 1]  456 	ld	(0x0e, sp), a
      0001E6 84               [ 1]  457 	pop	a
      0001E7 1E 15            [ 2]  458 	ldw	x, (0x15, sp)
      0001E9 EF 02            [ 2]  459 	ldw	(0x2, x), y
      0001EB E7 01            [ 1]  460 	ld	(0x1, x), a
      0001ED 88               [ 1]  461 	push	a
      0001EE 7B 0E            [ 1]  462 	ld	a, (0x0e, sp)
      0001F0 F7               [ 1]  463 	ld	(x), a
      0001F1 84               [ 1]  464 	pop	a
                                    465 ;	src\bme280.c: 122: *iValue <<= 8;
      0001F2 17 12            [ 2]  466 	ldw	(0x12, sp), y
      0001F4 6B 11            [ 1]  467 	ld	(0x11, sp), a
      0001F6 0F 14            [ 1]  468 	clr	(0x14, sp)
      0001F8 1E 15            [ 2]  469 	ldw	x, (0x15, sp)
      0001FA 16 13            [ 2]  470 	ldw	y, (0x13, sp)
      0001FC EF 02            [ 2]  471 	ldw	(0x2, x), y
      0001FE 16 11            [ 2]  472 	ldw	y, (0x11, sp)
      000200 FF               [ 2]  473 	ldw	(x), y
                                    474 ;	src\bme280.c: 123: *iValue += iRes[2];
      000201 7B 04            [ 1]  475 	ld	a, (0x04, sp)
      000203 90 5F            [ 1]  476 	clrw	y
      000205 5F               [ 1]  477 	clrw	x
      000206 90 97            [ 1]  478 	ld	yl, a
      000208 72 F9 13         [ 2]  479 	addw	y, (0x13, sp)
      00020B 9F               [ 1]  480 	ld	a, xl
      00020C 19 12            [ 1]  481 	adc	a, (0x12, sp)
      00020E 6B 06            [ 1]  482 	ld	(0x06, sp), a
      000210 9E               [ 1]  483 	ld	a, xh
      000211 19 11            [ 1]  484 	adc	a, (0x11, sp)
      000213 6B 05            [ 1]  485 	ld	(0x05, sp), a
      000215 1E 15            [ 2]  486 	ldw	x, (0x15, sp)
      000217 EF 02            [ 2]  487 	ldw	(0x2, x), y
      000219 7B 06            [ 1]  488 	ld	a, (0x06, sp)
      00021B E7 01            [ 1]  489 	ld	(0x1, x), a
      00021D 7B 05            [ 1]  490 	ld	a, (0x05, sp)
      00021F F7               [ 1]  491 	ld	(x), a
                                    492 ;	src\bme280.c: 124: *(uint32_t*)iValue = be24toword(*(uint32_t *)iValue) & 0x00FFFFFF;
      000220 7B 06            [ 1]  493 	ld	a, (0x06, sp)
      000222 97               [ 1]  494 	ld	xl, a
      000223 0F 0C            [ 1]  495 	clr	(0x0c, sp)
      000225 02               [ 1]  496 	rlwa	x
      000226 90 9E            [ 1]  497 	ld	a, yh
      000228 01               [ 1]  498 	rrwa	x
      000229 4F               [ 1]  499 	clr	a
      00022A 0F 09            [ 1]  500 	clr	(0x09, sp)
      00022C 0F 0F            [ 1]  501 	clr	(0x0f, sp)
      00022E 0F 0E            [ 1]  502 	clr	(0x0e, sp)
      000230 0F 0D            [ 1]  503 	clr	(0x0d, sp)
      000232 1A 0E            [ 1]  504 	or	a, (0x0e, sp)
      000234 6B 12            [ 1]  505 	ld	(0x12, sp), a
      000236 9F               [ 1]  506 	ld	a, xl
      000237 1A 0C            [ 1]  507 	or	a, (0x0c, sp)
      000239 97               [ 1]  508 	ld	xl, a
      00023A 89               [ 2]  509 	pushw	x
      00023B 7B 11            [ 1]  510 	ld	a, (0x11, sp)
      00023D 1A 01            [ 1]  511 	or	a, (1, sp)
      00023F 85               [ 2]  512 	popw	x
      000240 95               [ 1]  513 	ld	xh, a
      000241 7B 0D            [ 1]  514 	ld	a, (0x0d, sp)
      000243 1A 09            [ 1]  515 	or	a, (0x09, sp)
      000245 0F 10            [ 1]  516 	clr	(0x10, sp)
      000247 0F 0F            [ 1]  517 	clr	(0x0f, sp)
      000249 88               [ 1]  518 	push	a
      00024A 0F 0D            [ 1]  519 	clr	(0x0d, sp)
      00024C 0F 0C            [ 1]  520 	clr	(0x0c, sp)
      00024E 0F 0A            [ 1]  521 	clr	(0x0a, sp)
      000250 84               [ 1]  522 	pop	a
      000251 1A 09            [ 1]  523 	or	a, (0x09, sp)
      000253 90 95            [ 1]  524 	ld	yh, a
      000255 9F               [ 1]  525 	ld	a, xl
      000256 1A 0C            [ 1]  526 	or	a, (0x0c, sp)
      000258 02               [ 1]  527 	rlwa	x
      000259 1A 0B            [ 1]  528 	or	a, (0x0b, sp)
      00025B 95               [ 1]  529 	ld	xh, a
      00025C 90 89            [ 2]  530 	pushw	y
      00025E 7B 14            [ 1]  531 	ld	a, (0x14, sp)
      000260 1A 02            [ 1]  532 	or	a, (2, sp)
      000262 90 85            [ 2]  533 	popw	y
      000264 6B 0E            [ 1]  534 	ld	(0x0e, sp), a
      000266 6B 12            [ 1]  535 	ld	(0x12, sp), a
      000268 0F 11            [ 1]  536 	clr	(0x11, sp)
      00026A 16 15            [ 2]  537 	ldw	y, (0x15, sp)
      00026C 90 EF 02         [ 2]  538 	ldw	(0x2, y), x
      00026F 1E 11            [ 2]  539 	ldw	x, (0x11, sp)
      000271 90 FF            [ 2]  540 	ldw	(y), x
                                    541 ;	src\bme280.c: 125: }
      000273 5B 16            [ 2]  542 	addw	sp, #22
      000275 81               [ 4]  543 	ret
                                    544 ;	src\bme280.c: 127: void BME280_ReadReg_S16(uint8_t iReg, int16_t *iValue) {
                                    545 ;	-----------------------------------------
                                    546 ;	 function BME280_ReadReg_S16
                                    547 ;	-----------------------------------------
      000276                        548 _BME280_ReadReg_S16:
      000276 52 07            [ 2]  549 	sub	sp, #7
      000278 1F 06            [ 2]  550 	ldw	(0x06, sp), x
                                    551 ;	src\bme280.c: 130: iData[0] = iReg;
      00027A 96               [ 1]  552 	ldw	x, sp
      00027B 5C               [ 1]  553 	incw	x
      00027C F7               [ 1]  554 	ld	(x), a
                                    555 ;	src\bme280.c: 131: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00027D 89               [ 2]  556 	pushw	x
      00027E 5F               [ 1]  557 	clrw	x
      00027F 5C               [ 1]  558 	incw	x
      000280 A6 EE            [ 1]  559 	ld	a, #0xee
      000282 CDr00r00         [ 4]  560 	call	_I2C_Send_Bytes
                                    561 ;	src\bme280.c: 132: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      000285 96               [ 1]  562 	ldw	x, sp
      000286 5C               [ 1]  563 	incw	x
      000287 5C               [ 1]  564 	incw	x
      000288 89               [ 2]  565 	pushw	x
      000289 AE 00 02         [ 2]  566 	ldw	x, #0x0002
      00028C A6 EE            [ 1]  567 	ld	a, #0xee
      00028E CDr00r00         [ 4]  568 	call	_I2C_Read_Bytes
                                    569 ;	src\bme280.c: 133: *iValue = iRes[0];
      000291 7B 02            [ 1]  570 	ld	a, (0x02, sp)
      000293 5F               [ 1]  571 	clrw	x
      000294 97               [ 1]  572 	ld	xl, a
      000295 16 06            [ 2]  573 	ldw	y, (0x06, sp)
      000297 90 FF            [ 2]  574 	ldw	(y), x
                                    575 ;	src\bme280.c: 134: *iValue <<= 8;
      000299 4F               [ 1]  576 	clr	a
      00029A 02               [ 1]  577 	rlwa	x
      00029B 16 06            [ 2]  578 	ldw	y, (0x06, sp)
      00029D 90 FF            [ 2]  579 	ldw	(y), x
                                    580 ;	src\bme280.c: 135: *iValue += iRes[1];
      00029F 7B 03            [ 1]  581 	ld	a, (0x03, sp)
      0002A1 6B 05            [ 1]  582 	ld	(0x05, sp), a
      0002A3 0F 04            [ 1]  583 	clr	(0x04, sp)
      0002A5 72 FB 04         [ 2]  584 	addw	x, (0x04, sp)
      0002A8 16 06            [ 2]  585 	ldw	y, (0x06, sp)
      0002AA 90 FF            [ 2]  586 	ldw	(y), x
                                    587 ;	src\bme280.c: 136: }
      0002AC 5B 07            [ 2]  588 	addw	sp, #7
      0002AE 81               [ 4]  589 	ret
                                    590 ;	src\bme280.c: 138: void BME280_ReadReg_LE_S16(uint8_t iReg, int16_t *iValue) {
                                    591 ;	-----------------------------------------
                                    592 ;	 function BME280_ReadReg_LE_S16
                                    593 ;	-----------------------------------------
      0002AF                        594 _BME280_ReadReg_LE_S16:
      0002AF 52 09            [ 2]  595 	sub	sp, #9
      0002B1 1F 08            [ 2]  596 	ldw	(0x08, sp), x
                                    597 ;	src\bme280.c: 141: iData[0] = iReg;
      0002B3 96               [ 1]  598 	ldw	x, sp
      0002B4 5C               [ 1]  599 	incw	x
      0002B5 F7               [ 1]  600 	ld	(x), a
                                    601 ;	src\bme280.c: 142: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0002B6 89               [ 2]  602 	pushw	x
      0002B7 5F               [ 1]  603 	clrw	x
      0002B8 5C               [ 1]  604 	incw	x
      0002B9 A6 EE            [ 1]  605 	ld	a, #0xee
      0002BB CDr00r00         [ 4]  606 	call	_I2C_Send_Bytes
                                    607 ;	src\bme280.c: 143: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0002BE 96               [ 1]  608 	ldw	x, sp
      0002BF 5C               [ 1]  609 	incw	x
      0002C0 5C               [ 1]  610 	incw	x
      0002C1 89               [ 2]  611 	pushw	x
      0002C2 AE 00 02         [ 2]  612 	ldw	x, #0x0002
      0002C5 A6 EE            [ 1]  613 	ld	a, #0xee
      0002C7 CDr00r00         [ 4]  614 	call	_I2C_Read_Bytes
                                    615 ;	src\bme280.c: 144: *iValue = iRes[0];
      0002CA 7B 02            [ 1]  616 	ld	a, (0x02, sp)
      0002CC 5F               [ 1]  617 	clrw	x
      0002CD 97               [ 1]  618 	ld	xl, a
      0002CE 16 08            [ 2]  619 	ldw	y, (0x08, sp)
      0002D0 90 FF            [ 2]  620 	ldw	(y), x
                                    621 ;	src\bme280.c: 145: *iValue <<= 8;
      0002D2 4F               [ 1]  622 	clr	a
      0002D3 02               [ 1]  623 	rlwa	x
      0002D4 16 08            [ 2]  624 	ldw	y, (0x08, sp)
      0002D6 90 FF            [ 2]  625 	ldw	(y), x
                                    626 ;	src\bme280.c: 146: *iValue += iRes[1];
      0002D8 7B 03            [ 1]  627 	ld	a, (0x03, sp)
      0002DA 6B 07            [ 1]  628 	ld	(0x07, sp), a
      0002DC 0F 06            [ 1]  629 	clr	(0x06, sp)
      0002DE 72 FB 06         [ 2]  630 	addw	x, (0x06, sp)
      0002E1 16 08            [ 2]  631 	ldw	y, (0x08, sp)
      0002E3 90 FF            [ 2]  632 	ldw	(y), x
                                    633 ;	src\bme280.c: 147: *(int16_t *)iValue = be16toword(*(int16_t *) iValue);
      0002E5 90 93            [ 1]  634 	ldw	y, x
      0002E7 0F 05            [ 1]  635 	clr	(0x05, sp)
      0002E9 9F               [ 1]  636 	ld	a, xl
      0002EA 0F 06            [ 1]  637 	clr	(0x06, sp)
      0002EC 1A 06            [ 1]  638 	or	a, (0x06, sp)
      0002EE 95               [ 1]  639 	ld	xh, a
      0002EF 90 9E            [ 1]  640 	ld	a, yh
      0002F1 1A 05            [ 1]  641 	or	a, (0x05, sp)
      0002F3 97               [ 1]  642 	ld	xl, a
      0002F4 16 08            [ 2]  643 	ldw	y, (0x08, sp)
      0002F6 90 FF            [ 2]  644 	ldw	(y), x
                                    645 ;	src\bme280.c: 148: }
      0002F8 5B 09            [ 2]  646 	addw	sp, #9
      0002FA 81               [ 4]  647 	ret
                                    648 ;	src\bme280.c: 150: uint8_t BME280_ReadStatus(void) {
                                    649 ;	-----------------------------------------
                                    650 ;	 function BME280_ReadStatus
                                    651 ;	-----------------------------------------
      0002FB                        652 _BME280_ReadStatus:
                                    653 ;	src\bme280.c: 152: uint8_t res = BME280_ReadReg(BME280_REGISTER_STATUS) & 0x09;
      0002FB A6 F3            [ 1]  654 	ld	a, #0xf3
      0002FD CDr00r69         [ 4]  655 	call	_BME280_ReadReg
      000300 A4 09            [ 1]  656 	and	a, #0x09
                                    657 ;	src\bme280.c: 153: return res;
                                    658 ;	src\bme280.c: 154: }
      000302 81               [ 4]  659 	ret
                                    660 ;	src\bme280.c: 156: void BME280_ReadCoefficients(void) {
                                    661 ;	-----------------------------------------
                                    662 ;	 function BME280_ReadCoefficients
                                    663 ;	-----------------------------------------
      000303                        664 _BME280_ReadCoefficients:
      000303 52 04            [ 2]  665 	sub	sp, #4
                                    666 ;	src\bme280.c: 157: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_T1, &CalibData.dig_T1);
      000305 AEr00r00         [ 2]  667 	ldw	x, #(_CalibData+0)
      000308 A6 88            [ 1]  668 	ld	a, #0x88
      00030A CDr00rB6         [ 4]  669 	call	_BME280_ReadReg_LE_U16
                                    670 ;	src\bme280.c: 158: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T2, &CalibData.dig_T2);
      00030D AEr00r02         [ 2]  671 	ldw	x, #(_CalibData+2)
      000310 A6 8A            [ 1]  672 	ld	a, #0x8a
      000312 CDr02rAF         [ 4]  673 	call	_BME280_ReadReg_LE_S16
                                    674 ;	src\bme280.c: 159: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T3, &CalibData.dig_T3);
      000315 AEr00r04         [ 2]  675 	ldw	x, #(_CalibData+4)
      000318 A6 8C            [ 1]  676 	ld	a, #0x8c
      00031A CDr02rAF         [ 4]  677 	call	_BME280_ReadReg_LE_S16
                                    678 ;	src\bme280.c: 160: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_P1, &CalibData.dig_P1);
      00031D AEr00r06         [ 2]  679 	ldw	x, #(_CalibData+6)
      000320 A6 8E            [ 1]  680 	ld	a, #0x8e
      000322 CDr00rB6         [ 4]  681 	call	_BME280_ReadReg_LE_U16
                                    682 ;	src\bme280.c: 161: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P2, &CalibData.dig_P2);
      000325 AEr00r08         [ 2]  683 	ldw	x, #(_CalibData+8)
      000328 A6 90            [ 1]  684 	ld	a, #0x90
      00032A CDr02rAF         [ 4]  685 	call	_BME280_ReadReg_LE_S16
                                    686 ;	src\bme280.c: 162: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P3, &CalibData.dig_P3);
      00032D AEr00r0A         [ 2]  687 	ldw	x, #(_CalibData+10)
      000330 A6 92            [ 1]  688 	ld	a, #0x92
      000332 CDr02rAF         [ 4]  689 	call	_BME280_ReadReg_LE_S16
                                    690 ;	src\bme280.c: 163: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P4, &CalibData.dig_P4);
      000335 AEr00r0C         [ 2]  691 	ldw	x, #(_CalibData+12)
      000338 A6 94            [ 1]  692 	ld	a, #0x94
      00033A CDr02rAF         [ 4]  693 	call	_BME280_ReadReg_LE_S16
                                    694 ;	src\bme280.c: 164: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P5, &CalibData.dig_P5);
      00033D AEr00r0E         [ 2]  695 	ldw	x, #(_CalibData+14)
      000340 A6 96            [ 1]  696 	ld	a, #0x96
      000342 CDr02rAF         [ 4]  697 	call	_BME280_ReadReg_LE_S16
                                    698 ;	src\bme280.c: 165: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P6, &CalibData.dig_P6);
      000345 AEr00r10         [ 2]  699 	ldw	x, #(_CalibData+16)
      000348 A6 98            [ 1]  700 	ld	a, #0x98
      00034A CDr02rAF         [ 4]  701 	call	_BME280_ReadReg_LE_S16
                                    702 ;	src\bme280.c: 166: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P7, &CalibData.dig_P7);
      00034D AEr00r12         [ 2]  703 	ldw	x, #(_CalibData+18)
      000350 A6 9A            [ 1]  704 	ld	a, #0x9a
      000352 CDr02rAF         [ 4]  705 	call	_BME280_ReadReg_LE_S16
                                    706 ;	src\bme280.c: 167: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P8, &CalibData.dig_P8);
      000355 AEr00r14         [ 2]  707 	ldw	x, #(_CalibData+20)
      000358 A6 9C            [ 1]  708 	ld	a, #0x9c
      00035A CDr02rAF         [ 4]  709 	call	_BME280_ReadReg_LE_S16
                                    710 ;	src\bme280.c: 168: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P9, &CalibData.dig_P9);
      00035D AEr00r16         [ 2]  711 	ldw	x, #(_CalibData+22)
      000360 A6 9E            [ 1]  712 	ld	a, #0x9e
      000362 CDr02rAF         [ 4]  713 	call	_BME280_ReadReg_LE_S16
                                    714 ;	src\bme280.c: 169: CalibData.dig_H1 = BME280_ReadReg(BME280_REGISTER_DIG_H1);
      000365 A6 A1            [ 1]  715 	ld	a, #0xa1
      000367 CDr00r69         [ 4]  716 	call	_BME280_ReadReg
      00036A C7u00u18         [ 1]  717 	ld	_CalibData+24, a
                                    718 ;	src\bme280.c: 170: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_H2, &CalibData.dig_H2);
      00036D AEr00r19         [ 2]  719 	ldw	x, #(_CalibData+25)
      000370 A6 E1            [ 1]  720 	ld	a, #0xe1
      000372 CDr02rAF         [ 4]  721 	call	_BME280_ReadReg_LE_S16
                                    722 ;	src\bme280.c: 171: CalibData.dig_H3 = BME280_ReadReg(BME280_REGISTER_DIG_H3);
      000375 A6 E3            [ 1]  723 	ld	a, #0xe3
      000377 CDr00r69         [ 4]  724 	call	_BME280_ReadReg
      00037A C7u00u1B         [ 1]  725 	ld	_CalibData+27, a
                                    726 ;	src\bme280.c: 172: CalibData.dig_H4 = (BME280_ReadReg(BME280_REGISTER_DIG_H4) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H4+1) & 0xF);
      00037D A6 E4            [ 1]  727 	ld	a, #0xe4
      00037F CDr00r69         [ 4]  728 	call	_BME280_ReadReg
      000382 5F               [ 1]  729 	clrw	x
      000383 97               [ 1]  730 	ld	xl, a
      000384 58               [ 2]  731 	sllw	x
      000385 58               [ 2]  732 	sllw	x
      000386 58               [ 2]  733 	sllw	x
      000387 58               [ 2]  734 	sllw	x
      000388 1F 01            [ 2]  735 	ldw	(0x01, sp), x
      00038A A6 E5            [ 1]  736 	ld	a, #0xe5
      00038C CDr00r69         [ 4]  737 	call	_BME280_ReadReg
      00038F A4 0F            [ 1]  738 	and	a, #0x0f
      000391 6B 04            [ 1]  739 	ld	(0x04, sp), a
      000393 7B 01            [ 1]  740 	ld	a, (0x01, sp)
      000395 95               [ 1]  741 	ld	xh, a
      000396 7B 02            [ 1]  742 	ld	a, (0x02, sp)
      000398 1A 04            [ 1]  743 	or	a, (0x04, sp)
      00039A 97               [ 1]  744 	ld	xl, a
      00039B CFu00u1C         [ 2]  745 	ldw	_CalibData+28, x
                                    746 ;	src\bme280.c: 173: CalibData.dig_H5 = (BME280_ReadReg(BME280_REGISTER_DIG_H5+1) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H5) >> 4);
      00039E A6 E6            [ 1]  747 	ld	a, #0xe6
      0003A0 CDr00r69         [ 4]  748 	call	_BME280_ReadReg
      0003A3 5F               [ 1]  749 	clrw	x
      0003A4 97               [ 1]  750 	ld	xl, a
      0003A5 58               [ 2]  751 	sllw	x
      0003A6 58               [ 2]  752 	sllw	x
      0003A7 58               [ 2]  753 	sllw	x
      0003A8 58               [ 2]  754 	sllw	x
      0003A9 1F 03            [ 2]  755 	ldw	(0x03, sp), x
      0003AB A6 E5            [ 1]  756 	ld	a, #0xe5
      0003AD CDr00r69         [ 4]  757 	call	_BME280_ReadReg
      0003B0 4E               [ 1]  758 	swap	a
      0003B1 A4 0F            [ 1]  759 	and	a, #0x0f
      0003B3 5F               [ 1]  760 	clrw	x
      0003B4 1A 04            [ 1]  761 	or	a, (0x04, sp)
      0003B6 02               [ 1]  762 	rlwa	x
      0003B7 1A 03            [ 1]  763 	or	a, (0x03, sp)
      0003B9 95               [ 1]  764 	ld	xh, a
      0003BA CFu00u1E         [ 2]  765 	ldw	_CalibData+30, x
                                    766 ;	src\bme280.c: 174: CalibData.dig_H6 = (int8_t)BME280_ReadReg(BME280_REGISTER_DIG_H6);
      0003BD A6 E7            [ 1]  767 	ld	a, #0xe7
      0003BF CDr00r69         [ 4]  768 	call	_BME280_ReadReg
      0003C2 C7u00u20         [ 1]  769 	ld	_CalibData+32, a
                                    770 ;	src\bme280.c: 214: }
      0003C5 5B 04            [ 2]  771 	addw	sp, #4
      0003C7 81               [ 4]  772 	ret
                                    773 ;	src\bme280.c: 216: void BME280_SetStandby(uint8_t tsb) {
                                    774 ;	-----------------------------------------
                                    775 ;	 function BME280_SetStandby
                                    776 ;	-----------------------------------------
      0003C8                        777 _BME280_SetStandby:
      0003C8 89               [ 2]  778 	pushw	x
      0003C9 6B 02            [ 1]  779 	ld	(0x02, sp), a
                                    780 ;	src\bme280.c: 218: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_STBY_MSK;
      0003CB A6 F5            [ 1]  781 	ld	a, #0xf5
      0003CD CDr00r69         [ 4]  782 	call	_BME280_ReadReg
      0003D0 A4 1F            [ 1]  783 	and	a, #0x1f
      0003D2 6B 01            [ 1]  784 	ld	(0x01, sp), a
                                    785 ;	src\bme280.c: 219: reg |= tsb & BME280_STBY_MSK;
      0003D4 7B 02            [ 1]  786 	ld	a, (0x02, sp)
      0003D6 A4 E0            [ 1]  787 	and	a, #0xe0
      0003D8 1A 01            [ 1]  788 	or	a, (0x01, sp)
                                    789 ;	src\bme280.c: 220: BME280_WriteReg(BME280_REG_CONFIG,reg);
      0003DA 88               [ 1]  790 	push	a
      0003DB A6 F5            [ 1]  791 	ld	a, #0xf5
      0003DD CDr00r54         [ 4]  792 	call	_BME280_WriteReg
                                    793 ;	src\bme280.c: 221: }
      0003E0 85               [ 2]  794 	popw	x
      0003E1 81               [ 4]  795 	ret
                                    796 ;	src\bme280.c: 223: void BME280_SetFilter(uint8_t filter) {
                                    797 ;	-----------------------------------------
                                    798 ;	 function BME280_SetFilter
                                    799 ;	-----------------------------------------
      0003E2                        800 _BME280_SetFilter:
      0003E2 89               [ 2]  801 	pushw	x
      0003E3 6B 02            [ 1]  802 	ld	(0x02, sp), a
                                    803 ;	src\bme280.c: 225: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_FILTER_MSK;
      0003E5 A6 F5            [ 1]  804 	ld	a, #0xf5
      0003E7 CDr00r69         [ 4]  805 	call	_BME280_ReadReg
      0003EA A4 E3            [ 1]  806 	and	a, #0xe3
      0003EC 6B 01            [ 1]  807 	ld	(0x01, sp), a
                                    808 ;	src\bme280.c: 226: reg |= filter & BME280_FILTER_MSK;
      0003EE 7B 02            [ 1]  809 	ld	a, (0x02, sp)
      0003F0 A4 1C            [ 1]  810 	and	a, #0x1c
      0003F2 1A 01            [ 1]  811 	or	a, (0x01, sp)
                                    812 ;	src\bme280.c: 227: BME280_WriteReg(BME280_REG_CONFIG,reg);
      0003F4 88               [ 1]  813 	push	a
      0003F5 A6 F5            [ 1]  814 	ld	a, #0xf5
      0003F7 CDr00r54         [ 4]  815 	call	_BME280_WriteReg
                                    816 ;	src\bme280.c: 228: }
      0003FA 85               [ 2]  817 	popw	x
      0003FB 81               [ 4]  818 	ret
                                    819 ;	src\bme280.c: 230: void BME280_SetOversamplingTemper(uint8_t osrs) {
                                    820 ;	-----------------------------------------
                                    821 ;	 function BME280_SetOversamplingTemper
                                    822 ;	-----------------------------------------
      0003FC                        823 _BME280_SetOversamplingTemper:
      0003FC 89               [ 2]  824 	pushw	x
      0003FD 6B 02            [ 1]  825 	ld	(0x02, sp), a
                                    826 ;	src\bme280.c: 232: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_T_MSK;
      0003FF A6 F4            [ 1]  827 	ld	a, #0xf4
      000401 CDr00r69         [ 4]  828 	call	_BME280_ReadReg
      000404 A4 1F            [ 1]  829 	and	a, #0x1f
      000406 6B 01            [ 1]  830 	ld	(0x01, sp), a
                                    831 ;	src\bme280.c: 233: reg |= osrs & BME280_OSRS_T_MSK;
      000408 7B 02            [ 1]  832 	ld	a, (0x02, sp)
      00040A A4 E0            [ 1]  833 	and	a, #0xe0
      00040C 1A 01            [ 1]  834 	or	a, (0x01, sp)
                                    835 ;	src\bme280.c: 234: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      00040E 88               [ 1]  836 	push	a
      00040F A6 F4            [ 1]  837 	ld	a, #0xf4
      000411 CDr00r54         [ 4]  838 	call	_BME280_WriteReg
                                    839 ;	src\bme280.c: 235: }
      000414 85               [ 2]  840 	popw	x
      000415 81               [ 4]  841 	ret
                                    842 ;	src\bme280.c: 237: void BME280_SetOversamplingPressure(uint8_t osrs) {
                                    843 ;	-----------------------------------------
                                    844 ;	 function BME280_SetOversamplingPressure
                                    845 ;	-----------------------------------------
      000416                        846 _BME280_SetOversamplingPressure:
      000416 89               [ 2]  847 	pushw	x
      000417 6B 02            [ 1]  848 	ld	(0x02, sp), a
                                    849 ;	src\bme280.c: 239: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_P_MSK;
      000419 A6 F4            [ 1]  850 	ld	a, #0xf4
      00041B CDr00r69         [ 4]  851 	call	_BME280_ReadReg
      00041E A4 E3            [ 1]  852 	and	a, #0xe3
      000420 6B 01            [ 1]  853 	ld	(0x01, sp), a
                                    854 ;	src\bme280.c: 240: reg |= osrs & BME280_OSRS_P_MSK;
      000422 7B 02            [ 1]  855 	ld	a, (0x02, sp)
      000424 A4 1C            [ 1]  856 	and	a, #0x1c
      000426 1A 01            [ 1]  857 	or	a, (0x01, sp)
                                    858 ;	src\bme280.c: 241: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      000428 88               [ 1]  859 	push	a
      000429 A6 F4            [ 1]  860 	ld	a, #0xf4
      00042B CDr00r54         [ 4]  861 	call	_BME280_WriteReg
                                    862 ;	src\bme280.c: 242: }
      00042E 85               [ 2]  863 	popw	x
      00042F 81               [ 4]  864 	ret
                                    865 ;	src\bme280.c: 244: void BME280_SetOversamplingHum(uint8_t osrs) {
                                    866 ;	-----------------------------------------
                                    867 ;	 function BME280_SetOversamplingHum
                                    868 ;	-----------------------------------------
      000430                        869 _BME280_SetOversamplingHum:
      000430 89               [ 2]  870 	pushw	x
      000431 6B 02            [ 1]  871 	ld	(0x02, sp), a
                                    872 ;	src\bme280.c: 246: reg = BME280_ReadReg(BME280_REG_CTRL_HUM) & ~BME280_OSRS_H_MSK;
      000433 A6 F2            [ 1]  873 	ld	a, #0xf2
      000435 CDr00r69         [ 4]  874 	call	_BME280_ReadReg
      000438 A4 F8            [ 1]  875 	and	a, #0xf8
      00043A 6B 01            [ 1]  876 	ld	(0x01, sp), a
                                    877 ;	src\bme280.c: 247: reg |= osrs & BME280_OSRS_H_MSK;
      00043C 7B 02            [ 1]  878 	ld	a, (0x02, sp)
      00043E A4 07            [ 1]  879 	and	a, #0x07
      000440 1A 01            [ 1]  880 	or	a, (0x01, sp)
                                    881 ;	src\bme280.c: 248: BME280_WriteReg(BME280_REG_CTRL_HUM,reg);
      000442 88               [ 1]  882 	push	a
      000443 A6 F2            [ 1]  883 	ld	a, #0xf2
      000445 CDr00r54         [ 4]  884 	call	_BME280_WriteReg
                                    885 ;	src\bme280.c: 251: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      000448 A6 F4            [ 1]  886 	ld	a, #0xf4
      00044A CDr00r69         [ 4]  887 	call	_BME280_ReadReg
                                    888 ;	src\bme280.c: 252: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      00044D 88               [ 1]  889 	push	a
      00044E A6 F4            [ 1]  890 	ld	a, #0xf4
      000450 CDr00r54         [ 4]  891 	call	_BME280_WriteReg
                                    892 ;	src\bme280.c: 253: }
      000453 85               [ 2]  893 	popw	x
      000454 81               [ 4]  894 	ret
                                    895 ;	src\bme280.c: 255: void BME280_SetMode(uint8_t mode) {
                                    896 ;	-----------------------------------------
                                    897 ;	 function BME280_SetMode
                                    898 ;	-----------------------------------------
      000455                        899 _BME280_SetMode:
      000455 89               [ 2]  900 	pushw	x
      000456 6B 02            [ 1]  901 	ld	(0x02, sp), a
                                    902 ;	src\bme280.c: 257: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_MODE_MSK;
      000458 A6 F4            [ 1]  903 	ld	a, #0xf4
      00045A CDr00r69         [ 4]  904 	call	_BME280_ReadReg
      00045D A4 FC            [ 1]  905 	and	a, #0xfc
      00045F 6B 01            [ 1]  906 	ld	(0x01, sp), a
                                    907 ;	src\bme280.c: 258: reg |= mode & BME280_MODE_MSK;
      000461 7B 02            [ 1]  908 	ld	a, (0x02, sp)
      000463 A4 03            [ 1]  909 	and	a, #0x03
      000465 1A 01            [ 1]  910 	or	a, (0x01, sp)
                                    911 ;	src\bme280.c: 259: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      000467 88               [ 1]  912 	push	a
      000468 A6 F4            [ 1]  913 	ld	a, #0xf4
      00046A CDr00r54         [ 4]  914 	call	_BME280_WriteReg
                                    915 ;	src\bme280.c: 260: }
      00046D 85               [ 2]  916 	popw	x
      00046E 81               [ 4]  917 	ret
                                    918 ;	src\bme280.c: 262: float BME280_ReadTemperature(void) {
                                    919 ;	-----------------------------------------
                                    920 ;	 function BME280_ReadTemperature
                                    921 ;	-----------------------------------------
      00046F                        922 _BME280_ReadTemperature:
      00046F 52 10            [ 2]  923 	sub	sp, #16
                                    924 ;	src\bme280.c: 268: BME280_ReadReg_U24(BME280_REGISTER_TEMPDATA, &temper_raw);
      000471 96               [ 1]  925 	ldw	x, sp
      000472 5C               [ 1]  926 	incw	x
      000473 A6 FA            [ 1]  927 	ld	a, #0xfa
      000475 CDr01r02         [ 4]  928 	call	_BME280_ReadReg_U24
                                    929 ;	src\bme280.c: 277: temper_raw >>= 4;
      000478 1E 03            [ 2]  930 	ldw	x, (0x03, sp)
      00047A 16 01            [ 2]  931 	ldw	y, (0x01, sp)
      00047C 90 57            [ 2]  932 	sraw	y
      00047E 56               [ 2]  933 	rrcw	x
      00047F 90 57            [ 2]  934 	sraw	y
      000481 56               [ 2]  935 	rrcw	x
      000482 90 57            [ 2]  936 	sraw	y
      000484 56               [ 2]  937 	rrcw	x
      000485 90 57            [ 2]  938 	sraw	y
      000487 56               [ 2]  939 	rrcw	x
      000488 1F 03            [ 2]  940 	ldw	(0x03, sp), x
      00048A 17 01            [ 2]  941 	ldw	(0x01, sp), y
                                    942 ;	src\bme280.c: 286: val1 = ((((temper_raw>>3) - ((int32_t)CalibData.dig_T1<<1))) * ((int32_t)CalibData.dig_T2)) >> 11;
      00048C 16 03            [ 2]  943 	ldw	y, (0x03, sp)
      00048E 1E 01            [ 2]  944 	ldw	x, (0x01, sp)
      000490 57               [ 2]  945 	sraw	x
      000491 90 56            [ 2]  946 	rrcw	y
      000493 57               [ 2]  947 	sraw	x
      000494 90 56            [ 2]  948 	rrcw	y
      000496 57               [ 2]  949 	sraw	x
      000497 90 56            [ 2]  950 	rrcw	y
      000499 1F 05            [ 2]  951 	ldw	(0x05, sp), x
      00049B CEu00u00         [ 2]  952 	ldw	x, _CalibData+0
      00049E 0F 0E            [ 1]  953 	clr	(0x0e, sp)
      0004A0 4F               [ 1]  954 	clr	a
      0004A1 6B 09            [ 1]  955 	ld	(0x09, sp), a
      0004A3 7B 0E            [ 1]  956 	ld	a, (0x0e, sp)
      0004A5 58               [ 2]  957 	sllw	x
      0004A6 49               [ 1]  958 	rlc	a
      0004A7 09 09            [ 1]  959 	rlc	(0x09, sp)
      0004A9 1F 0B            [ 2]  960 	ldw	(0x0b, sp), x
      0004AB 72 F2 0B         [ 2]  961 	subw	y, (0x0b, sp)
      0004AE 88               [ 1]  962 	push	a
      0004AF 7B 07            [ 1]  963 	ld	a, (0x07, sp)
      0004B1 12 01            [ 1]  964 	sbc	a, (1, sp)
      0004B3 6B 0F            [ 1]  965 	ld	(0x0f, sp), a
      0004B5 7B 06            [ 1]  966 	ld	a, (0x06, sp)
      0004B7 12 0A            [ 1]  967 	sbc	a, (0x0a, sp)
      0004B9 6B 0E            [ 1]  968 	ld	(0x0e, sp), a
      0004BB 84               [ 1]  969 	pop	a
      0004BC CEu00u02         [ 2]  970 	ldw	x, _CalibData+2
      0004BF 9E               [ 1]  971 	ld	a, xh
      0004C0 49               [ 1]  972 	rlc	a
      0004C1 4F               [ 1]  973 	clr	a
      0004C2 A2 00            [ 1]  974 	sbc	a, #0x00
      0004C4 6B 0A            [ 1]  975 	ld	(0x0a, sp), a
      0004C6 6B 09            [ 1]  976 	ld	(0x09, sp), a
      0004C8 89               [ 2]  977 	pushw	x
      0004C9 1E 0B            [ 2]  978 	ldw	x, (0x0b, sp)
      0004CB 89               [ 2]  979 	pushw	x
      0004CC 90 89            [ 2]  980 	pushw	y
      0004CE 1E 13            [ 2]  981 	ldw	x, (0x13, sp)
      0004D0 89               [ 2]  982 	pushw	x
      0004D1 CDr00r00         [ 4]  983 	call	__mullong
      0004D4 5B 08            [ 2]  984 	addw	sp, #8
      0004D6 A6 0B            [ 1]  985 	ld	a, #0x0b
      0004D8                        986 00103$:
      0004D8 90 57            [ 2]  987 	sraw	y
      0004DA 56               [ 2]  988 	rrcw	x
      0004DB 4A               [ 1]  989 	dec	a
      0004DC 26 FA            [ 1]  990 	jrne	00103$
      0004DE 1F 07            [ 2]  991 	ldw	(0x07, sp), x
      0004E0 17 05            [ 2]  992 	ldw	(0x05, sp), y
                                    993 ;	src\bme280.c: 287: val2 = (((((temper_raw>>4) - ((int32_t)CalibData.dig_T1)) * ((temper_raw>>4) - ((int32_t)CalibData.dig_T1)))>>12) * ((int32_t)CalibData.dig_T3)) >> 14;
      0004E2 16 03            [ 2]  994 	ldw	y, (0x03, sp)
      0004E4 1E 01            [ 2]  995 	ldw	x, (0x01, sp)
      0004E6 57               [ 2]  996 	sraw	x
      0004E7 90 56            [ 2]  997 	rrcw	y
      0004E9 57               [ 2]  998 	sraw	x
      0004EA 90 56            [ 2]  999 	rrcw	y
      0004EC 57               [ 2] 1000 	sraw	x
      0004ED 90 56            [ 2] 1001 	rrcw	y
      0004EF 57               [ 2] 1002 	sraw	x
      0004F0 90 56            [ 2] 1003 	rrcw	y
      0004F2 1F 09            [ 2] 1004 	ldw	(0x09, sp), x
      0004F4 CEu00u00         [ 2] 1005 	ldw	x, _CalibData+0
      0004F7 1F 0F            [ 2] 1006 	ldw	(0x0f, sp), x
      0004F9 5F               [ 1] 1007 	clrw	x
      0004FA 72 F2 0F         [ 2] 1008 	subw	y, (0x0f, sp)
      0004FD 7B 0A            [ 1] 1009 	ld	a, (0x0a, sp)
      0004FF 89               [ 2] 1010 	pushw	x
      000500 12 02            [ 1] 1011 	sbc	a, (2, sp)
      000502 85               [ 2] 1012 	popw	x
      000503 97               [ 1] 1013 	ld	xl, a
      000504 7B 09            [ 1] 1014 	ld	a, (0x09, sp)
      000506 89               [ 2] 1015 	pushw	x
      000507 12 01            [ 1] 1016 	sbc	a, (1, sp)
      000509 85               [ 2] 1017 	popw	x
      00050A 95               [ 1] 1018 	ld	xh, a
      00050B 90 89            [ 2] 1019 	pushw	y
      00050D 89               [ 2] 1020 	pushw	x
      00050E 90 89            [ 2] 1021 	pushw	y
      000510 89               [ 2] 1022 	pushw	x
      000511 CDr00r00         [ 4] 1023 	call	__mullong
      000514 5B 08            [ 2] 1024 	addw	sp, #8
      000516 A6 0C            [ 1] 1025 	ld	a, #0x0c
      000518                       1026 00105$:
      000518 90 57            [ 2] 1027 	sraw	y
      00051A 56               [ 2] 1028 	rrcw	x
      00051B 4A               [ 1] 1029 	dec	a
      00051C 26 FA            [ 1] 1030 	jrne	00105$
      00051E 1F 0B            [ 2] 1031 	ldw	(0x0b, sp), x
      000520 CEu00u04         [ 2] 1032 	ldw	x, _CalibData+4
      000523 9E               [ 1] 1033 	ld	a, xh
      000524 49               [ 1] 1034 	rlc	a
      000525 4F               [ 1] 1035 	clr	a
      000526 A2 00            [ 1] 1036 	sbc	a, #0x00
      000528 6B 0E            [ 1] 1037 	ld	(0x0e, sp), a
      00052A 6B 0D            [ 1] 1038 	ld	(0x0d, sp), a
      00052C 89               [ 2] 1039 	pushw	x
      00052D 1E 0F            [ 2] 1040 	ldw	x, (0x0f, sp)
      00052F 89               [ 2] 1041 	pushw	x
      000530 1E 0F            [ 2] 1042 	ldw	x, (0x0f, sp)
      000532 89               [ 2] 1043 	pushw	x
      000533 90 89            [ 2] 1044 	pushw	y
      000535 CDr00r00         [ 4] 1045 	call	__mullong
      000538 5B 08            [ 2] 1046 	addw	sp, #8
      00053A 51               [ 1] 1047 	exgw	x, y
      00053B A6 0E            [ 1] 1048 	ld	a, #0x0e
      00053D                       1049 00107$:
      00053D 57               [ 2] 1050 	sraw	x
      00053E 90 56            [ 2] 1051 	rrcw	y
      000540 4A               [ 1] 1052 	dec	a
      000541 26 FA            [ 1] 1053 	jrne	00107$
                                   1054 ;	src\bme280.c: 288: temper_int = val1 + val2;
      000543 72 F9 07         [ 2] 1055 	addw	y, (0x07, sp)
      000546 9F               [ 1] 1056 	ld	a, xl
      000547 19 06            [ 1] 1057 	adc	a, (0x06, sp)
      000549 02               [ 1] 1058 	rlwa	x
      00054A 19 05            [ 1] 1059 	adc	a, (0x05, sp)
      00054C 95               [ 1] 1060 	ld	xh, a
      00054D 90 CFu00u23      [ 2] 1061 	ldw	_temper_int+2, y
      000551 CFu00u21         [ 2] 1062 	ldw	_temper_int+0, x
                                   1063 ;	src\bme280.c: 299: temper_float = ((temper_int * 5 + 128) >> 8);
      000554 CEu00u23         [ 2] 1064 	ldw	x, _temper_int+2
      000557 89               [ 2] 1065 	pushw	x
      000558 CEu00u21         [ 2] 1066 	ldw	x, _temper_int+0
      00055B 89               [ 2] 1067 	pushw	x
      00055C 4B 05            [ 1] 1068 	push	#0x05
      00055E 5F               [ 1] 1069 	clrw	x
      00055F 89               [ 2] 1070 	pushw	x
      000560 4B 00            [ 1] 1071 	push	#0x00
      000562 CDr00r00         [ 4] 1072 	call	__mullong
      000565 5B 08            [ 2] 1073 	addw	sp, #8
      000567 17 0D            [ 2] 1074 	ldw	(0x0d, sp), y
      000569 1C 00 80         [ 2] 1075 	addw	x, #0x0080
      00056C 51               [ 1] 1076 	exgw	x, y
      00056D 1E 0D            [ 2] 1077 	ldw	x, (0x0d, sp)
      00056F 24 01            [ 1] 1078 	jrnc	00109$
      000571 5C               [ 1] 1079 	incw	x
      000572                       1080 00109$:
      000572 4F               [ 1] 1081 	clr	a
      000573 5D               [ 2] 1082 	tnzw	x
      000574 2A 01            [ 1] 1083 	jrpl	00110$
      000576 4A               [ 1] 1084 	dec	a
      000577                       1085 00110$:
      000577 01               [ 1] 1086 	rrwa	x
      000578 90 01            [ 1] 1087 	rrwa	y
      00057A 90 89            [ 2] 1088 	pushw	y
      00057C 89               [ 2] 1089 	pushw	x
      00057D CDr00r00         [ 4] 1090 	call	___slong2fs
      000580 5B 04            [ 2] 1091 	addw	sp, #4
                                   1092 ;	src\bme280.c: 300: temper_float /= 100.0f;
      000582 4B 00            [ 1] 1093 	push	#0x00
      000584 4B 00            [ 1] 1094 	push	#0x00
      000586 4B C8            [ 1] 1095 	push	#0xc8
      000588 4B 42            [ 1] 1096 	push	#0x42
      00058A 89               [ 2] 1097 	pushw	x
      00058B 90 89            [ 2] 1098 	pushw	y
      00058D CDr00r00         [ 4] 1099 	call	___fsdiv
                                   1100 ;	src\bme280.c: 302: return temper_float;
                                   1101 ;	src\bme280.c: 303: }
      000590 5B 10            [ 2] 1102 	addw	sp, #16
      000592 81               [ 4] 1103 	ret
                                   1104 ;	src\bme280.c: 305: float BME280_ReadPressure(void) {
                                   1105 ;	-----------------------------------------
                                   1106 ;	 function BME280_ReadPressure
                                   1107 ;	-----------------------------------------
      000593                       1108 _BME280_ReadPressure:
      000593 52 10            [ 2] 1109 	sub	sp, #16
                                   1110 ;	src\bme280.c: 312: BME280_ReadTemperature(); // must be done first to get t_fine
      000595 CDr04r6F         [ 4] 1111 	call	_BME280_ReadTemperature
                                   1112 ;	src\bme280.c: 313: BME280_ReadReg_U24(BME280_REGISTER_PRESSUREDATA, &press_raw);
      000598 96               [ 1] 1113 	ldw	x, sp
      000599 5C               [ 1] 1114 	incw	x
      00059A A6 F7            [ 1] 1115 	ld	a, #0xf7
      00059C CDr01r02         [ 4] 1116 	call	_BME280_ReadReg_U24
                                   1117 ;	src\bme280.c: 322: press_raw >>= 4;
      00059F 1E 03            [ 2] 1118 	ldw	x, (0x03, sp)
      0005A1 16 01            [ 2] 1119 	ldw	y, (0x01, sp)
      0005A3 90 57            [ 2] 1120 	sraw	y
      0005A5 56               [ 2] 1121 	rrcw	x
      0005A6 90 57            [ 2] 1122 	sraw	y
      0005A8 56               [ 2] 1123 	rrcw	x
      0005A9 90 57            [ 2] 1124 	sraw	y
      0005AB 56               [ 2] 1125 	rrcw	x
      0005AC 90 57            [ 2] 1126 	sraw	y
      0005AE 56               [ 2] 1127 	rrcw	x
      0005AF 1F 03            [ 2] 1128 	ldw	(0x03, sp), x
      0005B1 17 01            [ 2] 1129 	ldw	(0x01, sp), y
                                   1130 ;	src\bme280.c: 331: val1 = (float)temper_int/2 - 64000.0;
      0005B3 CEu00u23         [ 2] 1131 	ldw	x, _temper_int+2
      0005B6 89               [ 2] 1132 	pushw	x
      0005B7 CEu00u21         [ 2] 1133 	ldw	x, _temper_int+0
      0005BA 89               [ 2] 1134 	pushw	x
      0005BB CDr00r00         [ 4] 1135 	call	___slong2fs
      0005BE 5B 04            [ 2] 1136 	addw	sp, #4
      0005C0 4B 00            [ 1] 1137 	push	#0x00
      0005C2 4B 00            [ 1] 1138 	push	#0x00
      0005C4 4B 00            [ 1] 1139 	push	#0x00
      0005C6 4B 40            [ 1] 1140 	push	#0x40
      0005C8 89               [ 2] 1141 	pushw	x
      0005C9 90 89            [ 2] 1142 	pushw	y
      0005CB CDr00r00         [ 4] 1143 	call	___fsdiv
      0005CE 4B 00            [ 1] 1144 	push	#0x00
      0005D0 4B 00            [ 1] 1145 	push	#0x00
      0005D2 4B 7A            [ 1] 1146 	push	#0x7a
      0005D4 4B 47            [ 1] 1147 	push	#0x47
      0005D6 89               [ 2] 1148 	pushw	x
      0005D7 90 89            [ 2] 1149 	pushw	y
      0005D9 CDr00r00         [ 4] 1150 	call	___fssub
      0005DC 1F 0F            [ 2] 1151 	ldw	(0x0f, sp), x
      0005DE 17 0D            [ 2] 1152 	ldw	(0x0d, sp), y
                                   1153 ;	src\bme280.c: 350: val2 = (val1/4.0) + CalibData.dig_P4 * 65536;
      0005E0 5F               [ 1] 1154 	clrw	x
      0005E1 89               [ 2] 1155 	pushw	x
      0005E2 4B 80            [ 1] 1156 	push	#0x80
      0005E4 4B 40            [ 1] 1157 	push	#0x40
      0005E6 1E 13            [ 2] 1158 	ldw	x, (0x13, sp)
      0005E8 89               [ 2] 1159 	pushw	x
      0005E9 1E 13            [ 2] 1160 	ldw	x, (0x13, sp)
      0005EB 89               [ 2] 1161 	pushw	x
      0005EC CDr00r00         [ 4] 1162 	call	___fsdiv
      0005EF 1F 0B            [ 2] 1163 	ldw	(0x0b, sp), x
      0005F1 17 09            [ 2] 1164 	ldw	(0x09, sp), y
      0005F3 CEu00u0C         [ 2] 1165 	ldw	x, _CalibData+12
      0005F6 9E               [ 1] 1166 	ld	a, xh
      0005F7 49               [ 1] 1167 	rlc	a
      0005F8 4F               [ 1] 1168 	clr	a
      0005F9 A2 00            [ 1] 1169 	sbc	a, #0x00
      0005FB 90 5F            [ 1] 1170 	clrw	y
      0005FD 90 89            [ 2] 1171 	pushw	y
      0005FF 89               [ 2] 1172 	pushw	x
      000600 CDr00r00         [ 4] 1173 	call	___slong2fs
      000603 5B 04            [ 2] 1174 	addw	sp, #4
      000605 89               [ 2] 1175 	pushw	x
      000606 90 89            [ 2] 1176 	pushw	y
      000608 1E 0F            [ 2] 1177 	ldw	x, (0x0f, sp)
      00060A 89               [ 2] 1178 	pushw	x
      00060B 1E 0F            [ 2] 1179 	ldw	x, (0x0f, sp)
      00060D 89               [ 2] 1180 	pushw	x
      00060E CDr00r00         [ 4] 1181 	call	___fsadd
      000611 1F 07            [ 2] 1182 	ldw	(0x07, sp), x
      000613 17 05            [ 2] 1183 	ldw	(0x05, sp), y
                                   1184 ;	src\bme280.c: 351: val1 = (1 + val1 / 32768) * (float)CalibData.dig_P1;
      000615 5F               [ 1] 1185 	clrw	x
      000616 89               [ 2] 1186 	pushw	x
      000617 4B 00            [ 1] 1187 	push	#0x00
      000619 4B 47            [ 1] 1188 	push	#0x47
      00061B 1E 13            [ 2] 1189 	ldw	x, (0x13, sp)
      00061D 89               [ 2] 1190 	pushw	x
      00061E 1E 13            [ 2] 1191 	ldw	x, (0x13, sp)
      000620 89               [ 2] 1192 	pushw	x
      000621 CDr00r00         [ 4] 1193 	call	___fsdiv
      000624 4B 00            [ 1] 1194 	push	#0x00
      000626 4B 00            [ 1] 1195 	push	#0x00
      000628 4B 80            [ 1] 1196 	push	#0x80
      00062A 4B 3F            [ 1] 1197 	push	#0x3f
      00062C 89               [ 2] 1198 	pushw	x
      00062D 90 89            [ 2] 1199 	pushw	y
      00062F CDr00r00         [ 4] 1200 	call	___fsadd
      000632 1F 0F            [ 2] 1201 	ldw	(0x0f, sp), x
      000634 17 0D            [ 2] 1202 	ldw	(0x0d, sp), y
      000636 CEu00u06         [ 2] 1203 	ldw	x, _CalibData+6
      000639 CDr00r00         [ 4] 1204 	call	___uint2fs
      00063C 89               [ 2] 1205 	pushw	x
      00063D 90 89            [ 2] 1206 	pushw	y
      00063F 1E 13            [ 2] 1207 	ldw	x, (0x13, sp)
      000641 89               [ 2] 1208 	pushw	x
      000642 1E 13            [ 2] 1209 	ldw	x, (0x13, sp)
      000644 89               [ 2] 1210 	pushw	x
      000645 CDr00r00         [ 4] 1211 	call	___fsmul
      000648 1F 0B            [ 2] 1212 	ldw	(0x0b, sp), x
      00064A 17 09            [ 2] 1213 	ldw	(0x09, sp), y
                                   1214 ;	src\bme280.c: 352: p = 1048576.0 - (float)press_raw;
      00064C 1E 03            [ 2] 1215 	ldw	x, (0x03, sp)
      00064E 89               [ 2] 1216 	pushw	x
      00064F 1E 03            [ 2] 1217 	ldw	x, (0x03, sp)
      000651 89               [ 2] 1218 	pushw	x
      000652 CDr00r00         [ 4] 1219 	call	___slong2fs
      000655 5B 04            [ 2] 1220 	addw	sp, #4
      000657 89               [ 2] 1221 	pushw	x
      000658 90 89            [ 2] 1222 	pushw	y
      00065A 5F               [ 1] 1223 	clrw	x
      00065B 89               [ 2] 1224 	pushw	x
      00065C 4B 80            [ 1] 1225 	push	#0x80
      00065E 4B 49            [ 1] 1226 	push	#0x49
      000660 CDr00r00         [ 4] 1227 	call	___fssub
      000663 1F 0F            [ 2] 1228 	ldw	(0x0f, sp), x
      000665 17 0D            [ 2] 1229 	ldw	(0x0d, sp), y
                                   1230 ;	src\bme280.c: 353: p = (p -(val2/4096)) * 6250 / val1;
      000667 5F               [ 1] 1231 	clrw	x
      000668 89               [ 2] 1232 	pushw	x
      000669 4B 80            [ 1] 1233 	push	#0x80
      00066B 4B 45            [ 1] 1234 	push	#0x45
      00066D 1E 0B            [ 2] 1235 	ldw	x, (0x0b, sp)
      00066F 89               [ 2] 1236 	pushw	x
      000670 1E 0B            [ 2] 1237 	ldw	x, (0x0b, sp)
      000672 89               [ 2] 1238 	pushw	x
      000673 CDr00r00         [ 4] 1239 	call	___fsdiv
      000676 89               [ 2] 1240 	pushw	x
      000677 90 89            [ 2] 1241 	pushw	y
      000679 1E 13            [ 2] 1242 	ldw	x, (0x13, sp)
      00067B 89               [ 2] 1243 	pushw	x
      00067C 1E 13            [ 2] 1244 	ldw	x, (0x13, sp)
      00067E 89               [ 2] 1245 	pushw	x
      00067F CDr00r00         [ 4] 1246 	call	___fssub
      000682 89               [ 2] 1247 	pushw	x
      000683 90 89            [ 2] 1248 	pushw	y
      000685 4B 00            [ 1] 1249 	push	#0x00
      000687 4B 50            [ 1] 1250 	push	#0x50
      000689 4B C3            [ 1] 1251 	push	#0xc3
      00068B 4B 45            [ 1] 1252 	push	#0x45
      00068D CDr00r00         [ 4] 1253 	call	___fsmul
      000690 1F 0F            [ 2] 1254 	ldw	(0x0f, sp), x
      000692 1E 0B            [ 2] 1255 	ldw	x, (0x0b, sp)
      000694 89               [ 2] 1256 	pushw	x
      000695 1E 0B            [ 2] 1257 	ldw	x, (0x0b, sp)
      000697 89               [ 2] 1258 	pushw	x
      000698 1E 13            [ 2] 1259 	ldw	x, (0x13, sp)
      00069A 89               [ 2] 1260 	pushw	x
      00069B 90 89            [ 2] 1261 	pushw	y
      00069D CDr00r00         [ 4] 1262 	call	___fsdiv
      0006A0 1F 0B            [ 2] 1263 	ldw	(0x0b, sp), x
      0006A2 17 09            [ 2] 1264 	ldw	(0x09, sp), y
                                   1265 ;	src\bme280.c: 354: val1 = (float)CalibData.dig_P9 * p * p / 2147483648;
      0006A4 CEu00u16         [ 2] 1266 	ldw	x, _CalibData+22
      0006A7 CDr00r00         [ 4] 1267 	call	___sint2fs
      0006AA 1F 0F            [ 2] 1268 	ldw	(0x0f, sp), x
      0006AC 1E 0B            [ 2] 1269 	ldw	x, (0x0b, sp)
      0006AE 89               [ 2] 1270 	pushw	x
      0006AF 1E 0B            [ 2] 1271 	ldw	x, (0x0b, sp)
      0006B1 89               [ 2] 1272 	pushw	x
      0006B2 1E 13            [ 2] 1273 	ldw	x, (0x13, sp)
      0006B4 89               [ 2] 1274 	pushw	x
      0006B5 90 89            [ 2] 1275 	pushw	y
      0006B7 CDr00r00         [ 4] 1276 	call	___fsmul
      0006BA 1F 0F            [ 2] 1277 	ldw	(0x0f, sp), x
      0006BC 1E 0B            [ 2] 1278 	ldw	x, (0x0b, sp)
      0006BE 89               [ 2] 1279 	pushw	x
      0006BF 1E 0B            [ 2] 1280 	ldw	x, (0x0b, sp)
      0006C1 89               [ 2] 1281 	pushw	x
      0006C2 1E 13            [ 2] 1282 	ldw	x, (0x13, sp)
      0006C4 89               [ 2] 1283 	pushw	x
      0006C5 90 89            [ 2] 1284 	pushw	y
      0006C7 CDr00r00         [ 4] 1285 	call	___fsmul
      0006CA 4B 00            [ 1] 1286 	push	#0x00
      0006CC 4B 00            [ 1] 1287 	push	#0x00
      0006CE 4B 00            [ 1] 1288 	push	#0x00
      0006D0 4B 4F            [ 1] 1289 	push	#0x4f
      0006D2 89               [ 2] 1290 	pushw	x
      0006D3 90 89            [ 2] 1291 	pushw	y
      0006D5 CDr00r00         [ 4] 1292 	call	___fsdiv
      0006D8 1F 0F            [ 2] 1293 	ldw	(0x0f, sp), x
      0006DA 17 0D            [ 2] 1294 	ldw	(0x0d, sp), y
                                   1295 ;	src\bme280.c: 355: val2 = p * (float)CalibData.dig_P8 / 32768.0;
      0006DC CEu00u14         [ 2] 1296 	ldw	x, _CalibData+20
      0006DF CDr00r00         [ 4] 1297 	call	___sint2fs
      0006E2 89               [ 2] 1298 	pushw	x
      0006E3 90 89            [ 2] 1299 	pushw	y
      0006E5 1E 0F            [ 2] 1300 	ldw	x, (0x0f, sp)
      0006E7 89               [ 2] 1301 	pushw	x
      0006E8 1E 0F            [ 2] 1302 	ldw	x, (0x0f, sp)
      0006EA 89               [ 2] 1303 	pushw	x
      0006EB CDr00r00         [ 4] 1304 	call	___fsmul
      0006EE 4B 00            [ 1] 1305 	push	#0x00
      0006F0 4B 00            [ 1] 1306 	push	#0x00
      0006F2 4B 00            [ 1] 1307 	push	#0x00
      0006F4 4B 47            [ 1] 1308 	push	#0x47
      0006F6 89               [ 2] 1309 	pushw	x
      0006F7 90 89            [ 2] 1310 	pushw	y
      0006F9 CDr00r00         [ 4] 1311 	call	___fsdiv
                                   1312 ;	src\bme280.c: 356: p = p + (val1 + val2 + (float)CalibData.dig_P7)/16.0;
      0006FC 89               [ 2] 1313 	pushw	x
      0006FD 90 89            [ 2] 1314 	pushw	y
      0006FF 1E 13            [ 2] 1315 	ldw	x, (0x13, sp)
      000701 89               [ 2] 1316 	pushw	x
      000702 1E 13            [ 2] 1317 	ldw	x, (0x13, sp)
      000704 89               [ 2] 1318 	pushw	x
      000705 CDr00r00         [ 4] 1319 	call	___fsadd
      000708 1F 0F            [ 2] 1320 	ldw	(0x0f, sp), x
      00070A 17 0D            [ 2] 1321 	ldw	(0x0d, sp), y
      00070C CEu00u12         [ 2] 1322 	ldw	x, _CalibData+18
      00070F CDr00r00         [ 4] 1323 	call	___sint2fs
      000712 89               [ 2] 1324 	pushw	x
      000713 90 89            [ 2] 1325 	pushw	y
      000715 1E 13            [ 2] 1326 	ldw	x, (0x13, sp)
      000717 89               [ 2] 1327 	pushw	x
      000718 1E 13            [ 2] 1328 	ldw	x, (0x13, sp)
      00071A 89               [ 2] 1329 	pushw	x
      00071B CDr00r00         [ 4] 1330 	call	___fsadd
      00071E 4B 00            [ 1] 1331 	push	#0x00
      000720 4B 00            [ 1] 1332 	push	#0x00
      000722 4B 80            [ 1] 1333 	push	#0x80
      000724 4B 41            [ 1] 1334 	push	#0x41
      000726 89               [ 2] 1335 	pushw	x
      000727 90 89            [ 2] 1336 	pushw	y
      000729 CDr00r00         [ 4] 1337 	call	___fsdiv
      00072C 89               [ 2] 1338 	pushw	x
      00072D 90 89            [ 2] 1339 	pushw	y
      00072F 1E 0F            [ 2] 1340 	ldw	x, (0x0f, sp)
      000731 89               [ 2] 1341 	pushw	x
      000732 1E 0F            [ 2] 1342 	ldw	x, (0x0f, sp)
      000734 89               [ 2] 1343 	pushw	x
      000735 CDr00r00         [ 4] 1344 	call	___fsadd
                                   1345 ;	src\bme280.c: 380: return p;
                                   1346 ;	src\bme280.c: 381: }
      000738 5B 10            [ 2] 1347 	addw	sp, #16
      00073A 81               [ 4] 1348 	ret
                                   1349 ;	src\bme280.c: 383: float BME280_ReadHumidity(void) {
                                   1350 ;	-----------------------------------------
                                   1351 ;	 function BME280_ReadHumidity
                                   1352 ;	-----------------------------------------
      00073B                       1353 _BME280_ReadHumidity:
      00073B 52 12            [ 2] 1354 	sub	sp, #18
                                   1355 ;	src\bme280.c: 387: BME280_ReadTemperature(); // must be done first to get t_fine
      00073D CDr04r6F         [ 4] 1356 	call	_BME280_ReadTemperature
                                   1357 ;	src\bme280.c: 388: BME280_ReadReg_S16(BME280_REGISTER_HUMIDDATA, &hum_raw);
      000740 96               [ 1] 1358 	ldw	x, sp
      000741 5C               [ 1] 1359 	incw	x
      000742 A6 FD            [ 1] 1360 	ld	a, #0xfd
      000744 CDr02r76         [ 4] 1361 	call	_BME280_ReadReg_S16
                                   1362 ;	src\bme280.c: 393: hum_raw_sign = ((int32_t)hum_raw)&0x0000FFFF;
      000747 16 01            [ 2] 1363 	ldw	y, (0x01, sp)
      000749 5F               [ 1] 1364 	clrw	x
      00074A 90 5D            [ 2] 1365 	tnzw	y
      00074C 2A 01            [ 1] 1366 	jrpl	00117$
      00074E 5A               [ 2] 1367 	decw	x
      00074F                       1368 00117$:
      00074F 0F 10            [ 1] 1369 	clr	(0x10, sp)
      000751 0F 0F            [ 1] 1370 	clr	(0x0f, sp)
                                   1371 ;	src\bme280.c: 394: v_x1_u32r = (temper_int - ((int32_t)76800));
      000753 CEu00u23         [ 2] 1372 	ldw	x, _temper_int+2
      000756 1D 2C 00         [ 2] 1373 	subw	x, #0x2c00
      000759 1F 05            [ 2] 1374 	ldw	(0x05, sp), x
      00075B C6u00u22         [ 1] 1375 	ld	a, _temper_int+1
      00075E A2 01            [ 1] 1376 	sbc	a, #0x01
      000760 6B 04            [ 1] 1377 	ld	(0x04, sp), a
      000762 C6u00u21         [ 1] 1378 	ld	a, _temper_int+0
      000765 A2 00            [ 1] 1379 	sbc	a, #0x00
                                   1380 ;	src\bme280.c: 395: v_x1_u32r = (((((hum_raw_sign << 14) - (((int32_t)CalibData.dig_H4) << 20) - \
      000767 88               [ 1] 1381 	push	a
      000768 1E 10            [ 2] 1382 	ldw	x, (0x10, sp)
      00076A A6 0E            [ 1] 1383 	ld	a, #0x0e
      00076C                       1384 00118$:
      00076C 90 58            [ 2] 1385 	sllw	y
      00076E 59               [ 2] 1386 	rlcw	x
      00076F 4A               [ 1] 1387 	dec	a
      000770 26 FA            [ 1] 1388 	jrne	00118$
      000772 1F 0C            [ 2] 1389 	ldw	(0x0c, sp), x
      000774 84               [ 1] 1390 	pop	a
      000775 CEu00u1C         [ 2] 1391 	ldw	x, _CalibData+28
      000778 1F 09            [ 2] 1392 	ldw	(0x09, sp), x
      00077A 5F               [ 1] 1393 	clrw	x
      00077B 0D 09            [ 1] 1394 	tnz	(0x09, sp)
      00077D 2A 01            [ 1] 1395 	jrpl	00120$
      00077F 5A               [ 2] 1396 	decw	x
      000780                       1397 00120$:
      000780 88               [ 1] 1398 	push	a
      000781 1E 0A            [ 2] 1399 	ldw	x, (0x0a, sp)
      000783 0F 13            [ 1] 1400 	clr	(0x13, sp)
      000785 0F 12            [ 1] 1401 	clr	(0x12, sp)
      000787 A6 04            [ 1] 1402 	ld	a, #0x04
      000789                       1403 00121$:
      000789 58               [ 2] 1404 	sllw	x
      00078A 4A               [ 1] 1405 	dec	a
      00078B 26 FC            [ 1] 1406 	jrne	00121$
      00078D 84               [ 1] 1407 	pop	a
      00078E 72 F2 11         [ 2] 1408 	subw	y, (0x11, sp)
      000791 17 09            [ 2] 1409 	ldw	(0x09, sp), y
      000793 88               [ 1] 1410 	push	a
      000794 7B 0D            [ 1] 1411 	ld	a, (0x0d, sp)
      000796 89               [ 2] 1412 	pushw	x
      000797 12 02            [ 1] 1413 	sbc	a, (2, sp)
      000799 85               [ 2] 1414 	popw	x
      00079A 6B 09            [ 1] 1415 	ld	(0x09, sp), a
      00079C 7B 0C            [ 1] 1416 	ld	a, (0x0c, sp)
      00079E 89               [ 2] 1417 	pushw	x
      00079F 12 01            [ 1] 1418 	sbc	a, (1, sp)
      0007A1 85               [ 2] 1419 	popw	x
      0007A2 6B 08            [ 1] 1420 	ld	(0x08, sp), a
      0007A4 84               [ 1] 1421 	pop	a
      0007A5 CEu00u1E         [ 2] 1422 	ldw	x, _CalibData+30
      0007A8 1F 11            [ 2] 1423 	ldw	(0x11, sp), x
      0007AA 5F               [ 1] 1424 	clrw	x
      0007AB 0D 11            [ 1] 1425 	tnz	(0x11, sp)
      0007AD 2A 01            [ 1] 1426 	jrpl	00123$
      0007AF 5A               [ 2] 1427 	decw	x
      0007B0                       1428 00123$:
      0007B0 88               [ 1] 1429 	push	a
      0007B1 16 06            [ 2] 1430 	ldw	y, (0x06, sp)
      0007B3 90 89            [ 2] 1431 	pushw	y
      0007B5 61               [ 1] 1432 	exg	a, yl
      0007B6 7B 07            [ 1] 1433 	ld	a, (0x07, sp)
      0007B8 61               [ 1] 1434 	exg	a, yl
      0007B9 90 89            [ 2] 1435 	pushw	y
      0007BB 5B 01            [ 2] 1436 	addw	sp, #1
      0007BD 88               [ 1] 1437 	push	a
      0007BE 16 16            [ 2] 1438 	ldw	y, (0x16, sp)
      0007C0 90 89            [ 2] 1439 	pushw	y
      0007C2 89               [ 2] 1440 	pushw	x
      0007C3 CDr00r00         [ 4] 1441 	call	__mullong
      0007C6 5B 08            [ 2] 1442 	addw	sp, #8
      0007C8 1F 0E            [ 2] 1443 	ldw	(0x0e, sp), x
      0007CA 17 0C            [ 2] 1444 	ldw	(0x0c, sp), y
      0007CC 84               [ 1] 1445 	pop	a
      0007CD 1E 09            [ 2] 1446 	ldw	x, (0x09, sp)
      0007CF 72 F0 0D         [ 2] 1447 	subw	x, (0x0d, sp)
      0007D2 88               [ 1] 1448 	push	a
      0007D3 7B 09            [ 1] 1449 	ld	a, (0x09, sp)
      0007D5 12 0D            [ 1] 1450 	sbc	a, (0x0d, sp)
      0007D7 6B 11            [ 1] 1451 	ld	(0x11, sp), a
      0007D9 7B 08            [ 1] 1452 	ld	a, (0x08, sp)
      0007DB 12 0C            [ 1] 1453 	sbc	a, (0x0c, sp)
      0007DD 6B 10            [ 1] 1454 	ld	(0x10, sp), a
      0007DF 84               [ 1] 1455 	pop	a
      0007E0 1C 40 00         [ 2] 1456 	addw	x, #0x4000
      0007E3 16 0F            [ 2] 1457 	ldw	y, (0x0f, sp)
      0007E5 24 02            [ 1] 1458 	jrnc	00124$
      0007E7 90 5C            [ 1] 1459 	incw	y
      0007E9                       1460 00124$:
      0007E9 88               [ 1] 1461 	push	a
      0007EA A6 0F            [ 1] 1462 	ld	a, #0x0f
      0007EC                       1463 00125$:
      0007EC 90 57            [ 2] 1464 	sraw	y
      0007EE 56               [ 2] 1465 	rrcw	x
      0007EF 4A               [ 1] 1466 	dec	a
      0007F0 26 FA            [ 1] 1467 	jrne	00125$
      0007F2 1F 0A            [ 2] 1468 	ldw	(0x0a, sp), x
      0007F4 17 08            [ 2] 1469 	ldw	(0x08, sp), y
      0007F6 84               [ 1] 1470 	pop	a
      0007F7 AEr00r00         [ 2] 1471 	ldw	x, #(_CalibData+0)
      0007FA 88               [ 1] 1472 	push	a
      0007FB E6 20            [ 1] 1473 	ld	a, (0x20, x)
      0007FD 97               [ 1] 1474 	ld	xl, a
      0007FE 49               [ 1] 1475 	rlc	a
      0007FF 4F               [ 1] 1476 	clr	a
      000800 A2 00            [ 1] 1477 	sbc	a, #0x00
      000802 95               [ 1] 1478 	ld	xh, a
      000803 6B 11            [ 1] 1479 	ld	(0x11, sp), a
      000805 6B 10            [ 1] 1480 	ld	(0x10, sp), a
      000807 84               [ 1] 1481 	pop	a
      000808 88               [ 1] 1482 	push	a
      000809 89               [ 2] 1483 	pushw	x
      00080A 1E 12            [ 2] 1484 	ldw	x, (0x12, sp)
      00080C 89               [ 2] 1485 	pushw	x
      00080D 1E 0A            [ 2] 1486 	ldw	x, (0x0a, sp)
      00080F 89               [ 2] 1487 	pushw	x
      000810 41               [ 1] 1488 	exg	a, xl
      000811 7B 0B            [ 1] 1489 	ld	a, (0x0b, sp)
      000813 41               [ 1] 1490 	exg	a, xl
      000814 89               [ 2] 1491 	pushw	x
      000815 5B 01            [ 2] 1492 	addw	sp, #1
      000817 88               [ 1] 1493 	push	a
      000818 CDr00r00         [ 4] 1494 	call	__mullong
      00081B 5B 08            [ 2] 1495 	addw	sp, #8
      00081D 4F               [ 1] 1496 	clr	a
      00081E 90 5D            [ 2] 1497 	tnzw	y
      000820 2A 01            [ 1] 1498 	jrpl	00127$
      000822 4A               [ 1] 1499 	dec	a
      000823                       1500 00127$:
      000823 90 01            [ 1] 1501 	rrwa	y
      000825 01               [ 1] 1502 	rrwa	x
      000826 84               [ 1] 1503 	pop	a
      000827 90 57            [ 2] 1504 	sraw	y
      000829 56               [ 2] 1505 	rrcw	x
      00082A 90 57            [ 2] 1506 	sraw	y
      00082C 56               [ 2] 1507 	rrcw	x
      00082D 1F 0D            [ 2] 1508 	ldw	(0x0d, sp), x
      00082F 17 0B            [ 2] 1509 	ldw	(0x0b, sp), y
      000831 AEr00r00         [ 2] 1510 	ldw	x, #(_CalibData+0)
      000834 88               [ 1] 1511 	push	a
      000835 E6 1B            [ 1] 1512 	ld	a, (0x1b, x)
      000837 97               [ 1] 1513 	ld	xl, a
      000838 84               [ 1] 1514 	pop	a
      000839 02               [ 1] 1515 	rlwa	x
      00083A 4F               [ 1] 1516 	clr	a
      00083B 01               [ 1] 1517 	rrwa	x
      00083C 0F 10            [ 1] 1518 	clr	(0x10, sp)
      00083E 0F 0F            [ 1] 1519 	clr	(0x0f, sp)
      000840 89               [ 2] 1520 	pushw	x
      000841 1E 11            [ 2] 1521 	ldw	x, (0x11, sp)
      000843 89               [ 2] 1522 	pushw	x
      000844 1E 09            [ 2] 1523 	ldw	x, (0x09, sp)
      000846 89               [ 2] 1524 	pushw	x
      000847 41               [ 1] 1525 	exg	a, xl
      000848 7B 0A            [ 1] 1526 	ld	a, (0x0a, sp)
      00084A 41               [ 1] 1527 	exg	a, xl
      00084B 89               [ 2] 1528 	pushw	x
      00084C 5B 01            [ 2] 1529 	addw	sp, #1
      00084E 88               [ 1] 1530 	push	a
      00084F CDr00r00         [ 4] 1531 	call	__mullong
      000852 5B 08            [ 2] 1532 	addw	sp, #8
      000854 A6 0B            [ 1] 1533 	ld	a, #0x0b
      000856                       1534 00128$:
      000856 90 57            [ 2] 1535 	sraw	y
      000858 56               [ 2] 1536 	rrcw	x
      000859 4A               [ 1] 1537 	dec	a
      00085A 26 FA            [ 1] 1538 	jrne	00128$
      00085C 17 0F            [ 2] 1539 	ldw	(0x0f, sp), y
      00085E 1C 80 00         [ 2] 1540 	addw	x, #0x8000
      000861 16 0F            [ 2] 1541 	ldw	y, (0x0f, sp)
      000863 24 02            [ 1] 1542 	jrnc	00130$
      000865 90 5C            [ 1] 1543 	incw	y
      000867                       1544 00130$:
      000867 89               [ 2] 1545 	pushw	x
      000868 90 89            [ 2] 1546 	pushw	y
      00086A 1E 11            [ 2] 1547 	ldw	x, (0x11, sp)
      00086C 89               [ 2] 1548 	pushw	x
      00086D 1E 11            [ 2] 1549 	ldw	x, (0x11, sp)
      00086F 89               [ 2] 1550 	pushw	x
      000870 CDr00r00         [ 4] 1551 	call	__mullong
      000873 5B 08            [ 2] 1552 	addw	sp, #8
      000875 51               [ 1] 1553 	exgw	x, y
      000876 4F               [ 1] 1554 	clr	a
      000877 5D               [ 2] 1555 	tnzw	x
      000878 2A 01            [ 1] 1556 	jrpl	00131$
      00087A 4A               [ 1] 1557 	dec	a
      00087B                       1558 00131$:
      00087B 01               [ 1] 1559 	rrwa	x
      00087C 90 01            [ 1] 1560 	rrwa	y
      00087E 57               [ 2] 1561 	sraw	x
      00087F 90 56            [ 2] 1562 	rrcw	y
      000881 57               [ 2] 1563 	sraw	x
      000882 90 56            [ 2] 1564 	rrcw	y
      000884 1C 00 20         [ 2] 1565 	addw	x, #0x0020
      000887 1F 0B            [ 2] 1566 	ldw	(0x0b, sp), x
      000889 CEu00u19         [ 2] 1567 	ldw	x, _CalibData+25
      00088C 9E               [ 1] 1568 	ld	a, xh
      00088D 49               [ 1] 1569 	rlc	a
      00088E 4F               [ 1] 1570 	clr	a
      00088F A2 00            [ 1] 1571 	sbc	a, #0x00
      000891 6B 10            [ 1] 1572 	ld	(0x10, sp), a
      000893 6B 0F            [ 1] 1573 	ld	(0x0f, sp), a
      000895 89               [ 2] 1574 	pushw	x
      000896 1E 11            [ 2] 1575 	ldw	x, (0x11, sp)
      000898 89               [ 2] 1576 	pushw	x
      000899 90 89            [ 2] 1577 	pushw	y
      00089B 1E 11            [ 2] 1578 	ldw	x, (0x11, sp)
      00089D 89               [ 2] 1579 	pushw	x
      00089E CDr00r00         [ 4] 1580 	call	__mullong
      0008A1 5B 08            [ 2] 1581 	addw	sp, #8
      0008A3 17 0F            [ 2] 1582 	ldw	(0x0f, sp), y
      0008A5 1C 20 00         [ 2] 1583 	addw	x, #0x2000
      0008A8 16 0F            [ 2] 1584 	ldw	y, (0x0f, sp)
      0008AA 24 02            [ 1] 1585 	jrnc	00132$
      0008AC 90 5C            [ 1] 1586 	incw	y
      0008AE                       1587 00132$:
      0008AE A6 0E            [ 1] 1588 	ld	a, #0x0e
      0008B0                       1589 00133$:
      0008B0 90 57            [ 2] 1590 	sraw	y
      0008B2 56               [ 2] 1591 	rrcw	x
      0008B3 4A               [ 1] 1592 	dec	a
      0008B4 26 FA            [ 1] 1593 	jrne	00133$
      0008B6 89               [ 2] 1594 	pushw	x
      0008B7 90 89            [ 2] 1595 	pushw	y
      0008B9 1E 0D            [ 2] 1596 	ldw	x, (0x0d, sp)
      0008BB 89               [ 2] 1597 	pushw	x
      0008BC 1E 0D            [ 2] 1598 	ldw	x, (0x0d, sp)
      0008BE 89               [ 2] 1599 	pushw	x
      0008BF CDr00r00         [ 4] 1600 	call	__mullong
      0008C2 5B 08            [ 2] 1601 	addw	sp, #8
      0008C4 1F 0D            [ 2] 1602 	ldw	(0x0d, sp), x
                                   1603 ;	src\bme280.c: 400: v_x1_u32r = (v_x1_u32r - (((((v_x1_u32r >> 15) * (v_x1_u32r >> 15)) >> 7) * \
      0008C6 17 0F            [ 2] 1604 	ldw	(0x0f, sp), y
      0008C8 1E 0D            [ 2] 1605 	ldw	x, (0x0d, sp)
      0008CA A6 0F            [ 1] 1606 	ld	a, #0x0f
      0008CC                       1607 00135$:
      0008CC 07 0F            [ 1] 1608 	sra	(0x0f, sp)
      0008CE 06 10            [ 1] 1609 	rrc	(0x10, sp)
      0008D0 56               [ 2] 1610 	rrcw	x
      0008D1 4A               [ 1] 1611 	dec	a
      0008D2 26 F8            [ 1] 1612 	jrne	00135$
      0008D4 90 89            [ 2] 1613 	pushw	y
      0008D6 89               [ 2] 1614 	pushw	x
      0008D7 7B 14            [ 1] 1615 	ld	a, (0x14, sp)
      0008D9 88               [ 1] 1616 	push	a
      0008DA 7B 14            [ 1] 1617 	ld	a, (0x14, sp)
      0008DC 88               [ 1] 1618 	push	a
      0008DD 89               [ 2] 1619 	pushw	x
      0008DE 1E 17            [ 2] 1620 	ldw	x, (0x17, sp)
      0008E0 89               [ 2] 1621 	pushw	x
      0008E1 CDr00r00         [ 4] 1622 	call	__mullong
      0008E4 5B 08            [ 2] 1623 	addw	sp, #8
      0008E6 61               [ 1] 1624 	exg	a, yl
      0008E7 6B 12            [ 1] 1625 	ld	(0x12, sp), a
      0008E9 61               [ 1] 1626 	exg	a, yl
      0008EA 90 9E            [ 1] 1627 	ld	a, yh
      0008EC 90 85            [ 2] 1628 	popw	y
      0008EE 88               [ 1] 1629 	push	a
      0008EF 7B 11            [ 1] 1630 	ld	a, (0x11, sp)
      0008F1 6B 09            [ 1] 1631 	ld	(0x09, sp), a
      0008F3 84               [ 1] 1632 	pop	a
      0008F4 47               [ 1] 1633 	sra	a
      0008F5 06 08            [ 1] 1634 	rrc	(0x08, sp)
      0008F7 56               [ 2] 1635 	rrcw	x
      0008F8 47               [ 1] 1636 	sra	a
      0008F9 06 08            [ 1] 1637 	rrc	(0x08, sp)
      0008FB 56               [ 2] 1638 	rrcw	x
      0008FC 47               [ 1] 1639 	sra	a
      0008FD 06 08            [ 1] 1640 	rrc	(0x08, sp)
      0008FF 56               [ 2] 1641 	rrcw	x
      000900 47               [ 1] 1642 	sra	a
      000901 06 08            [ 1] 1643 	rrc	(0x08, sp)
      000903 56               [ 2] 1644 	rrcw	x
      000904 47               [ 1] 1645 	sra	a
      000905 06 08            [ 1] 1646 	rrc	(0x08, sp)
      000907 56               [ 2] 1647 	rrcw	x
      000908 47               [ 1] 1648 	sra	a
      000909 06 08            [ 1] 1649 	rrc	(0x08, sp)
      00090B 56               [ 2] 1650 	rrcw	x
      00090C 47               [ 1] 1651 	sra	a
      00090D 06 08            [ 1] 1652 	rrc	(0x08, sp)
      00090F 56               [ 2] 1653 	rrcw	x
      000910 1F 09            [ 2] 1654 	ldw	(0x09, sp), x
      000912 6B 07            [ 1] 1655 	ld	(0x07, sp), a
      000914 C6u00u18         [ 1] 1656 	ld	a, _CalibData+24
      000917 5F               [ 1] 1657 	clrw	x
      000918 1F 0F            [ 2] 1658 	ldw	(0x0f, sp), x
      00091A 90 89            [ 2] 1659 	pushw	y
      00091C 88               [ 1] 1660 	push	a
      00091D 9E               [ 1] 1661 	ld	a, xh
      00091E 88               [ 1] 1662 	push	a
      00091F 1E 13            [ 2] 1663 	ldw	x, (0x13, sp)
      000921 89               [ 2] 1664 	pushw	x
      000922 1E 0F            [ 2] 1665 	ldw	x, (0x0f, sp)
      000924 89               [ 2] 1666 	pushw	x
      000925 1E 0F            [ 2] 1667 	ldw	x, (0x0f, sp)
      000927 89               [ 2] 1668 	pushw	x
      000928 CDr00r00         [ 4] 1669 	call	__mullong
      00092B 5B 08            [ 2] 1670 	addw	sp, #8
      00092D 17 11            [ 2] 1671 	ldw	(0x11, sp), y
      00092F 90 85            [ 2] 1672 	popw	y
      000931 7B 10            [ 1] 1673 	ld	a, (0x10, sp)
      000933 07 0F            [ 1] 1674 	sra	(0x0f, sp)
      000935 46               [ 1] 1675 	rrc	a
      000936 56               [ 2] 1676 	rrcw	x
      000937 07 0F            [ 1] 1677 	sra	(0x0f, sp)
      000939 46               [ 1] 1678 	rrc	a
      00093A 56               [ 2] 1679 	rrcw	x
      00093B 07 0F            [ 1] 1680 	sra	(0x0f, sp)
      00093D 46               [ 1] 1681 	rrc	a
      00093E 56               [ 2] 1682 	rrcw	x
      00093F 07 0F            [ 1] 1683 	sra	(0x0f, sp)
      000941 46               [ 1] 1684 	rrc	a
      000942 56               [ 2] 1685 	rrcw	x
      000943 1F 11            [ 2] 1686 	ldw	(0x11, sp), x
      000945 1E 0D            [ 2] 1687 	ldw	x, (0x0d, sp)
      000947 72 F0 11         [ 2] 1688 	subw	x, (0x11, sp)
      00094A 88               [ 1] 1689 	push	a
      00094B 90 9F            [ 1] 1690 	ld	a, yl
      00094D 12 01            [ 1] 1691 	sbc	a, (1, sp)
      00094F 90 02            [ 1] 1692 	rlwa	y
      000951 12 10            [ 1] 1693 	sbc	a, (0x10, sp)
      000953 90 95            [ 1] 1694 	ld	yh, a
      000955 84               [ 1] 1695 	pop	a
      000956 1F 11            [ 2] 1696 	ldw	(0x11, sp), x
      000958 17 0F            [ 2] 1697 	ldw	(0x0f, sp), y
                                   1698 ;	src\bme280.c: 402: v_x1_u32r = (v_x1_u32r < 0) ? 0 : v_x1_u32r;
      00095A 0D 0F            [ 1] 1699 	tnz	(0x0f, sp)
      00095C 2A 05            [ 1] 1700 	jrpl	00103$
      00095E 5F               [ 1] 1701 	clrw	x
      00095F 1F 11            [ 2] 1702 	ldw	(0x11, sp), x
      000961 1F 0F            [ 2] 1703 	ldw	(0x0f, sp), x
      000963                       1704 00103$:
                                   1705 ;	src\bme280.c: 403: v_x1_u32r = (v_x1_u32r > 419430400) ? 419430400 : v_x1_u32r;
      000963 5F               [ 1] 1706 	clrw	x
      000964 13 11            [ 2] 1707 	cpw	x, (0x11, sp)
      000966 4F               [ 1] 1708 	clr	a
      000967 12 10            [ 1] 1709 	sbc	a, (0x10, sp)
      000969 A6 19            [ 1] 1710 	ld	a, #0x19
      00096B 12 0F            [ 1] 1711 	sbc	a, (0x0f, sp)
      00096D 2E 07            [ 1] 1712 	jrsge	00105$
      00096F 5F               [ 1] 1713 	clrw	x
      000970 1F 11            [ 2] 1714 	ldw	(0x11, sp), x
      000972 AE 19 00         [ 2] 1715 	ldw	x, #0x1900
      000975 C5                    1716 	.byte 0xc5
      000976                       1717 00105$:
      000976 1E 0F            [ 2] 1718 	ldw	x, (0x0f, sp)
      000978                       1719 00106$:
      000978 16 11            [ 2] 1720 	ldw	y, (0x11, sp)
                                   1721 ;	src\bme280.c: 404: hum_float = (uint32_t)(v_x1_u32r >> 12);
      00097A A6 0C            [ 1] 1722 	ld	a, #0x0c
      00097C                       1723 00139$:
      00097C 57               [ 2] 1724 	sraw	x
      00097D 90 56            [ 2] 1725 	rrcw	y
      00097F 4A               [ 1] 1726 	dec	a
      000980 26 FA            [ 1] 1727 	jrne	00139$
      000982 90 89            [ 2] 1728 	pushw	y
      000984 89               [ 2] 1729 	pushw	x
      000985 CDr00r00         [ 4] 1730 	call	___ulong2fs
      000988 5B 04            [ 2] 1731 	addw	sp, #4
                                   1732 ;	src\bme280.c: 405: hum_float /= 1024.0f;
      00098A 4B 00            [ 1] 1733 	push	#0x00
      00098C 4B 00            [ 1] 1734 	push	#0x00
      00098E 4B 80            [ 1] 1735 	push	#0x80
      000990 4B 44            [ 1] 1736 	push	#0x44
      000992 89               [ 2] 1737 	pushw	x
      000993 90 89            [ 2] 1738 	pushw	y
      000995 CDr00r00         [ 4] 1739 	call	___fsdiv
                                   1740 ;	src\bme280.c: 406: return hum_float;
                                   1741 ;	src\bme280.c: 407: }
      000998 5B 12            [ 2] 1742 	addw	sp, #18
      00099A 81               [ 4] 1743 	ret
                                   1744 	.area CODE
                                   1745 	.area CONST
                                   1746 	.area INITIALIZER
                                   1747 	.area CABS (ABS)
