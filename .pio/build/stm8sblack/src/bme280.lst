                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module bme280
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_Read_Bytes
                                     12 	.globl _I2C_Read_Byte
                                     13 	.globl _I2C_Send_Bytes
                                     14 	.globl _GPIO_WriteLow
                                     15 	.globl _GPIO_WriteHigh
                                     16 	.globl _temper_int
                                     17 	.globl _Registers
                                     18 	.globl _CalibData
                                     19 	.globl _Error
                                     20 	.globl _BME280_Setup
                                     21 	.globl _BME280_WriteReg
                                     22 	.globl _BME280_ReadReg
                                     23 	.globl _BME280_ReadReg_U16
                                     24 	.globl _BME280_ReadReg_LE_U16
                                     25 	.globl _BME280_ReadReg_U24
                                     26 	.globl _BME280_ReadReg_LE_U24
                                     27 	.globl _BME280_ReadReg_S16
                                     28 	.globl _BME280_ReadReg_LE_S16
                                     29 	.globl _BME280_ReadRegisters
                                     30 	.globl _BME280_ReadStatus
                                     31 	.globl _BME280_ReadCoefficients
                                     32 	.globl _BME280_SetStandby
                                     33 	.globl _BME280_SetFilter
                                     34 	.globl _BME280_SetOversamplingTemper
                                     35 	.globl _BME280_SetOversamplingPressure
                                     36 	.globl _BME280_SetOversamplingHum
                                     37 	.globl _BME280_SetMode
                                     38 	.globl _BME280_ReadTemperature
                                     39 	.globl _BME280_ReadPressure
                                     40 	.globl _BME280_ReadHumidity
                                     41 	.globl _BME280_ReadAltitude
                                     42 ;--------------------------------------------------------
                                     43 ; ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DATA
      000000                         46 _CalibData::
      000000                         47 	.ds 33
      000021                         48 _Registers::
      000021                         49 	.ds 10
      00002B                         50 _temper_int::
      00002B                         51 	.ds 4
                                     52 ;--------------------------------------------------------
                                     53 ; ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area INITIALIZED
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area DABS (ABS)
                                     60 
                                     61 ; default segment ordering for linker
                                     62 	.area HOME
                                     63 	.area GSINIT
                                     64 	.area GSFINAL
                                     65 	.area CONST
                                     66 	.area INITIALIZER
                                     67 	.area CODE
                                     68 
                                     69 ;--------------------------------------------------------
                                     70 ; global & static initialisations
                                     71 ;--------------------------------------------------------
                                     72 	.area HOME
                                     73 	.area GSINIT
                                     74 	.area GSFINAL
                                     75 	.area GSINIT
                                     76 ;--------------------------------------------------------
                                     77 ; Home
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME
                                     80 	.area HOME
                                     81 ;--------------------------------------------------------
                                     82 ; code
                                     83 ;--------------------------------------------------------
                                     84 	.area CODE
                                     85 ;	src\bme280.c: 18: void Error(void) {
                                     86 ;	-----------------------------------------
                                     87 ;	 function Error
                                     88 ;	-----------------------------------------
      000000                         89 _Error:
                                     90 ;	src\bme280.c: 19: LED_OFF;
      000000 A6 20            [ 1]   91 	ld	a, #0x20
      000002 AE 50 14         [ 2]   92 	ldw	x, #0x5014
                                     93 ;	src\bme280.c: 20: }
      000005 CCr00r00         [ 2]   94 	jp	_GPIO_WriteHigh
                                     95 ;	src\bme280.c: 22: void BME280_Setup(void) {
                                     96 ;	-----------------------------------------
                                     97 ;	 function BME280_Setup
                                     98 ;	-----------------------------------------
      000008                         99 _BME280_Setup:
                                    100 ;	src\bme280.c: 25: uint8_t res = BME280_ReadReg(BME280_REG_ID);
      000008 A6 D0            [ 1]  101 	ld	a, #0xd0
      00000A CDr00r69         [ 4]  102 	call	_BME280_ReadReg
                                    103 ;	src\bme280.c: 30: if (res != BME280_ID) {
      00000D A1 60            [ 1]  104 	cp	a, #0x60
      00000F 27 03            [ 1]  105 	jreq	00102$
                                    106 ;	src\bme280.c: 31: Error();
                                    107 ;	src\bme280.c: 32: return;
      000011 CCr00r00         [ 2]  108 	jp	_Error
      000014                        109 00102$:
                                    110 ;	src\bme280.c: 35: BME280_WriteReg(BME280_REG_SOFTRESET, BME280_SOFTRESET_VALUE);
      000014 4B B6            [ 1]  111 	push	#0xb6
      000016 A6 E0            [ 1]  112 	ld	a, #0xe0
      000018 CDr00r54         [ 4]  113 	call	_BME280_WriteReg
                                    114 ;	src\bme280.c: 36: while (BME280_ReadStatus() & BME280_STATUS_IM_UPDATE);
      00001B                        115 00103$:
      00001B CDr04r05         [ 4]  116 	call	_BME280_ReadStatus
      00001E 44               [ 1]  117 	srl	a
      00001F 25 FA            [ 1]  118 	jrc	00103$
                                    119 ;	src\bme280.c: 38: BME280_ReadCoefficients();
      000021 CDr04r0D         [ 4]  120 	call	_BME280_ReadCoefficients
                                    121 ;	src\bme280.c: 39: BME280_SetStandby(BME280_STBY_1000);
      000024 A6 A0            [ 1]  122 	ld	a, #0xa0
      000026 CDr04rD2         [ 4]  123 	call	_BME280_SetStandby
                                    124 ;	src\bme280.c: 40: BME280_SetFilter(BME280_FILTER_4);
      000029 A6 08            [ 1]  125 	ld	a, #0x08
      00002B CDr04rEC         [ 4]  126 	call	_BME280_SetFilter
                                    127 ;	src\bme280.c: 41: BME280_SetOversamplingTemper(BME280_OSRS_T_x4);
      00002E A6 60            [ 1]  128 	ld	a, #0x60
      000030 CDr05r06         [ 4]  129 	call	_BME280_SetOversamplingTemper
                                    130 ;	src\bme280.c: 42: BME280_SetOversamplingPressure(BME280_OSRS_P_x2);
      000033 A6 08            [ 1]  131 	ld	a, #0x08
      000035 CDr05r20         [ 4]  132 	call	_BME280_SetOversamplingPressure
                                    133 ;	src\bme280.c: 43: BME280_SetOversamplingHum(BME280_OSRS_H_x1);
      000038 A6 01            [ 1]  134 	ld	a, #0x01
      00003A CDr05r3A         [ 4]  135 	call	_BME280_SetOversamplingHum
                                    136 ;	src\bme280.c: 45: value32 = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      00003D A6 F4            [ 1]  137 	ld	a, #0xf4
      00003F CDr00r69         [ 4]  138 	call	_BME280_ReadReg
                                    139 ;	src\bme280.c: 46: value32 |= BME280_ReadReg(BME280_REG_CTRL_HUM) << 8;
      000042 A6 F2            [ 1]  140 	ld	a, #0xf2
      000044 CDr00r69         [ 4]  141 	call	_BME280_ReadReg
                                    142 ;	src\bme280.c: 59: BME280_SetMode(BME280_MODE_FORCED);
      000047 A6 01            [ 1]  143 	ld	a, #0x01
      000049 CDr05r5F         [ 4]  144 	call	_BME280_SetMode
                                    145 ;	src\bme280.c: 62: LED_ON;
      00004C A6 20            [ 1]  146 	ld	a, #0x20
      00004E AE 50 14         [ 2]  147 	ldw	x, #0x5014
                                    148 ;	src\bme280.c: 63: }
      000051 CCr00r00         [ 2]  149 	jp	_GPIO_WriteLow
                                    150 ;	src\bme280.c: 65: void BME280_WriteReg(uint8_t iReg, uint8_t iValue) {
                                    151 ;	-----------------------------------------
                                    152 ;	 function BME280_WriteReg
                                    153 ;	-----------------------------------------
      000054                        154 _BME280_WriteReg:
      000054 89               [ 2]  155 	pushw	x
                                    156 ;	src\bme280.c: 67: iData[0] = iReg;
      000055 96               [ 1]  157 	ldw	x, sp
      000056 5C               [ 1]  158 	incw	x
      000057 F7               [ 1]  159 	ld	(x), a
                                    160 ;	src\bme280.c: 68: iData[1] = iValue;
      000058 7B 05            [ 1]  161 	ld	a, (0x05, sp)
      00005A 6B 02            [ 1]  162 	ld	(0x02, sp), a
                                    163 ;	src\bme280.c: 69: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00005C 89               [ 2]  164 	pushw	x
      00005D AE 00 02         [ 2]  165 	ldw	x, #0x0002
      000060 A6 EE            [ 1]  166 	ld	a, #0xee
      000062 CDr00r00         [ 4]  167 	call	_I2C_Send_Bytes
                                    168 ;	src\bme280.c: 70: }
      000065 85               [ 2]  169 	popw	x
      000066 85               [ 2]  170 	popw	x
      000067 84               [ 1]  171 	pop	a
      000068 FC               [ 2]  172 	jp	(x)
                                    173 ;	src\bme280.c: 72: uint8_t BME280_ReadReg(uint8_t iReg) {
                                    174 ;	-----------------------------------------
                                    175 ;	 function BME280_ReadReg
                                    176 ;	-----------------------------------------
      000069                        177 _BME280_ReadReg:
      000069 88               [ 1]  178 	push	a
                                    179 ;	src\bme280.c: 74: iData[0] = iReg;
      00006A 96               [ 1]  180 	ldw	x, sp
      00006B 5C               [ 1]  181 	incw	x
      00006C F7               [ 1]  182 	ld	(x), a
                                    183 ;	src\bme280.c: 75: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00006D 89               [ 2]  184 	pushw	x
      00006E 5F               [ 1]  185 	clrw	x
      00006F 5C               [ 1]  186 	incw	x
      000070 A6 EE            [ 1]  187 	ld	a, #0xee
      000072 CDr00r00         [ 4]  188 	call	_I2C_Send_Bytes
                                    189 ;	src\bme280.c: 76: return I2C_Read_Byte(BME280_ADDRESS);
      000075 A6 EE            [ 1]  190 	ld	a, #0xee
      000077 CDr00r00         [ 4]  191 	call	_I2C_Read_Byte
                                    192 ;	src\bme280.c: 77: }
      00007A 5B 01            [ 2]  193 	addw	sp, #1
      00007C 81               [ 4]  194 	ret
                                    195 ;	src\bme280.c: 79: void BME280_ReadReg_U16(uint8_t iReg, uint16_t *iValue) {
                                    196 ;	-----------------------------------------
                                    197 ;	 function BME280_ReadReg_U16
                                    198 ;	-----------------------------------------
      00007D                        199 _BME280_ReadReg_U16:
      00007D 52 07            [ 2]  200 	sub	sp, #7
      00007F 1F 06            [ 2]  201 	ldw	(0x06, sp), x
                                    202 ;	src\bme280.c: 82: iData[0] = iReg;
      000081 96               [ 1]  203 	ldw	x, sp
      000082 5C               [ 1]  204 	incw	x
      000083 F7               [ 1]  205 	ld	(x), a
                                    206 ;	src\bme280.c: 83: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      000084 89               [ 2]  207 	pushw	x
      000085 5F               [ 1]  208 	clrw	x
      000086 5C               [ 1]  209 	incw	x
      000087 A6 EE            [ 1]  210 	ld	a, #0xee
      000089 CDr00r00         [ 4]  211 	call	_I2C_Send_Bytes
                                    212 ;	src\bme280.c: 84: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      00008C 96               [ 1]  213 	ldw	x, sp
      00008D 5C               [ 1]  214 	incw	x
      00008E 5C               [ 1]  215 	incw	x
      00008F 89               [ 2]  216 	pushw	x
      000090 AE 00 02         [ 2]  217 	ldw	x, #0x0002
      000093 A6 EE            [ 1]  218 	ld	a, #0xee
      000095 CDr00r00         [ 4]  219 	call	_I2C_Read_Bytes
                                    220 ;	src\bme280.c: 85: *iValue = iRes[0];
      000098 7B 02            [ 1]  221 	ld	a, (0x02, sp)
      00009A 90 5F            [ 1]  222 	clrw	y
      00009C 90 97            [ 1]  223 	ld	yl, a
      00009E 1E 06            [ 2]  224 	ldw	x, (0x06, sp)
      0000A0 FF               [ 2]  225 	ldw	(x), y
                                    226 ;	src\bme280.c: 86: *iValue <<= 8;
      0000A1 4F               [ 1]  227 	clr	a
      0000A2 90 02            [ 1]  228 	rlwa	y
      0000A4 1E 06            [ 2]  229 	ldw	x, (0x06, sp)
      0000A6 FF               [ 2]  230 	ldw	(x), y
                                    231 ;	src\bme280.c: 87: *iValue += iRes[1];
      0000A7 7B 03            [ 1]  232 	ld	a, (0x03, sp)
      0000A9 5F               [ 1]  233 	clrw	x
      0000AA 97               [ 1]  234 	ld	xl, a
      0000AB 1F 04            [ 2]  235 	ldw	(0x04, sp), x
      0000AD 72 F9 04         [ 2]  236 	addw	y, (0x04, sp)
      0000B0 1E 06            [ 2]  237 	ldw	x, (0x06, sp)
      0000B2 FF               [ 2]  238 	ldw	(x), y
                                    239 ;	src\bme280.c: 88: }
      0000B3 5B 07            [ 2]  240 	addw	sp, #7
      0000B5 81               [ 4]  241 	ret
                                    242 ;	src\bme280.c: 90: void BME280_ReadReg_LE_U16(uint8_t iReg, uint16_t *iValue) {
                                    243 ;	-----------------------------------------
                                    244 ;	 function BME280_ReadReg_LE_U16
                                    245 ;	-----------------------------------------
      0000B6                        246 _BME280_ReadReg_LE_U16:
      0000B6 52 09            [ 2]  247 	sub	sp, #9
      0000B8 1F 08            [ 2]  248 	ldw	(0x08, sp), x
                                    249 ;	src\bme280.c: 93: iData[0] = iReg;
      0000BA 96               [ 1]  250 	ldw	x, sp
      0000BB 5C               [ 1]  251 	incw	x
      0000BC F7               [ 1]  252 	ld	(x), a
                                    253 ;	src\bme280.c: 94: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0000BD 89               [ 2]  254 	pushw	x
      0000BE 5F               [ 1]  255 	clrw	x
      0000BF 5C               [ 1]  256 	incw	x
      0000C0 A6 EE            [ 1]  257 	ld	a, #0xee
      0000C2 CDr00r00         [ 4]  258 	call	_I2C_Send_Bytes
                                    259 ;	src\bme280.c: 95: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0000C5 96               [ 1]  260 	ldw	x, sp
      0000C6 5C               [ 1]  261 	incw	x
      0000C7 5C               [ 1]  262 	incw	x
      0000C8 89               [ 2]  263 	pushw	x
      0000C9 AE 00 02         [ 2]  264 	ldw	x, #0x0002
      0000CC A6 EE            [ 1]  265 	ld	a, #0xee
      0000CE CDr00r00         [ 4]  266 	call	_I2C_Read_Bytes
                                    267 ;	src\bme280.c: 96: *iValue = iRes[0];
      0000D1 7B 02            [ 1]  268 	ld	a, (0x02, sp)
      0000D3 90 5F            [ 1]  269 	clrw	y
      0000D5 90 97            [ 1]  270 	ld	yl, a
      0000D7 1E 08            [ 2]  271 	ldw	x, (0x08, sp)
      0000D9 FF               [ 2]  272 	ldw	(x), y
                                    273 ;	src\bme280.c: 97: *iValue <<= 8;
      0000DA 4F               [ 1]  274 	clr	a
      0000DB 90 02            [ 1]  275 	rlwa	y
      0000DD 1E 08            [ 2]  276 	ldw	x, (0x08, sp)
      0000DF FF               [ 2]  277 	ldw	(x), y
                                    278 ;	src\bme280.c: 98: *iValue += iRes[1];
      0000E0 7B 03            [ 1]  279 	ld	a, (0x03, sp)
      0000E2 5F               [ 1]  280 	clrw	x
      0000E3 97               [ 1]  281 	ld	xl, a
      0000E4 1F 06            [ 2]  282 	ldw	(0x06, sp), x
      0000E6 72 F9 06         [ 2]  283 	addw	y, (0x06, sp)
      0000E9 1E 08            [ 2]  284 	ldw	x, (0x08, sp)
      0000EB FF               [ 2]  285 	ldw	(x), y
                                    286 ;	src\bme280.c: 99: *(uint16_t *)iValue = be16toword(*(uint16_t *) iValue);
      0000EC 93               [ 1]  287 	ldw	x, y
      0000ED 0F 05            [ 1]  288 	clr	(0x05, sp)
      0000EF 90 9F            [ 1]  289 	ld	a, yl
      0000F1 0F 06            [ 1]  290 	clr	(0x06, sp)
      0000F3 1A 06            [ 1]  291 	or	a, (0x06, sp)
      0000F5 90 95            [ 1]  292 	ld	yh, a
      0000F7 9E               [ 1]  293 	ld	a, xh
      0000F8 1A 05            [ 1]  294 	or	a, (0x05, sp)
      0000FA 90 97            [ 1]  295 	ld	yl, a
      0000FC 1E 08            [ 2]  296 	ldw	x, (0x08, sp)
      0000FE FF               [ 2]  297 	ldw	(x), y
                                    298 ;	src\bme280.c: 100: }
      0000FF 5B 09            [ 2]  299 	addw	sp, #9
      000101 81               [ 4]  300 	ret
                                    301 ;	src\bme280.c: 102: void BME280_ReadReg_U24(uint8_t iReg, uint32_t *iValue) {
                                    302 ;	-----------------------------------------
                                    303 ;	 function BME280_ReadReg_U24
                                    304 ;	-----------------------------------------
      000102                        305 _BME280_ReadReg_U24:
      000102 52 0E            [ 2]  306 	sub	sp, #14
      000104 1F 0D            [ 2]  307 	ldw	(0x0d, sp), x
                                    308 ;	src\bme280.c: 105: iData[0] = iReg;
      000106 96               [ 1]  309 	ldw	x, sp
      000107 5C               [ 1]  310 	incw	x
      000108 F7               [ 1]  311 	ld	(x), a
                                    312 ;	src\bme280.c: 106: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      000109 89               [ 2]  313 	pushw	x
      00010A 5F               [ 1]  314 	clrw	x
      00010B 5C               [ 1]  315 	incw	x
      00010C A6 EE            [ 1]  316 	ld	a, #0xee
      00010E CDr00r00         [ 4]  317 	call	_I2C_Send_Bytes
                                    318 ;	src\bme280.c: 107: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      000111 96               [ 1]  319 	ldw	x, sp
      000112 5C               [ 1]  320 	incw	x
      000113 5C               [ 1]  321 	incw	x
      000114 89               [ 2]  322 	pushw	x
      000115 AE 00 03         [ 2]  323 	ldw	x, #0x0003
      000118 A6 EE            [ 1]  324 	ld	a, #0xee
      00011A CDr00r00         [ 4]  325 	call	_I2C_Read_Bytes
                                    326 ;	src\bme280.c: 108: *iValue = iRes[0];
      00011D 7B 02            [ 1]  327 	ld	a, (0x02, sp)
      00011F 90 5F            [ 1]  328 	clrw	y
      000121 0F 05            [ 1]  329 	clr	(0x05, sp)
      000123 1E 0D            [ 2]  330 	ldw	x, (0x0d, sp)
      000125 E7 03            [ 1]  331 	ld	(0x3, x), a
      000127 EF 01            [ 2]  332 	ldw	(0x1, x), y
      000129 88               [ 1]  333 	push	a
      00012A 7B 06            [ 1]  334 	ld	a, (0x06, sp)
      00012C F7               [ 1]  335 	ld	(x), a
      00012D 84               [ 1]  336 	pop	a
                                    337 ;	src\bme280.c: 109: *iValue <<= 8;
      00012E 6B 0B            [ 1]  338 	ld	(0x0b, sp), a
      000130 17 09            [ 2]  339 	ldw	(0x09, sp), y
      000132 0F 0C            [ 1]  340 	clr	(0x0c, sp)
      000134 1E 0D            [ 2]  341 	ldw	x, (0x0d, sp)
      000136 16 0B            [ 2]  342 	ldw	y, (0x0b, sp)
      000138 EF 02            [ 2]  343 	ldw	(0x2, x), y
      00013A 16 09            [ 2]  344 	ldw	y, (0x09, sp)
      00013C FF               [ 2]  345 	ldw	(x), y
                                    346 ;	src\bme280.c: 110: *iValue += iRes[1];
      00013D 7B 03            [ 1]  347 	ld	a, (0x03, sp)
      00013F 90 5F            [ 1]  348 	clrw	y
      000141 5F               [ 1]  349 	clrw	x
      000142 90 97            [ 1]  350 	ld	yl, a
      000144 72 F9 0B         [ 2]  351 	addw	y, (0x0b, sp)
      000147 9F               [ 1]  352 	ld	a, xl
      000148 19 0A            [ 1]  353 	adc	a, (0x0a, sp)
      00014A 88               [ 1]  354 	push	a
      00014B 9E               [ 1]  355 	ld	a, xh
      00014C 19 0A            [ 1]  356 	adc	a, (0x0a, sp)
      00014E 6B 06            [ 1]  357 	ld	(0x06, sp), a
      000150 84               [ 1]  358 	pop	a
      000151 1E 0D            [ 2]  359 	ldw	x, (0x0d, sp)
      000153 EF 02            [ 2]  360 	ldw	(0x2, x), y
      000155 E7 01            [ 1]  361 	ld	(0x1, x), a
      000157 88               [ 1]  362 	push	a
      000158 7B 06            [ 1]  363 	ld	a, (0x06, sp)
      00015A F7               [ 1]  364 	ld	(x), a
      00015B 84               [ 1]  365 	pop	a
                                    366 ;	src\bme280.c: 111: *iValue <<= 8;
      00015C 17 0A            [ 2]  367 	ldw	(0x0a, sp), y
      00015E 6B 09            [ 1]  368 	ld	(0x09, sp), a
      000160 0F 0C            [ 1]  369 	clr	(0x0c, sp)
      000162 1E 0D            [ 2]  370 	ldw	x, (0x0d, sp)
      000164 16 0B            [ 2]  371 	ldw	y, (0x0b, sp)
      000166 EF 02            [ 2]  372 	ldw	(0x2, x), y
      000168 16 09            [ 2]  373 	ldw	y, (0x09, sp)
      00016A FF               [ 2]  374 	ldw	(x), y
                                    375 ;	src\bme280.c: 112: *iValue += iRes[2];
      00016B 7B 04            [ 1]  376 	ld	a, (0x04, sp)
      00016D 90 5F            [ 1]  377 	clrw	y
      00016F 5F               [ 1]  378 	clrw	x
      000170 90 97            [ 1]  379 	ld	yl, a
      000172 72 F9 0B         [ 2]  380 	addw	y, (0x0b, sp)
      000175 9F               [ 1]  381 	ld	a, xl
      000176 19 0A            [ 1]  382 	adc	a, (0x0a, sp)
      000178 88               [ 1]  383 	push	a
      000179 9E               [ 1]  384 	ld	a, xh
      00017A 19 0A            [ 1]  385 	adc	a, (0x0a, sp)
      00017C 6B 06            [ 1]  386 	ld	(0x06, sp), a
      00017E 84               [ 1]  387 	pop	a
      00017F 1E 0D            [ 2]  388 	ldw	x, (0x0d, sp)
      000181 EF 02            [ 2]  389 	ldw	(0x2, x), y
      000183 E7 01            [ 1]  390 	ld	(0x1, x), a
      000185 88               [ 1]  391 	push	a
      000186 7B 06            [ 1]  392 	ld	a, (0x06, sp)
      000188 F7               [ 1]  393 	ld	(x), a
      000189 84               [ 1]  394 	pop	a
                                    395 ;	src\bme280.c: 113: *(uint32_t*)iValue &= 0x00FFFFFF;
      00018A 6B 0A            [ 1]  396 	ld	(0x0a, sp), a
      00018C 0F 09            [ 1]  397 	clr	(0x09, sp)
      00018E 1E 0D            [ 2]  398 	ldw	x, (0x0d, sp)
      000190 EF 02            [ 2]  399 	ldw	(0x2, x), y
      000192 16 09            [ 2]  400 	ldw	y, (0x09, sp)
      000194 FF               [ 2]  401 	ldw	(x), y
                                    402 ;	src\bme280.c: 114: }
      000195 5B 0E            [ 2]  403 	addw	sp, #14
      000197 81               [ 4]  404 	ret
                                    405 ;	src\bme280.c: 116: void BME280_ReadReg_LE_U24(uint8_t iReg, uint32_t *iValue) {
                                    406 ;	-----------------------------------------
                                    407 ;	 function BME280_ReadReg_LE_U24
                                    408 ;	-----------------------------------------
      000198                        409 _BME280_ReadReg_LE_U24:
      000198 52 16            [ 2]  410 	sub	sp, #22
      00019A 1F 15            [ 2]  411 	ldw	(0x15, sp), x
                                    412 ;	src\bme280.c: 119: iData[0] = iReg;
      00019C 96               [ 1]  413 	ldw	x, sp
      00019D 5C               [ 1]  414 	incw	x
      00019E F7               [ 1]  415 	ld	(x), a
                                    416 ;	src\bme280.c: 120: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00019F 89               [ 2]  417 	pushw	x
      0001A0 5F               [ 1]  418 	clrw	x
      0001A1 5C               [ 1]  419 	incw	x
      0001A2 A6 EE            [ 1]  420 	ld	a, #0xee
      0001A4 CDr00r00         [ 4]  421 	call	_I2C_Send_Bytes
                                    422 ;	src\bme280.c: 121: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0001A7 96               [ 1]  423 	ldw	x, sp
      0001A8 5C               [ 1]  424 	incw	x
      0001A9 5C               [ 1]  425 	incw	x
      0001AA 89               [ 2]  426 	pushw	x
      0001AB AE 00 03         [ 2]  427 	ldw	x, #0x0003
      0001AE A6 EE            [ 1]  428 	ld	a, #0xee
      0001B0 CDr00r00         [ 4]  429 	call	_I2C_Read_Bytes
                                    430 ;	src\bme280.c: 122: *iValue = iRes[0];
      0001B3 7B 02            [ 1]  431 	ld	a, (0x02, sp)
      0001B5 90 5F            [ 1]  432 	clrw	y
      0001B7 0F 0D            [ 1]  433 	clr	(0x0d, sp)
      0001B9 1E 15            [ 2]  434 	ldw	x, (0x15, sp)
      0001BB E7 03            [ 1]  435 	ld	(0x3, x), a
      0001BD EF 01            [ 2]  436 	ldw	(0x1, x), y
      0001BF 88               [ 1]  437 	push	a
      0001C0 7B 0E            [ 1]  438 	ld	a, (0x0e, sp)
      0001C2 F7               [ 1]  439 	ld	(x), a
      0001C3 84               [ 1]  440 	pop	a
                                    441 ;	src\bme280.c: 123: *iValue <<= 8;
      0001C4 6B 13            [ 1]  442 	ld	(0x13, sp), a
      0001C6 17 11            [ 2]  443 	ldw	(0x11, sp), y
      0001C8 0F 14            [ 1]  444 	clr	(0x14, sp)
      0001CA 1E 15            [ 2]  445 	ldw	x, (0x15, sp)
      0001CC 16 13            [ 2]  446 	ldw	y, (0x13, sp)
      0001CE EF 02            [ 2]  447 	ldw	(0x2, x), y
      0001D0 16 11            [ 2]  448 	ldw	y, (0x11, sp)
      0001D2 FF               [ 2]  449 	ldw	(x), y
                                    450 ;	src\bme280.c: 124: *iValue += iRes[1];
      0001D3 7B 03            [ 1]  451 	ld	a, (0x03, sp)
      0001D5 90 5F            [ 1]  452 	clrw	y
      0001D7 5F               [ 1]  453 	clrw	x
      0001D8 90 97            [ 1]  454 	ld	yl, a
      0001DA 72 F9 13         [ 2]  455 	addw	y, (0x13, sp)
      0001DD 9F               [ 1]  456 	ld	a, xl
      0001DE 19 12            [ 1]  457 	adc	a, (0x12, sp)
      0001E0 88               [ 1]  458 	push	a
      0001E1 9E               [ 1]  459 	ld	a, xh
      0001E2 19 12            [ 1]  460 	adc	a, (0x12, sp)
      0001E4 6B 0E            [ 1]  461 	ld	(0x0e, sp), a
      0001E6 84               [ 1]  462 	pop	a
      0001E7 1E 15            [ 2]  463 	ldw	x, (0x15, sp)
      0001E9 EF 02            [ 2]  464 	ldw	(0x2, x), y
      0001EB E7 01            [ 1]  465 	ld	(0x1, x), a
      0001ED 88               [ 1]  466 	push	a
      0001EE 7B 0E            [ 1]  467 	ld	a, (0x0e, sp)
      0001F0 F7               [ 1]  468 	ld	(x), a
      0001F1 84               [ 1]  469 	pop	a
                                    470 ;	src\bme280.c: 125: *iValue <<= 8;
      0001F2 17 12            [ 2]  471 	ldw	(0x12, sp), y
      0001F4 6B 11            [ 1]  472 	ld	(0x11, sp), a
      0001F6 0F 14            [ 1]  473 	clr	(0x14, sp)
      0001F8 1E 15            [ 2]  474 	ldw	x, (0x15, sp)
      0001FA 16 13            [ 2]  475 	ldw	y, (0x13, sp)
      0001FC EF 02            [ 2]  476 	ldw	(0x2, x), y
      0001FE 16 11            [ 2]  477 	ldw	y, (0x11, sp)
      000200 FF               [ 2]  478 	ldw	(x), y
                                    479 ;	src\bme280.c: 126: *iValue += iRes[2];
      000201 7B 04            [ 1]  480 	ld	a, (0x04, sp)
      000203 90 5F            [ 1]  481 	clrw	y
      000205 5F               [ 1]  482 	clrw	x
      000206 90 97            [ 1]  483 	ld	yl, a
      000208 72 F9 13         [ 2]  484 	addw	y, (0x13, sp)
      00020B 9F               [ 1]  485 	ld	a, xl
      00020C 19 12            [ 1]  486 	adc	a, (0x12, sp)
      00020E 6B 06            [ 1]  487 	ld	(0x06, sp), a
      000210 9E               [ 1]  488 	ld	a, xh
      000211 19 11            [ 1]  489 	adc	a, (0x11, sp)
      000213 6B 05            [ 1]  490 	ld	(0x05, sp), a
      000215 1E 15            [ 2]  491 	ldw	x, (0x15, sp)
      000217 EF 02            [ 2]  492 	ldw	(0x2, x), y
      000219 7B 06            [ 1]  493 	ld	a, (0x06, sp)
      00021B E7 01            [ 1]  494 	ld	(0x1, x), a
      00021D 7B 05            [ 1]  495 	ld	a, (0x05, sp)
      00021F F7               [ 1]  496 	ld	(x), a
                                    497 ;	src\bme280.c: 127: *(uint32_t*)iValue = be24toword(*(uint32_t *)iValue) & 0x00FFFFFF;
      000220 7B 06            [ 1]  498 	ld	a, (0x06, sp)
      000222 97               [ 1]  499 	ld	xl, a
      000223 0F 0C            [ 1]  500 	clr	(0x0c, sp)
      000225 02               [ 1]  501 	rlwa	x
      000226 90 9E            [ 1]  502 	ld	a, yh
      000228 01               [ 1]  503 	rrwa	x
      000229 4F               [ 1]  504 	clr	a
      00022A 0F 09            [ 1]  505 	clr	(0x09, sp)
      00022C 0F 0F            [ 1]  506 	clr	(0x0f, sp)
      00022E 0F 0E            [ 1]  507 	clr	(0x0e, sp)
      000230 0F 0D            [ 1]  508 	clr	(0x0d, sp)
      000232 1A 0E            [ 1]  509 	or	a, (0x0e, sp)
      000234 6B 12            [ 1]  510 	ld	(0x12, sp), a
      000236 9F               [ 1]  511 	ld	a, xl
      000237 1A 0C            [ 1]  512 	or	a, (0x0c, sp)
      000239 97               [ 1]  513 	ld	xl, a
      00023A 89               [ 2]  514 	pushw	x
      00023B 7B 11            [ 1]  515 	ld	a, (0x11, sp)
      00023D 1A 01            [ 1]  516 	or	a, (1, sp)
      00023F 85               [ 2]  517 	popw	x
      000240 95               [ 1]  518 	ld	xh, a
      000241 7B 0D            [ 1]  519 	ld	a, (0x0d, sp)
      000243 1A 09            [ 1]  520 	or	a, (0x09, sp)
      000245 0F 10            [ 1]  521 	clr	(0x10, sp)
      000247 0F 0F            [ 1]  522 	clr	(0x0f, sp)
      000249 88               [ 1]  523 	push	a
      00024A 0F 0D            [ 1]  524 	clr	(0x0d, sp)
      00024C 0F 0C            [ 1]  525 	clr	(0x0c, sp)
      00024E 0F 0A            [ 1]  526 	clr	(0x0a, sp)
      000250 84               [ 1]  527 	pop	a
      000251 1A 09            [ 1]  528 	or	a, (0x09, sp)
      000253 90 95            [ 1]  529 	ld	yh, a
      000255 9F               [ 1]  530 	ld	a, xl
      000256 1A 0C            [ 1]  531 	or	a, (0x0c, sp)
      000258 02               [ 1]  532 	rlwa	x
      000259 1A 0B            [ 1]  533 	or	a, (0x0b, sp)
      00025B 95               [ 1]  534 	ld	xh, a
      00025C 90 89            [ 2]  535 	pushw	y
      00025E 7B 14            [ 1]  536 	ld	a, (0x14, sp)
      000260 1A 02            [ 1]  537 	or	a, (2, sp)
      000262 90 85            [ 2]  538 	popw	y
      000264 6B 0E            [ 1]  539 	ld	(0x0e, sp), a
      000266 6B 12            [ 1]  540 	ld	(0x12, sp), a
      000268 0F 11            [ 1]  541 	clr	(0x11, sp)
      00026A 16 15            [ 2]  542 	ldw	y, (0x15, sp)
      00026C 90 EF 02         [ 2]  543 	ldw	(0x2, y), x
      00026F 1E 11            [ 2]  544 	ldw	x, (0x11, sp)
      000271 90 FF            [ 2]  545 	ldw	(y), x
                                    546 ;	src\bme280.c: 128: }
      000273 5B 16            [ 2]  547 	addw	sp, #22
      000275 81               [ 4]  548 	ret
                                    549 ;	src\bme280.c: 130: void BME280_ReadReg_S16(uint8_t iReg, int16_t *iValue) {
                                    550 ;	-----------------------------------------
                                    551 ;	 function BME280_ReadReg_S16
                                    552 ;	-----------------------------------------
      000276                        553 _BME280_ReadReg_S16:
      000276 52 07            [ 2]  554 	sub	sp, #7
      000278 1F 06            [ 2]  555 	ldw	(0x06, sp), x
                                    556 ;	src\bme280.c: 133: iData[0] = iReg;
      00027A 96               [ 1]  557 	ldw	x, sp
      00027B 5C               [ 1]  558 	incw	x
      00027C F7               [ 1]  559 	ld	(x), a
                                    560 ;	src\bme280.c: 134: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00027D 89               [ 2]  561 	pushw	x
      00027E 5F               [ 1]  562 	clrw	x
      00027F 5C               [ 1]  563 	incw	x
      000280 A6 EE            [ 1]  564 	ld	a, #0xee
      000282 CDr00r00         [ 4]  565 	call	_I2C_Send_Bytes
                                    566 ;	src\bme280.c: 135: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      000285 96               [ 1]  567 	ldw	x, sp
      000286 5C               [ 1]  568 	incw	x
      000287 5C               [ 1]  569 	incw	x
      000288 89               [ 2]  570 	pushw	x
      000289 AE 00 02         [ 2]  571 	ldw	x, #0x0002
      00028C A6 EE            [ 1]  572 	ld	a, #0xee
      00028E CDr00r00         [ 4]  573 	call	_I2C_Read_Bytes
                                    574 ;	src\bme280.c: 136: *iValue = iRes[0];
      000291 7B 02            [ 1]  575 	ld	a, (0x02, sp)
      000293 5F               [ 1]  576 	clrw	x
      000294 97               [ 1]  577 	ld	xl, a
      000295 16 06            [ 2]  578 	ldw	y, (0x06, sp)
      000297 90 FF            [ 2]  579 	ldw	(y), x
                                    580 ;	src\bme280.c: 137: *iValue <<= 8;
      000299 4F               [ 1]  581 	clr	a
      00029A 02               [ 1]  582 	rlwa	x
      00029B 16 06            [ 2]  583 	ldw	y, (0x06, sp)
      00029D 90 FF            [ 2]  584 	ldw	(y), x
                                    585 ;	src\bme280.c: 138: *iValue += iRes[1];
      00029F 7B 03            [ 1]  586 	ld	a, (0x03, sp)
      0002A1 6B 05            [ 1]  587 	ld	(0x05, sp), a
      0002A3 0F 04            [ 1]  588 	clr	(0x04, sp)
      0002A5 72 FB 04         [ 2]  589 	addw	x, (0x04, sp)
      0002A8 16 06            [ 2]  590 	ldw	y, (0x06, sp)
      0002AA 90 FF            [ 2]  591 	ldw	(y), x
                                    592 ;	src\bme280.c: 139: }
      0002AC 5B 07            [ 2]  593 	addw	sp, #7
      0002AE 81               [ 4]  594 	ret
                                    595 ;	src\bme280.c: 141: void BME280_ReadReg_LE_S16(uint8_t iReg, int16_t *iValue) {
                                    596 ;	-----------------------------------------
                                    597 ;	 function BME280_ReadReg_LE_S16
                                    598 ;	-----------------------------------------
      0002AF                        599 _BME280_ReadReg_LE_S16:
      0002AF 52 09            [ 2]  600 	sub	sp, #9
      0002B1 1F 08            [ 2]  601 	ldw	(0x08, sp), x
                                    602 ;	src\bme280.c: 144: iData[0] = iReg;
      0002B3 96               [ 1]  603 	ldw	x, sp
      0002B4 5C               [ 1]  604 	incw	x
      0002B5 F7               [ 1]  605 	ld	(x), a
                                    606 ;	src\bme280.c: 145: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0002B6 89               [ 2]  607 	pushw	x
      0002B7 5F               [ 1]  608 	clrw	x
      0002B8 5C               [ 1]  609 	incw	x
      0002B9 A6 EE            [ 1]  610 	ld	a, #0xee
      0002BB CDr00r00         [ 4]  611 	call	_I2C_Send_Bytes
                                    612 ;	src\bme280.c: 146: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0002BE 96               [ 1]  613 	ldw	x, sp
      0002BF 5C               [ 1]  614 	incw	x
      0002C0 5C               [ 1]  615 	incw	x
      0002C1 89               [ 2]  616 	pushw	x
      0002C2 AE 00 02         [ 2]  617 	ldw	x, #0x0002
      0002C5 A6 EE            [ 1]  618 	ld	a, #0xee
      0002C7 CDr00r00         [ 4]  619 	call	_I2C_Read_Bytes
                                    620 ;	src\bme280.c: 147: *iValue = iRes[0];
      0002CA 7B 02            [ 1]  621 	ld	a, (0x02, sp)
      0002CC 5F               [ 1]  622 	clrw	x
      0002CD 97               [ 1]  623 	ld	xl, a
      0002CE 16 08            [ 2]  624 	ldw	y, (0x08, sp)
      0002D0 90 FF            [ 2]  625 	ldw	(y), x
                                    626 ;	src\bme280.c: 148: *iValue <<= 8;
      0002D2 4F               [ 1]  627 	clr	a
      0002D3 02               [ 1]  628 	rlwa	x
      0002D4 16 08            [ 2]  629 	ldw	y, (0x08, sp)
      0002D6 90 FF            [ 2]  630 	ldw	(y), x
                                    631 ;	src\bme280.c: 149: *iValue += iRes[1];
      0002D8 7B 03            [ 1]  632 	ld	a, (0x03, sp)
      0002DA 6B 07            [ 1]  633 	ld	(0x07, sp), a
      0002DC 0F 06            [ 1]  634 	clr	(0x06, sp)
      0002DE 72 FB 06         [ 2]  635 	addw	x, (0x06, sp)
      0002E1 16 08            [ 2]  636 	ldw	y, (0x08, sp)
      0002E3 90 FF            [ 2]  637 	ldw	(y), x
                                    638 ;	src\bme280.c: 150: *(int16_t *)iValue = be16toword(*(int16_t *) iValue);
      0002E5 90 93            [ 1]  639 	ldw	y, x
      0002E7 0F 05            [ 1]  640 	clr	(0x05, sp)
      0002E9 9F               [ 1]  641 	ld	a, xl
      0002EA 0F 06            [ 1]  642 	clr	(0x06, sp)
      0002EC 1A 06            [ 1]  643 	or	a, (0x06, sp)
      0002EE 95               [ 1]  644 	ld	xh, a
      0002EF 90 9E            [ 1]  645 	ld	a, yh
      0002F1 1A 05            [ 1]  646 	or	a, (0x05, sp)
      0002F3 97               [ 1]  647 	ld	xl, a
      0002F4 16 08            [ 2]  648 	ldw	y, (0x08, sp)
      0002F6 90 FF            [ 2]  649 	ldw	(y), x
                                    650 ;	src\bme280.c: 151: }
      0002F8 5B 09            [ 2]  651 	addw	sp, #9
      0002FA 81               [ 4]  652 	ret
                                    653 ;	src\bme280.c: 153: void BME280_ReadRegisters() {
                                    654 ;	-----------------------------------------
                                    655 ;	 function BME280_ReadRegisters
                                    656 ;	-----------------------------------------
      0002FB                        657 _BME280_ReadRegisters:
      0002FB 52 15            [ 2]  658 	sub	sp, #21
                                    659 ;	src\bme280.c: 154: uint8_t iData[1] = { BME280_REGISTER_PRESSUREDATA };
      0002FD 96               [ 1]  660 	ldw	x, sp
      0002FE 5C               [ 1]  661 	incw	x
      0002FF A6 F7            [ 1]  662 	ld	a, #0xf7
      000301 F7               [ 1]  663 	ld	(x), a
                                    664 ;	src\bme280.c: 156: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      000302 89               [ 2]  665 	pushw	x
      000303 5F               [ 1]  666 	clrw	x
      000304 5C               [ 1]  667 	incw	x
      000305 A6 EE            [ 1]  668 	ld	a, #0xee
      000307 CDr00r00         [ 4]  669 	call	_I2C_Send_Bytes
                                    670 ;	src\bme280.c: 157: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      00030A 96               [ 1]  671 	ldw	x, sp
      00030B 5C               [ 1]  672 	incw	x
      00030C 5C               [ 1]  673 	incw	x
      00030D 89               [ 2]  674 	pushw	x
      00030E AE 00 08         [ 2]  675 	ldw	x, #0x0008
      000311 A6 EE            [ 1]  676 	ld	a, #0xee
      000313 CDr00r00         [ 4]  677 	call	_I2C_Read_Bytes
                                    678 ;	src\bme280.c: 158: Registers.pressure = iRes[0];
      000316 7B 02            [ 1]  679 	ld	a, (0x02, sp)
      000318 6B 15            [ 1]  680 	ld	(0x15, sp), a
      00031A 5F               [ 1]  681 	clrw	x
      00031B 1F 13            [ 2]  682 	ldw	(0x13, sp), x
      00031D 0F 12            [ 1]  683 	clr	(0x12, sp)
      00031F AEr00r21         [ 2]  684 	ldw	x, #(_Registers+0)
      000322 16 14            [ 2]  685 	ldw	y, (0x14, sp)
      000324 EF 02            [ 2]  686 	ldw	(0x2, x), y
      000326 16 12            [ 2]  687 	ldw	y, (0x12, sp)
      000328 FF               [ 2]  688 	ldw	(x), y
                                    689 ;	src\bme280.c: 160: Registers.pressure += iRes[1];
      000329 7B 03            [ 1]  690 	ld	a, (0x03, sp)
      00032B 90 5F            [ 1]  691 	clrw	y
      00032D 5F               [ 1]  692 	clrw	x
      00032E 90 5D            [ 2]  693 	tnzw	y
      000330 2A 01            [ 1]  694 	jrpl	00103$
      000332 5A               [ 2]  695 	decw	x
      000333                        696 00103$:
      000333 90 97            [ 1]  697 	ld	yl, a
      000335 72 F9 14         [ 2]  698 	addw	y, (0x14, sp)
      000338 9F               [ 1]  699 	ld	a, xl
      000339 19 13            [ 1]  700 	adc	a, (0x13, sp)
      00033B 6B 0B            [ 1]  701 	ld	(0x0b, sp), a
      00033D 9E               [ 1]  702 	ld	a, xh
      00033E 19 12            [ 1]  703 	adc	a, (0x12, sp)
      000340 6B 0A            [ 1]  704 	ld	(0x0a, sp), a
      000342 AEr00r21         [ 2]  705 	ldw	x, #(_Registers+0)
      000345 EF 02            [ 2]  706 	ldw	(0x2, x), y
      000347 7B 0B            [ 1]  707 	ld	a, (0x0b, sp)
      000349 E7 01            [ 1]  708 	ld	(0x1, x), a
      00034B 7B 0A            [ 1]  709 	ld	a, (0x0a, sp)
      00034D F7               [ 1]  710 	ld	(x), a
                                    711 ;	src\bme280.c: 162: Registers.pressure += iRes[2];
      00034E 7B 04            [ 1]  712 	ld	a, (0x04, sp)
      000350 5F               [ 1]  713 	clrw	x
      000351 97               [ 1]  714 	ld	xl, a
      000352 1F 10            [ 2]  715 	ldw	(0x10, sp), x
      000354 5F               [ 1]  716 	clrw	x
      000355 0D 10            [ 1]  717 	tnz	(0x10, sp)
      000357 2A 01            [ 1]  718 	jrpl	00104$
      000359 5A               [ 2]  719 	decw	x
      00035A                        720 00104$:
      00035A 72 F9 10         [ 2]  721 	addw	y, (0x10, sp)
      00035D 9F               [ 1]  722 	ld	a, xl
      00035E 19 0B            [ 1]  723 	adc	a, (0x0b, sp)
      000360 88               [ 1]  724 	push	a
      000361 9E               [ 1]  725 	ld	a, xh
      000362 19 0B            [ 1]  726 	adc	a, (0x0b, sp)
      000364 6B 13            [ 1]  727 	ld	(0x13, sp), a
      000366 84               [ 1]  728 	pop	a
      000367 AEr00r21         [ 2]  729 	ldw	x, #(_Registers+0)
      00036A EF 02            [ 2]  730 	ldw	(0x2, x), y
      00036C E7 01            [ 1]  731 	ld	(0x1, x), a
      00036E 88               [ 1]  732 	push	a
      00036F 7B 13            [ 1]  733 	ld	a, (0x13, sp)
      000371 F7               [ 1]  734 	ld	(x), a
      000372 84               [ 1]  735 	pop	a
                                    736 ;	src\bme280.c: 163: Registers.pressure &= 0x00FFFFFF;
      000373 6B 0F            [ 1]  737 	ld	(0x0f, sp), a
      000375 0F 0E            [ 1]  738 	clr	(0x0e, sp)
      000377 AEr00r21         [ 2]  739 	ldw	x, #(_Registers+0)
      00037A EF 02            [ 2]  740 	ldw	(0x2, x), y
      00037C 16 0E            [ 2]  741 	ldw	y, (0x0e, sp)
      00037E FF               [ 2]  742 	ldw	(x), y
                                    743 ;	src\bme280.c: 164: Registers.temperature = iRes[3];
      00037F 7B 05            [ 1]  744 	ld	a, (0x05, sp)
      000381 90 5F            [ 1]  745 	clrw	y
      000383 0F 12            [ 1]  746 	clr	(0x12, sp)
      000385 AEr00r25         [ 2]  747 	ldw	x, #(_Registers+4)
      000388 E7 03            [ 1]  748 	ld	(0x3, x), a
      00038A EF 01            [ 2]  749 	ldw	(0x1, x), y
      00038C 7B 12            [ 1]  750 	ld	a, (0x12, sp)
      00038E F7               [ 1]  751 	ld	(x), a
                                    752 ;	src\bme280.c: 166: Registers.pressure += iRes[4];
      00038F AEr00r21         [ 2]  753 	ldw	x, #(_Registers+0)
      000392 90 93            [ 1]  754 	ldw	y, x
      000394 90 EE 02         [ 2]  755 	ldw	y, (0x2, y)
      000397 FE               [ 2]  756 	ldw	x, (x)
      000398 1F 0E            [ 2]  757 	ldw	(0x0e, sp), x
      00039A 7B 06            [ 1]  758 	ld	a, (0x06, sp)
      00039C 5F               [ 1]  759 	clrw	x
      00039D 97               [ 1]  760 	ld	xl, a
      00039E 1F 14            [ 2]  761 	ldw	(0x14, sp), x
      0003A0 5F               [ 1]  762 	clrw	x
      0003A1 0D 14            [ 1]  763 	tnz	(0x14, sp)
      0003A3 2A 01            [ 1]  764 	jrpl	00105$
      0003A5 5A               [ 2]  765 	decw	x
      0003A6                        766 00105$:
      0003A6 72 F9 14         [ 2]  767 	addw	y, (0x14, sp)
      0003A9 17 0C            [ 2]  768 	ldw	(0x0c, sp), y
      0003AB 9F               [ 1]  769 	ld	a, xl
      0003AC 19 0F            [ 1]  770 	adc	a, (0x0f, sp)
      0003AE 6B 0B            [ 1]  771 	ld	(0x0b, sp), a
      0003B0 9E               [ 1]  772 	ld	a, xh
      0003B1 19 0E            [ 1]  773 	adc	a, (0x0e, sp)
      0003B3 6B 0A            [ 1]  774 	ld	(0x0a, sp), a
      0003B5 AEr00r21         [ 2]  775 	ldw	x, #(_Registers+0)
      0003B8 16 0C            [ 2]  776 	ldw	y, (0x0c, sp)
      0003BA EF 02            [ 2]  777 	ldw	(0x2, x), y
      0003BC 16 0A            [ 2]  778 	ldw	y, (0x0a, sp)
      0003BE FF               [ 2]  779 	ldw	(x), y
                                    780 ;	src\bme280.c: 168: Registers.pressure += iRes[5];
      0003BF 7B 07            [ 1]  781 	ld	a, (0x07, sp)
      0003C1 5F               [ 1]  782 	clrw	x
      0003C2 97               [ 1]  783 	ld	xl, a
      0003C3 9E               [ 1]  784 	ld	a, xh
      0003C4 49               [ 1]  785 	rlc	a
      0003C5 4F               [ 1]  786 	clr	a
      0003C6 A2 00            [ 1]  787 	sbc	a, #0x00
      0003C8 6B 0F            [ 1]  788 	ld	(0x0f, sp), a
      0003CA 72 FB 0C         [ 2]  789 	addw	x, (0x0c, sp)
      0003CD 51               [ 1]  790 	exgw	x, y
      0003CE 88               [ 1]  791 	push	a
      0003CF 7B 10            [ 1]  792 	ld	a, (0x10, sp)
      0003D1 19 0C            [ 1]  793 	adc	a, (0x0c, sp)
      0003D3 6B 14            [ 1]  794 	ld	(0x14, sp), a
      0003D5 84               [ 1]  795 	pop	a
      0003D6 19 0A            [ 1]  796 	adc	a, (0x0a, sp)
      0003D8 6B 12            [ 1]  797 	ld	(0x12, sp), a
      0003DA AEr00r21         [ 2]  798 	ldw	x, #(_Registers+0)
      0003DD EF 02            [ 2]  799 	ldw	(0x2, x), y
      0003DF 7B 13            [ 1]  800 	ld	a, (0x13, sp)
      0003E1 E7 01            [ 1]  801 	ld	(0x1, x), a
      0003E3 7B 12            [ 1]  802 	ld	a, (0x12, sp)
      0003E5 F7               [ 1]  803 	ld	(x), a
                                    804 ;	src\bme280.c: 169: Registers.pressure &= 0x00FFFFFF;
      0003E6 7B 13            [ 1]  805 	ld	a, (0x13, sp)
      0003E8 6B 0F            [ 1]  806 	ld	(0x0f, sp), a
      0003EA 0F 0E            [ 1]  807 	clr	(0x0e, sp)
      0003EC AEr00r21         [ 2]  808 	ldw	x, #(_Registers+0)
      0003EF EF 02            [ 2]  809 	ldw	(0x2, x), y
      0003F1 16 0E            [ 2]  810 	ldw	y, (0x0e, sp)
      0003F3 FF               [ 2]  811 	ldw	(x), y
                                    812 ;	src\bme280.c: 170: Registers.humidity = iRes[6];
      0003F4 7B 08            [ 1]  813 	ld	a, (0x08, sp)
      0003F6 5F               [ 1]  814 	clrw	x
      0003F7 97               [ 1]  815 	ld	xl, a
      0003F8 CFu00u29         [ 2]  816 	ldw	_Registers+8, x
                                    817 ;	src\bme280.c: 172: Registers.humidity = iRes[7];
      0003FB 7B 09            [ 1]  818 	ld	a, (0x09, sp)
      0003FD 5F               [ 1]  819 	clrw	x
      0003FE 97               [ 1]  820 	ld	xl, a
      0003FF CFu00u29         [ 2]  821 	ldw	_Registers+8, x
                                    822 ;	src\bme280.c: 173: }
      000402 5B 15            [ 2]  823 	addw	sp, #21
      000404 81               [ 4]  824 	ret
                                    825 ;	src\bme280.c: 175: uint8_t BME280_ReadStatus(void) {
                                    826 ;	-----------------------------------------
                                    827 ;	 function BME280_ReadStatus
                                    828 ;	-----------------------------------------
      000405                        829 _BME280_ReadStatus:
                                    830 ;	src\bme280.c: 177: uint8_t res = BME280_ReadReg(BME280_REGISTER_STATUS) & 0x09;
      000405 A6 F3            [ 1]  831 	ld	a, #0xf3
      000407 CDr00r69         [ 4]  832 	call	_BME280_ReadReg
      00040A A4 09            [ 1]  833 	and	a, #0x09
                                    834 ;	src\bme280.c: 178: return res;
                                    835 ;	src\bme280.c: 179: }
      00040C 81               [ 4]  836 	ret
                                    837 ;	src\bme280.c: 181: void BME280_ReadCoefficients(void) {
                                    838 ;	-----------------------------------------
                                    839 ;	 function BME280_ReadCoefficients
                                    840 ;	-----------------------------------------
      00040D                        841 _BME280_ReadCoefficients:
      00040D 52 04            [ 2]  842 	sub	sp, #4
                                    843 ;	src\bme280.c: 182: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_T1, &CalibData.dig_T1);
      00040F AEr00r00         [ 2]  844 	ldw	x, #(_CalibData+0)
      000412 A6 88            [ 1]  845 	ld	a, #0x88
      000414 CDr00rB6         [ 4]  846 	call	_BME280_ReadReg_LE_U16
                                    847 ;	src\bme280.c: 183: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T2, &CalibData.dig_T2);
      000417 AEr00r02         [ 2]  848 	ldw	x, #(_CalibData+2)
      00041A A6 8A            [ 1]  849 	ld	a, #0x8a
      00041C CDr02rAF         [ 4]  850 	call	_BME280_ReadReg_LE_S16
                                    851 ;	src\bme280.c: 184: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T3, &CalibData.dig_T3);
      00041F AEr00r04         [ 2]  852 	ldw	x, #(_CalibData+4)
      000422 A6 8C            [ 1]  853 	ld	a, #0x8c
      000424 CDr02rAF         [ 4]  854 	call	_BME280_ReadReg_LE_S16
                                    855 ;	src\bme280.c: 185: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_P1, &CalibData.dig_P1);
      000427 AEr00r06         [ 2]  856 	ldw	x, #(_CalibData+6)
      00042A A6 8E            [ 1]  857 	ld	a, #0x8e
      00042C CDr00rB6         [ 4]  858 	call	_BME280_ReadReg_LE_U16
                                    859 ;	src\bme280.c: 186: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P2, &CalibData.dig_P2);
      00042F AEr00r08         [ 2]  860 	ldw	x, #(_CalibData+8)
      000432 A6 90            [ 1]  861 	ld	a, #0x90
      000434 CDr02rAF         [ 4]  862 	call	_BME280_ReadReg_LE_S16
                                    863 ;	src\bme280.c: 187: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P3, &CalibData.dig_P3);
      000437 AEr00r0A         [ 2]  864 	ldw	x, #(_CalibData+10)
      00043A A6 92            [ 1]  865 	ld	a, #0x92
      00043C CDr02rAF         [ 4]  866 	call	_BME280_ReadReg_LE_S16
                                    867 ;	src\bme280.c: 188: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P4, &CalibData.dig_P4);
      00043F AEr00r0C         [ 2]  868 	ldw	x, #(_CalibData+12)
      000442 A6 94            [ 1]  869 	ld	a, #0x94
      000444 CDr02rAF         [ 4]  870 	call	_BME280_ReadReg_LE_S16
                                    871 ;	src\bme280.c: 189: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P5, &CalibData.dig_P5);
      000447 AEr00r0E         [ 2]  872 	ldw	x, #(_CalibData+14)
      00044A A6 96            [ 1]  873 	ld	a, #0x96
      00044C CDr02rAF         [ 4]  874 	call	_BME280_ReadReg_LE_S16
                                    875 ;	src\bme280.c: 190: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P6, &CalibData.dig_P6);
      00044F AEr00r10         [ 2]  876 	ldw	x, #(_CalibData+16)
      000452 A6 98            [ 1]  877 	ld	a, #0x98
      000454 CDr02rAF         [ 4]  878 	call	_BME280_ReadReg_LE_S16
                                    879 ;	src\bme280.c: 191: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P7, &CalibData.dig_P7);
      000457 AEr00r12         [ 2]  880 	ldw	x, #(_CalibData+18)
      00045A A6 9A            [ 1]  881 	ld	a, #0x9a
      00045C CDr02rAF         [ 4]  882 	call	_BME280_ReadReg_LE_S16
                                    883 ;	src\bme280.c: 192: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P8, &CalibData.dig_P8);
      00045F AEr00r14         [ 2]  884 	ldw	x, #(_CalibData+20)
      000462 A6 9C            [ 1]  885 	ld	a, #0x9c
      000464 CDr02rAF         [ 4]  886 	call	_BME280_ReadReg_LE_S16
                                    887 ;	src\bme280.c: 193: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P9, &CalibData.dig_P9);
      000467 AEr00r16         [ 2]  888 	ldw	x, #(_CalibData+22)
      00046A A6 9E            [ 1]  889 	ld	a, #0x9e
      00046C CDr02rAF         [ 4]  890 	call	_BME280_ReadReg_LE_S16
                                    891 ;	src\bme280.c: 194: CalibData.dig_H1 = BME280_ReadReg(BME280_REGISTER_DIG_H1);
      00046F A6 A1            [ 1]  892 	ld	a, #0xa1
      000471 CDr00r69         [ 4]  893 	call	_BME280_ReadReg
      000474 C7u00u18         [ 1]  894 	ld	_CalibData+24, a
                                    895 ;	src\bme280.c: 195: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_H2, &CalibData.dig_H2);
      000477 AEr00r19         [ 2]  896 	ldw	x, #(_CalibData+25)
      00047A A6 E1            [ 1]  897 	ld	a, #0xe1
      00047C CDr02rAF         [ 4]  898 	call	_BME280_ReadReg_LE_S16
                                    899 ;	src\bme280.c: 196: CalibData.dig_H3 = BME280_ReadReg(BME280_REGISTER_DIG_H3);
      00047F A6 E3            [ 1]  900 	ld	a, #0xe3
      000481 CDr00r69         [ 4]  901 	call	_BME280_ReadReg
      000484 C7u00u1B         [ 1]  902 	ld	_CalibData+27, a
                                    903 ;	src\bme280.c: 197: CalibData.dig_H4 = (BME280_ReadReg(BME280_REGISTER_DIG_H4) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H4+1) & 0xF);
      000487 A6 E4            [ 1]  904 	ld	a, #0xe4
      000489 CDr00r69         [ 4]  905 	call	_BME280_ReadReg
      00048C 5F               [ 1]  906 	clrw	x
      00048D 97               [ 1]  907 	ld	xl, a
      00048E 58               [ 2]  908 	sllw	x
      00048F 58               [ 2]  909 	sllw	x
      000490 58               [ 2]  910 	sllw	x
      000491 58               [ 2]  911 	sllw	x
      000492 1F 01            [ 2]  912 	ldw	(0x01, sp), x
      000494 A6 E5            [ 1]  913 	ld	a, #0xe5
      000496 CDr00r69         [ 4]  914 	call	_BME280_ReadReg
      000499 A4 0F            [ 1]  915 	and	a, #0x0f
      00049B 6B 04            [ 1]  916 	ld	(0x04, sp), a
      00049D 7B 01            [ 1]  917 	ld	a, (0x01, sp)
      00049F 95               [ 1]  918 	ld	xh, a
      0004A0 7B 02            [ 1]  919 	ld	a, (0x02, sp)
      0004A2 1A 04            [ 1]  920 	or	a, (0x04, sp)
      0004A4 97               [ 1]  921 	ld	xl, a
      0004A5 CFu00u1C         [ 2]  922 	ldw	_CalibData+28, x
                                    923 ;	src\bme280.c: 198: CalibData.dig_H5 = (BME280_ReadReg(BME280_REGISTER_DIG_H5+1) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H5) >> 4);
      0004A8 A6 E6            [ 1]  924 	ld	a, #0xe6
      0004AA CDr00r69         [ 4]  925 	call	_BME280_ReadReg
      0004AD 5F               [ 1]  926 	clrw	x
      0004AE 97               [ 1]  927 	ld	xl, a
      0004AF 58               [ 2]  928 	sllw	x
      0004B0 58               [ 2]  929 	sllw	x
      0004B1 58               [ 2]  930 	sllw	x
      0004B2 58               [ 2]  931 	sllw	x
      0004B3 1F 03            [ 2]  932 	ldw	(0x03, sp), x
      0004B5 A6 E5            [ 1]  933 	ld	a, #0xe5
      0004B7 CDr00r69         [ 4]  934 	call	_BME280_ReadReg
      0004BA 4E               [ 1]  935 	swap	a
      0004BB A4 0F            [ 1]  936 	and	a, #0x0f
      0004BD 5F               [ 1]  937 	clrw	x
      0004BE 1A 04            [ 1]  938 	or	a, (0x04, sp)
      0004C0 02               [ 1]  939 	rlwa	x
      0004C1 1A 03            [ 1]  940 	or	a, (0x03, sp)
      0004C3 95               [ 1]  941 	ld	xh, a
      0004C4 CFu00u1E         [ 2]  942 	ldw	_CalibData+30, x
                                    943 ;	src\bme280.c: 199: CalibData.dig_H6 = (int8_t)BME280_ReadReg(BME280_REGISTER_DIG_H6);
      0004C7 A6 E7            [ 1]  944 	ld	a, #0xe7
      0004C9 CDr00r69         [ 4]  945 	call	_BME280_ReadReg
      0004CC C7u00u20         [ 1]  946 	ld	_CalibData+32, a
                                    947 ;	src\bme280.c: 239: }
      0004CF 5B 04            [ 2]  948 	addw	sp, #4
      0004D1 81               [ 4]  949 	ret
                                    950 ;	src\bme280.c: 241: void BME280_SetStandby(uint8_t tsb) {
                                    951 ;	-----------------------------------------
                                    952 ;	 function BME280_SetStandby
                                    953 ;	-----------------------------------------
      0004D2                        954 _BME280_SetStandby:
      0004D2 89               [ 2]  955 	pushw	x
      0004D3 6B 02            [ 1]  956 	ld	(0x02, sp), a
                                    957 ;	src\bme280.c: 243: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_STBY_MSK;
      0004D5 A6 F5            [ 1]  958 	ld	a, #0xf5
      0004D7 CDr00r69         [ 4]  959 	call	_BME280_ReadReg
      0004DA A4 1F            [ 1]  960 	and	a, #0x1f
      0004DC 6B 01            [ 1]  961 	ld	(0x01, sp), a
                                    962 ;	src\bme280.c: 244: reg |= tsb & BME280_STBY_MSK;
      0004DE 7B 02            [ 1]  963 	ld	a, (0x02, sp)
      0004E0 A4 E0            [ 1]  964 	and	a, #0xe0
      0004E2 1A 01            [ 1]  965 	or	a, (0x01, sp)
                                    966 ;	src\bme280.c: 245: BME280_WriteReg(BME280_REG_CONFIG,reg);
      0004E4 88               [ 1]  967 	push	a
      0004E5 A6 F5            [ 1]  968 	ld	a, #0xf5
      0004E7 CDr00r54         [ 4]  969 	call	_BME280_WriteReg
                                    970 ;	src\bme280.c: 246: }
      0004EA 85               [ 2]  971 	popw	x
      0004EB 81               [ 4]  972 	ret
                                    973 ;	src\bme280.c: 248: void BME280_SetFilter(uint8_t filter) {
                                    974 ;	-----------------------------------------
                                    975 ;	 function BME280_SetFilter
                                    976 ;	-----------------------------------------
      0004EC                        977 _BME280_SetFilter:
      0004EC 89               [ 2]  978 	pushw	x
      0004ED 6B 02            [ 1]  979 	ld	(0x02, sp), a
                                    980 ;	src\bme280.c: 250: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_FILTER_MSK;
      0004EF A6 F5            [ 1]  981 	ld	a, #0xf5
      0004F1 CDr00r69         [ 4]  982 	call	_BME280_ReadReg
      0004F4 A4 E3            [ 1]  983 	and	a, #0xe3
      0004F6 6B 01            [ 1]  984 	ld	(0x01, sp), a
                                    985 ;	src\bme280.c: 251: reg |= filter & BME280_FILTER_MSK;
      0004F8 7B 02            [ 1]  986 	ld	a, (0x02, sp)
      0004FA A4 1C            [ 1]  987 	and	a, #0x1c
      0004FC 1A 01            [ 1]  988 	or	a, (0x01, sp)
                                    989 ;	src\bme280.c: 252: BME280_WriteReg(BME280_REG_CONFIG,reg);
      0004FE 88               [ 1]  990 	push	a
      0004FF A6 F5            [ 1]  991 	ld	a, #0xf5
      000501 CDr00r54         [ 4]  992 	call	_BME280_WriteReg
                                    993 ;	src\bme280.c: 253: }
      000504 85               [ 2]  994 	popw	x
      000505 81               [ 4]  995 	ret
                                    996 ;	src\bme280.c: 255: void BME280_SetOversamplingTemper(uint8_t osrs) {
                                    997 ;	-----------------------------------------
                                    998 ;	 function BME280_SetOversamplingTemper
                                    999 ;	-----------------------------------------
      000506                       1000 _BME280_SetOversamplingTemper:
      000506 89               [ 2] 1001 	pushw	x
      000507 6B 02            [ 1] 1002 	ld	(0x02, sp), a
                                   1003 ;	src\bme280.c: 257: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_T_MSK;
      000509 A6 F4            [ 1] 1004 	ld	a, #0xf4
      00050B CDr00r69         [ 4] 1005 	call	_BME280_ReadReg
      00050E A4 1F            [ 1] 1006 	and	a, #0x1f
      000510 6B 01            [ 1] 1007 	ld	(0x01, sp), a
                                   1008 ;	src\bme280.c: 258: reg |= osrs & BME280_OSRS_T_MSK;
      000512 7B 02            [ 1] 1009 	ld	a, (0x02, sp)
      000514 A4 E0            [ 1] 1010 	and	a, #0xe0
      000516 1A 01            [ 1] 1011 	or	a, (0x01, sp)
                                   1012 ;	src\bme280.c: 259: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      000518 88               [ 1] 1013 	push	a
      000519 A6 F4            [ 1] 1014 	ld	a, #0xf4
      00051B CDr00r54         [ 4] 1015 	call	_BME280_WriteReg
                                   1016 ;	src\bme280.c: 260: }
      00051E 85               [ 2] 1017 	popw	x
      00051F 81               [ 4] 1018 	ret
                                   1019 ;	src\bme280.c: 262: void BME280_SetOversamplingPressure(uint8_t osrs) {
                                   1020 ;	-----------------------------------------
                                   1021 ;	 function BME280_SetOversamplingPressure
                                   1022 ;	-----------------------------------------
      000520                       1023 _BME280_SetOversamplingPressure:
      000520 89               [ 2] 1024 	pushw	x
      000521 6B 02            [ 1] 1025 	ld	(0x02, sp), a
                                   1026 ;	src\bme280.c: 264: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_P_MSK;
      000523 A6 F4            [ 1] 1027 	ld	a, #0xf4
      000525 CDr00r69         [ 4] 1028 	call	_BME280_ReadReg
      000528 A4 E3            [ 1] 1029 	and	a, #0xe3
      00052A 6B 01            [ 1] 1030 	ld	(0x01, sp), a
                                   1031 ;	src\bme280.c: 265: reg |= osrs & BME280_OSRS_P_MSK;
      00052C 7B 02            [ 1] 1032 	ld	a, (0x02, sp)
      00052E A4 1C            [ 1] 1033 	and	a, #0x1c
      000530 1A 01            [ 1] 1034 	or	a, (0x01, sp)
                                   1035 ;	src\bme280.c: 266: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      000532 88               [ 1] 1036 	push	a
      000533 A6 F4            [ 1] 1037 	ld	a, #0xf4
      000535 CDr00r54         [ 4] 1038 	call	_BME280_WriteReg
                                   1039 ;	src\bme280.c: 267: }
      000538 85               [ 2] 1040 	popw	x
      000539 81               [ 4] 1041 	ret
                                   1042 ;	src\bme280.c: 269: void BME280_SetOversamplingHum(uint8_t osrs) {
                                   1043 ;	-----------------------------------------
                                   1044 ;	 function BME280_SetOversamplingHum
                                   1045 ;	-----------------------------------------
      00053A                       1046 _BME280_SetOversamplingHum:
      00053A 89               [ 2] 1047 	pushw	x
      00053B 6B 02            [ 1] 1048 	ld	(0x02, sp), a
                                   1049 ;	src\bme280.c: 271: reg = BME280_ReadReg(BME280_REG_CTRL_HUM) & ~BME280_OSRS_H_MSK;
      00053D A6 F2            [ 1] 1050 	ld	a, #0xf2
      00053F CDr00r69         [ 4] 1051 	call	_BME280_ReadReg
      000542 A4 F8            [ 1] 1052 	and	a, #0xf8
      000544 6B 01            [ 1] 1053 	ld	(0x01, sp), a
                                   1054 ;	src\bme280.c: 272: reg |= osrs & BME280_OSRS_H_MSK;
      000546 7B 02            [ 1] 1055 	ld	a, (0x02, sp)
      000548 A4 07            [ 1] 1056 	and	a, #0x07
      00054A 1A 01            [ 1] 1057 	or	a, (0x01, sp)
                                   1058 ;	src\bme280.c: 273: BME280_WriteReg(BME280_REG_CTRL_HUM,reg);
      00054C 88               [ 1] 1059 	push	a
      00054D A6 F2            [ 1] 1060 	ld	a, #0xf2
      00054F CDr00r54         [ 4] 1061 	call	_BME280_WriteReg
                                   1062 ;	src\bme280.c: 276: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      000552 A6 F4            [ 1] 1063 	ld	a, #0xf4
      000554 CDr00r69         [ 4] 1064 	call	_BME280_ReadReg
                                   1065 ;	src\bme280.c: 277: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      000557 88               [ 1] 1066 	push	a
      000558 A6 F4            [ 1] 1067 	ld	a, #0xf4
      00055A CDr00r54         [ 4] 1068 	call	_BME280_WriteReg
                                   1069 ;	src\bme280.c: 278: }
      00055D 85               [ 2] 1070 	popw	x
      00055E 81               [ 4] 1071 	ret
                                   1072 ;	src\bme280.c: 280: void BME280_SetMode(uint8_t mode) {
                                   1073 ;	-----------------------------------------
                                   1074 ;	 function BME280_SetMode
                                   1075 ;	-----------------------------------------
      00055F                       1076 _BME280_SetMode:
      00055F 89               [ 2] 1077 	pushw	x
      000560 6B 02            [ 1] 1078 	ld	(0x02, sp), a
                                   1079 ;	src\bme280.c: 282: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_MODE_MSK;
      000562 A6 F4            [ 1] 1080 	ld	a, #0xf4
      000564 CDr00r69         [ 4] 1081 	call	_BME280_ReadReg
      000567 A4 FC            [ 1] 1082 	and	a, #0xfc
      000569 6B 01            [ 1] 1083 	ld	(0x01, sp), a
                                   1084 ;	src\bme280.c: 283: reg |= mode & BME280_MODE_MSK;
      00056B 7B 02            [ 1] 1085 	ld	a, (0x02, sp)
      00056D A4 03            [ 1] 1086 	and	a, #0x03
      00056F 1A 01            [ 1] 1087 	or	a, (0x01, sp)
                                   1088 ;	src\bme280.c: 284: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      000571 88               [ 1] 1089 	push	a
      000572 A6 F4            [ 1] 1090 	ld	a, #0xf4
      000574 CDr00r54         [ 4] 1091 	call	_BME280_WriteReg
                                   1092 ;	src\bme280.c: 285: }
      000577 85               [ 2] 1093 	popw	x
      000578 81               [ 4] 1094 	ret
                                   1095 ;	src\bme280.c: 287: float BME280_ReadTemperature(void) {
                                   1096 ;	-----------------------------------------
                                   1097 ;	 function BME280_ReadTemperature
                                   1098 ;	-----------------------------------------
      000579                       1099 _BME280_ReadTemperature:
      000579 52 10            [ 2] 1100 	sub	sp, #16
                                   1101 ;	src\bme280.c: 293: temper_raw = Registers.temperature;
      00057B AEr00r25         [ 2] 1102 	ldw	x, #_Registers+4
      00057E 90 93            [ 1] 1103 	ldw	y, x
      000580 90 EE 02         [ 2] 1104 	ldw	y, (0x2, y)
      000583 FE               [ 2] 1105 	ldw	x, (x)
                                   1106 ;	src\bme280.c: 303: temper_raw >>= 4;
      000584 57               [ 2] 1107 	sraw	x
      000585 90 56            [ 2] 1108 	rrcw	y
      000587 57               [ 2] 1109 	sraw	x
      000588 90 56            [ 2] 1110 	rrcw	y
      00058A 57               [ 2] 1111 	sraw	x
      00058B 90 56            [ 2] 1112 	rrcw	y
      00058D 57               [ 2] 1113 	sraw	x
      00058E 90 56            [ 2] 1114 	rrcw	y
      000590 17 03            [ 2] 1115 	ldw	(0x03, sp), y
      000592 1F 01            [ 2] 1116 	ldw	(0x01, sp), x
                                   1117 ;	src\bme280.c: 312: val1 = ((((temper_raw>>3) - ((int32_t)CalibData.dig_T1<<1))) * ((int32_t)CalibData.dig_T2)) >> 11;
      000594 16 03            [ 2] 1118 	ldw	y, (0x03, sp)
      000596 1E 01            [ 2] 1119 	ldw	x, (0x01, sp)
      000598 57               [ 2] 1120 	sraw	x
      000599 90 56            [ 2] 1121 	rrcw	y
      00059B 57               [ 2] 1122 	sraw	x
      00059C 90 56            [ 2] 1123 	rrcw	y
      00059E 57               [ 2] 1124 	sraw	x
      00059F 90 56            [ 2] 1125 	rrcw	y
      0005A1 1F 05            [ 2] 1126 	ldw	(0x05, sp), x
      0005A3 CEu00u00         [ 2] 1127 	ldw	x, _CalibData+0
      0005A6 0F 0E            [ 1] 1128 	clr	(0x0e, sp)
      0005A8 4F               [ 1] 1129 	clr	a
      0005A9 6B 09            [ 1] 1130 	ld	(0x09, sp), a
      0005AB 7B 0E            [ 1] 1131 	ld	a, (0x0e, sp)
      0005AD 58               [ 2] 1132 	sllw	x
      0005AE 49               [ 1] 1133 	rlc	a
      0005AF 09 09            [ 1] 1134 	rlc	(0x09, sp)
      0005B1 1F 0B            [ 2] 1135 	ldw	(0x0b, sp), x
      0005B3 72 F2 0B         [ 2] 1136 	subw	y, (0x0b, sp)
      0005B6 88               [ 1] 1137 	push	a
      0005B7 7B 07            [ 1] 1138 	ld	a, (0x07, sp)
      0005B9 12 01            [ 1] 1139 	sbc	a, (1, sp)
      0005BB 6B 0F            [ 1] 1140 	ld	(0x0f, sp), a
      0005BD 7B 06            [ 1] 1141 	ld	a, (0x06, sp)
      0005BF 12 0A            [ 1] 1142 	sbc	a, (0x0a, sp)
      0005C1 6B 0E            [ 1] 1143 	ld	(0x0e, sp), a
      0005C3 84               [ 1] 1144 	pop	a
      0005C4 CEu00u02         [ 2] 1145 	ldw	x, _CalibData+2
      0005C7 9E               [ 1] 1146 	ld	a, xh
      0005C8 49               [ 1] 1147 	rlc	a
      0005C9 4F               [ 1] 1148 	clr	a
      0005CA A2 00            [ 1] 1149 	sbc	a, #0x00
      0005CC 6B 0A            [ 1] 1150 	ld	(0x0a, sp), a
      0005CE 6B 09            [ 1] 1151 	ld	(0x09, sp), a
      0005D0 89               [ 2] 1152 	pushw	x
      0005D1 1E 0B            [ 2] 1153 	ldw	x, (0x0b, sp)
      0005D3 89               [ 2] 1154 	pushw	x
      0005D4 90 89            [ 2] 1155 	pushw	y
      0005D6 1E 13            [ 2] 1156 	ldw	x, (0x13, sp)
      0005D8 89               [ 2] 1157 	pushw	x
      0005D9 CDr00r00         [ 4] 1158 	call	__mullong
      0005DC 5B 08            [ 2] 1159 	addw	sp, #8
      0005DE A6 0B            [ 1] 1160 	ld	a, #0x0b
      0005E0                       1161 00103$:
      0005E0 90 57            [ 2] 1162 	sraw	y
      0005E2 56               [ 2] 1163 	rrcw	x
      0005E3 4A               [ 1] 1164 	dec	a
      0005E4 26 FA            [ 1] 1165 	jrne	00103$
      0005E6 1F 0F            [ 2] 1166 	ldw	(0x0f, sp), x
      0005E8 17 0D            [ 2] 1167 	ldw	(0x0d, sp), y
                                   1168 ;	src\bme280.c: 313: val2 = (((((temper_raw>>4) - ((int32_t)CalibData.dig_T1)) * ((temper_raw>>4) - ((int32_t)CalibData.dig_T1)))>>12) * ((int32_t)CalibData.dig_T3)) >> 14;
      0005EA 16 03            [ 2] 1169 	ldw	y, (0x03, sp)
      0005EC 1E 01            [ 2] 1170 	ldw	x, (0x01, sp)
      0005EE 57               [ 2] 1171 	sraw	x
      0005EF 90 56            [ 2] 1172 	rrcw	y
      0005F1 57               [ 2] 1173 	sraw	x
      0005F2 90 56            [ 2] 1174 	rrcw	y
      0005F4 57               [ 2] 1175 	sraw	x
      0005F5 90 56            [ 2] 1176 	rrcw	y
      0005F7 57               [ 2] 1177 	sraw	x
      0005F8 90 56            [ 2] 1178 	rrcw	y
      0005FA 1F 09            [ 2] 1179 	ldw	(0x09, sp), x
      0005FC CEu00u00         [ 2] 1180 	ldw	x, _CalibData+0
      0005FF 1F 07            [ 2] 1181 	ldw	(0x07, sp), x
      000601 5F               [ 1] 1182 	clrw	x
      000602 72 F2 07         [ 2] 1183 	subw	y, (0x07, sp)
      000605 7B 0A            [ 1] 1184 	ld	a, (0x0a, sp)
      000607 89               [ 2] 1185 	pushw	x
      000608 12 02            [ 1] 1186 	sbc	a, (2, sp)
      00060A 85               [ 2] 1187 	popw	x
      00060B 97               [ 1] 1188 	ld	xl, a
      00060C 7B 09            [ 1] 1189 	ld	a, (0x09, sp)
      00060E 89               [ 2] 1190 	pushw	x
      00060F 12 01            [ 1] 1191 	sbc	a, (1, sp)
      000611 85               [ 2] 1192 	popw	x
      000612 95               [ 1] 1193 	ld	xh, a
      000613 90 89            [ 2] 1194 	pushw	y
      000615 89               [ 2] 1195 	pushw	x
      000616 90 89            [ 2] 1196 	pushw	y
      000618 89               [ 2] 1197 	pushw	x
      000619 CDr00r00         [ 4] 1198 	call	__mullong
      00061C 5B 08            [ 2] 1199 	addw	sp, #8
      00061E A6 0C            [ 1] 1200 	ld	a, #0x0c
      000620                       1201 00105$:
      000620 90 57            [ 2] 1202 	sraw	y
      000622 56               [ 2] 1203 	rrcw	x
      000623 4A               [ 1] 1204 	dec	a
      000624 26 FA            [ 1] 1205 	jrne	00105$
      000626 1F 07            [ 2] 1206 	ldw	(0x07, sp), x
      000628 CEu00u04         [ 2] 1207 	ldw	x, _CalibData+4
      00062B 9E               [ 1] 1208 	ld	a, xh
      00062C 49               [ 1] 1209 	rlc	a
      00062D 4F               [ 1] 1210 	clr	a
      00062E A2 00            [ 1] 1211 	sbc	a, #0x00
      000630 6B 0A            [ 1] 1212 	ld	(0x0a, sp), a
      000632 6B 09            [ 1] 1213 	ld	(0x09, sp), a
      000634 89               [ 2] 1214 	pushw	x
      000635 1E 0B            [ 2] 1215 	ldw	x, (0x0b, sp)
      000637 89               [ 2] 1216 	pushw	x
      000638 1E 0B            [ 2] 1217 	ldw	x, (0x0b, sp)
      00063A 89               [ 2] 1218 	pushw	x
      00063B 90 89            [ 2] 1219 	pushw	y
      00063D CDr00r00         [ 4] 1220 	call	__mullong
      000640 5B 08            [ 2] 1221 	addw	sp, #8
      000642 51               [ 1] 1222 	exgw	x, y
      000643 A6 0E            [ 1] 1223 	ld	a, #0x0e
      000645                       1224 00107$:
      000645 57               [ 2] 1225 	sraw	x
      000646 90 56            [ 2] 1226 	rrcw	y
      000648 4A               [ 1] 1227 	dec	a
      000649 26 FA            [ 1] 1228 	jrne	00107$
                                   1229 ;	src\bme280.c: 314: temper_int = val1 + val2;
      00064B 72 F9 0F         [ 2] 1230 	addw	y, (0x0f, sp)
      00064E 9F               [ 1] 1231 	ld	a, xl
      00064F 19 0E            [ 1] 1232 	adc	a, (0x0e, sp)
      000651 02               [ 1] 1233 	rlwa	x
      000652 19 0D            [ 1] 1234 	adc	a, (0x0d, sp)
      000654 95               [ 1] 1235 	ld	xh, a
      000655 90 CFu00u2D      [ 2] 1236 	ldw	_temper_int+2, y
      000659 CFu00u2B         [ 2] 1237 	ldw	_temper_int+0, x
                                   1238 ;	src\bme280.c: 325: temper_float = ((temper_int * 5 + 128) >> 8);
      00065C CEu00u2D         [ 2] 1239 	ldw	x, _temper_int+2
      00065F 89               [ 2] 1240 	pushw	x
      000660 CEu00u2B         [ 2] 1241 	ldw	x, _temper_int+0
      000663 89               [ 2] 1242 	pushw	x
      000664 4B 05            [ 1] 1243 	push	#0x05
      000666 5F               [ 1] 1244 	clrw	x
      000667 89               [ 2] 1245 	pushw	x
      000668 4B 00            [ 1] 1246 	push	#0x00
      00066A CDr00r00         [ 4] 1247 	call	__mullong
      00066D 5B 08            [ 2] 1248 	addw	sp, #8
      00066F 17 0D            [ 2] 1249 	ldw	(0x0d, sp), y
      000671 1C 00 80         [ 2] 1250 	addw	x, #0x0080
      000674 51               [ 1] 1251 	exgw	x, y
      000675 1E 0D            [ 2] 1252 	ldw	x, (0x0d, sp)
      000677 24 01            [ 1] 1253 	jrnc	00109$
      000679 5C               [ 1] 1254 	incw	x
      00067A                       1255 00109$:
      00067A 4F               [ 1] 1256 	clr	a
      00067B 5D               [ 2] 1257 	tnzw	x
      00067C 2A 01            [ 1] 1258 	jrpl	00110$
      00067E 4A               [ 1] 1259 	dec	a
      00067F                       1260 00110$:
      00067F 01               [ 1] 1261 	rrwa	x
      000680 90 01            [ 1] 1262 	rrwa	y
      000682 90 89            [ 2] 1263 	pushw	y
      000684 89               [ 2] 1264 	pushw	x
      000685 CDr00r00         [ 4] 1265 	call	___slong2fs
      000688 5B 04            [ 2] 1266 	addw	sp, #4
                                   1267 ;	src\bme280.c: 326: temper_float /= 100.0f;
      00068A 4B 00            [ 1] 1268 	push	#0x00
      00068C 4B 00            [ 1] 1269 	push	#0x00
      00068E 4B C8            [ 1] 1270 	push	#0xc8
      000690 4B 42            [ 1] 1271 	push	#0x42
      000692 89               [ 2] 1272 	pushw	x
      000693 90 89            [ 2] 1273 	pushw	y
      000695 CDr00r00         [ 4] 1274 	call	___fsdiv
                                   1275 ;	src\bme280.c: 328: return temper_float;
                                   1276 ;	src\bme280.c: 329: }
      000698 5B 10            [ 2] 1277 	addw	sp, #16
      00069A 81               [ 4] 1278 	ret
                                   1279 ;	src\bme280.c: 331: float BME280_ReadPressure(void) {
                                   1280 ;	-----------------------------------------
                                   1281 ;	 function BME280_ReadPressure
                                   1282 ;	-----------------------------------------
      00069B                       1283 _BME280_ReadPressure:
      00069B 52 0C            [ 2] 1284 	sub	sp, #12
                                   1285 ;	src\bme280.c: 340: press_raw = Registers.pressure;
      00069D AEr00r21         [ 2] 1286 	ldw	x, #_Registers+0
      0006A0 90 93            [ 1] 1287 	ldw	y, x
      0006A2 90 EE 02         [ 2] 1288 	ldw	y, (0x2, y)
      0006A5 FE               [ 2] 1289 	ldw	x, (x)
                                   1290 ;	src\bme280.c: 349: press_raw >>= 4;
      0006A6 57               [ 2] 1291 	sraw	x
      0006A7 90 56            [ 2] 1292 	rrcw	y
      0006A9 57               [ 2] 1293 	sraw	x
      0006AA 90 56            [ 2] 1294 	rrcw	y
      0006AC 57               [ 2] 1295 	sraw	x
      0006AD 90 56            [ 2] 1296 	rrcw	y
      0006AF 57               [ 2] 1297 	sraw	x
      0006B0 90 56            [ 2] 1298 	rrcw	y
      0006B2 17 0B            [ 2] 1299 	ldw	(0x0b, sp), y
      0006B4 1F 09            [ 2] 1300 	ldw	(0x09, sp), x
                                   1301 ;	src\bme280.c: 358: val1 = (float)temper_int/2 - 64000.0;
      0006B6 CEu00u2D         [ 2] 1302 	ldw	x, _temper_int+2
      0006B9 89               [ 2] 1303 	pushw	x
      0006BA CEu00u2B         [ 2] 1304 	ldw	x, _temper_int+0
      0006BD 89               [ 2] 1305 	pushw	x
      0006BE CDr00r00         [ 4] 1306 	call	___slong2fs
      0006C1 5B 04            [ 2] 1307 	addw	sp, #4
      0006C3 4B 00            [ 1] 1308 	push	#0x00
      0006C5 4B 00            [ 1] 1309 	push	#0x00
      0006C7 4B 00            [ 1] 1310 	push	#0x00
      0006C9 4B 40            [ 1] 1311 	push	#0x40
      0006CB 89               [ 2] 1312 	pushw	x
      0006CC 90 89            [ 2] 1313 	pushw	y
      0006CE CDr00r00         [ 4] 1314 	call	___fsdiv
      0006D1 4B 00            [ 1] 1315 	push	#0x00
      0006D3 4B 00            [ 1] 1316 	push	#0x00
      0006D5 4B 7A            [ 1] 1317 	push	#0x7a
      0006D7 4B 47            [ 1] 1318 	push	#0x47
      0006D9 89               [ 2] 1319 	pushw	x
      0006DA 90 89            [ 2] 1320 	pushw	y
      0006DC CDr00r00         [ 4] 1321 	call	___fssub
      0006DF 1F 07            [ 2] 1322 	ldw	(0x07, sp), x
      0006E1 17 05            [ 2] 1323 	ldw	(0x05, sp), y
                                   1324 ;	src\bme280.c: 377: val2 = (val1/4.0) + CalibData.dig_P4 * 65536;
      0006E3 5F               [ 1] 1325 	clrw	x
      0006E4 89               [ 2] 1326 	pushw	x
      0006E5 4B 80            [ 1] 1327 	push	#0x80
      0006E7 4B 40            [ 1] 1328 	push	#0x40
      0006E9 1E 0B            [ 2] 1329 	ldw	x, (0x0b, sp)
      0006EB 89               [ 2] 1330 	pushw	x
      0006EC 1E 0B            [ 2] 1331 	ldw	x, (0x0b, sp)
      0006EE 89               [ 2] 1332 	pushw	x
      0006EF CDr00r00         [ 4] 1333 	call	___fsdiv
      0006F2 1F 03            [ 2] 1334 	ldw	(0x03, sp), x
      0006F4 17 01            [ 2] 1335 	ldw	(0x01, sp), y
      0006F6 CEu00u0C         [ 2] 1336 	ldw	x, _CalibData+12
      0006F9 9E               [ 1] 1337 	ld	a, xh
      0006FA 49               [ 1] 1338 	rlc	a
      0006FB 4F               [ 1] 1339 	clr	a
      0006FC A2 00            [ 1] 1340 	sbc	a, #0x00
      0006FE 90 5F            [ 1] 1341 	clrw	y
      000700 90 89            [ 2] 1342 	pushw	y
      000702 89               [ 2] 1343 	pushw	x
      000703 CDr00r00         [ 4] 1344 	call	___slong2fs
      000706 5B 04            [ 2] 1345 	addw	sp, #4
      000708 89               [ 2] 1346 	pushw	x
      000709 90 89            [ 2] 1347 	pushw	y
      00070B 1E 07            [ 2] 1348 	ldw	x, (0x07, sp)
      00070D 89               [ 2] 1349 	pushw	x
      00070E 1E 07            [ 2] 1350 	ldw	x, (0x07, sp)
      000710 89               [ 2] 1351 	pushw	x
      000711 CDr00r00         [ 4] 1352 	call	___fsadd
      000714 1F 03            [ 2] 1353 	ldw	(0x03, sp), x
      000716 17 01            [ 2] 1354 	ldw	(0x01, sp), y
                                   1355 ;	src\bme280.c: 378: val1 = (1 + val1 / 32768) * (float)CalibData.dig_P1;
      000718 5F               [ 1] 1356 	clrw	x
      000719 89               [ 2] 1357 	pushw	x
      00071A 4B 00            [ 1] 1358 	push	#0x00
      00071C 4B 47            [ 1] 1359 	push	#0x47
      00071E 1E 0B            [ 2] 1360 	ldw	x, (0x0b, sp)
      000720 89               [ 2] 1361 	pushw	x
      000721 1E 0B            [ 2] 1362 	ldw	x, (0x0b, sp)
      000723 89               [ 2] 1363 	pushw	x
      000724 CDr00r00         [ 4] 1364 	call	___fsdiv
      000727 4B 00            [ 1] 1365 	push	#0x00
      000729 4B 00            [ 1] 1366 	push	#0x00
      00072B 4B 80            [ 1] 1367 	push	#0x80
      00072D 4B 3F            [ 1] 1368 	push	#0x3f
      00072F 89               [ 2] 1369 	pushw	x
      000730 90 89            [ 2] 1370 	pushw	y
      000732 CDr00r00         [ 4] 1371 	call	___fsadd
      000735 1F 07            [ 2] 1372 	ldw	(0x07, sp), x
      000737 17 05            [ 2] 1373 	ldw	(0x05, sp), y
      000739 CEu00u06         [ 2] 1374 	ldw	x, _CalibData+6
      00073C CDr00r00         [ 4] 1375 	call	___uint2fs
      00073F 89               [ 2] 1376 	pushw	x
      000740 90 89            [ 2] 1377 	pushw	y
      000742 1E 0B            [ 2] 1378 	ldw	x, (0x0b, sp)
      000744 89               [ 2] 1379 	pushw	x
      000745 1E 0B            [ 2] 1380 	ldw	x, (0x0b, sp)
      000747 89               [ 2] 1381 	pushw	x
      000748 CDr00r00         [ 4] 1382 	call	___fsmul
      00074B 1F 07            [ 2] 1383 	ldw	(0x07, sp), x
      00074D 17 05            [ 2] 1384 	ldw	(0x05, sp), y
                                   1385 ;	src\bme280.c: 379: p = 1048576.0 - (float)press_raw;
      00074F 1E 0B            [ 2] 1386 	ldw	x, (0x0b, sp)
      000751 89               [ 2] 1387 	pushw	x
      000752 1E 0B            [ 2] 1388 	ldw	x, (0x0b, sp)
      000754 89               [ 2] 1389 	pushw	x
      000755 CDr00r00         [ 4] 1390 	call	___slong2fs
      000758 5B 04            [ 2] 1391 	addw	sp, #4
      00075A 89               [ 2] 1392 	pushw	x
      00075B 90 89            [ 2] 1393 	pushw	y
      00075D 5F               [ 1] 1394 	clrw	x
      00075E 89               [ 2] 1395 	pushw	x
      00075F 4B 80            [ 1] 1396 	push	#0x80
      000761 4B 49            [ 1] 1397 	push	#0x49
      000763 CDr00r00         [ 4] 1398 	call	___fssub
      000766 1F 0B            [ 2] 1399 	ldw	(0x0b, sp), x
      000768 17 09            [ 2] 1400 	ldw	(0x09, sp), y
                                   1401 ;	src\bme280.c: 380: p = (p -(val2/4096)) * 6250 / val1;
      00076A 5F               [ 1] 1402 	clrw	x
      00076B 89               [ 2] 1403 	pushw	x
      00076C 4B 80            [ 1] 1404 	push	#0x80
      00076E 4B 45            [ 1] 1405 	push	#0x45
      000770 1E 07            [ 2] 1406 	ldw	x, (0x07, sp)
      000772 89               [ 2] 1407 	pushw	x
      000773 1E 07            [ 2] 1408 	ldw	x, (0x07, sp)
      000775 89               [ 2] 1409 	pushw	x
      000776 CDr00r00         [ 4] 1410 	call	___fsdiv
      000779 89               [ 2] 1411 	pushw	x
      00077A 90 89            [ 2] 1412 	pushw	y
      00077C 1E 0F            [ 2] 1413 	ldw	x, (0x0f, sp)
      00077E 89               [ 2] 1414 	pushw	x
      00077F 1E 0F            [ 2] 1415 	ldw	x, (0x0f, sp)
      000781 89               [ 2] 1416 	pushw	x
      000782 CDr00r00         [ 4] 1417 	call	___fssub
      000785 89               [ 2] 1418 	pushw	x
      000786 90 89            [ 2] 1419 	pushw	y
      000788 4B 00            [ 1] 1420 	push	#0x00
      00078A 4B 50            [ 1] 1421 	push	#0x50
      00078C 4B C3            [ 1] 1422 	push	#0xc3
      00078E 4B 45            [ 1] 1423 	push	#0x45
      000790 CDr00r00         [ 4] 1424 	call	___fsmul
      000793 1F 0B            [ 2] 1425 	ldw	(0x0b, sp), x
      000795 1E 07            [ 2] 1426 	ldw	x, (0x07, sp)
      000797 89               [ 2] 1427 	pushw	x
      000798 1E 07            [ 2] 1428 	ldw	x, (0x07, sp)
      00079A 89               [ 2] 1429 	pushw	x
      00079B 1E 0F            [ 2] 1430 	ldw	x, (0x0f, sp)
      00079D 89               [ 2] 1431 	pushw	x
      00079E 90 89            [ 2] 1432 	pushw	y
      0007A0 CDr00r00         [ 4] 1433 	call	___fsdiv
      0007A3 1F 07            [ 2] 1434 	ldw	(0x07, sp), x
      0007A5 17 05            [ 2] 1435 	ldw	(0x05, sp), y
                                   1436 ;	src\bme280.c: 381: val1 = (float)CalibData.dig_P9 * p * p / 2147483648;
      0007A7 CEu00u16         [ 2] 1437 	ldw	x, _CalibData+22
      0007AA CDr00r00         [ 4] 1438 	call	___sint2fs
      0007AD 1F 0B            [ 2] 1439 	ldw	(0x0b, sp), x
      0007AF 1E 07            [ 2] 1440 	ldw	x, (0x07, sp)
      0007B1 89               [ 2] 1441 	pushw	x
      0007B2 1E 07            [ 2] 1442 	ldw	x, (0x07, sp)
      0007B4 89               [ 2] 1443 	pushw	x
      0007B5 1E 0F            [ 2] 1444 	ldw	x, (0x0f, sp)
      0007B7 89               [ 2] 1445 	pushw	x
      0007B8 90 89            [ 2] 1446 	pushw	y
      0007BA CDr00r00         [ 4] 1447 	call	___fsmul
      0007BD 1F 0B            [ 2] 1448 	ldw	(0x0b, sp), x
      0007BF 1E 07            [ 2] 1449 	ldw	x, (0x07, sp)
      0007C1 89               [ 2] 1450 	pushw	x
      0007C2 1E 07            [ 2] 1451 	ldw	x, (0x07, sp)
      0007C4 89               [ 2] 1452 	pushw	x
      0007C5 1E 0F            [ 2] 1453 	ldw	x, (0x0f, sp)
      0007C7 89               [ 2] 1454 	pushw	x
      0007C8 90 89            [ 2] 1455 	pushw	y
      0007CA CDr00r00         [ 4] 1456 	call	___fsmul
      0007CD 4B 00            [ 1] 1457 	push	#0x00
      0007CF 4B 00            [ 1] 1458 	push	#0x00
      0007D1 4B 00            [ 1] 1459 	push	#0x00
      0007D3 4B 4F            [ 1] 1460 	push	#0x4f
      0007D5 89               [ 2] 1461 	pushw	x
      0007D6 90 89            [ 2] 1462 	pushw	y
      0007D8 CDr00r00         [ 4] 1463 	call	___fsdiv
      0007DB 1F 0B            [ 2] 1464 	ldw	(0x0b, sp), x
      0007DD 17 09            [ 2] 1465 	ldw	(0x09, sp), y
                                   1466 ;	src\bme280.c: 382: val2 = p * (float)CalibData.dig_P8 / 32768.0;
      0007DF CEu00u14         [ 2] 1467 	ldw	x, _CalibData+20
      0007E2 CDr00r00         [ 4] 1468 	call	___sint2fs
      0007E5 89               [ 2] 1469 	pushw	x
      0007E6 90 89            [ 2] 1470 	pushw	y
      0007E8 1E 0B            [ 2] 1471 	ldw	x, (0x0b, sp)
      0007EA 89               [ 2] 1472 	pushw	x
      0007EB 1E 0B            [ 2] 1473 	ldw	x, (0x0b, sp)
      0007ED 89               [ 2] 1474 	pushw	x
      0007EE CDr00r00         [ 4] 1475 	call	___fsmul
      0007F1 4B 00            [ 1] 1476 	push	#0x00
      0007F3 4B 00            [ 1] 1477 	push	#0x00
      0007F5 4B 00            [ 1] 1478 	push	#0x00
      0007F7 4B 47            [ 1] 1479 	push	#0x47
      0007F9 89               [ 2] 1480 	pushw	x
      0007FA 90 89            [ 2] 1481 	pushw	y
      0007FC CDr00r00         [ 4] 1482 	call	___fsdiv
                                   1483 ;	src\bme280.c: 383: p = p + (val1 + val2 + (float)CalibData.dig_P7)/16.0;
      0007FF 89               [ 2] 1484 	pushw	x
      000800 90 89            [ 2] 1485 	pushw	y
      000802 1E 0F            [ 2] 1486 	ldw	x, (0x0f, sp)
      000804 89               [ 2] 1487 	pushw	x
      000805 1E 0F            [ 2] 1488 	ldw	x, (0x0f, sp)
      000807 89               [ 2] 1489 	pushw	x
      000808 CDr00r00         [ 4] 1490 	call	___fsadd
      00080B 1F 0B            [ 2] 1491 	ldw	(0x0b, sp), x
      00080D 17 09            [ 2] 1492 	ldw	(0x09, sp), y
      00080F CEu00u12         [ 2] 1493 	ldw	x, _CalibData+18
      000812 CDr00r00         [ 4] 1494 	call	___sint2fs
      000815 89               [ 2] 1495 	pushw	x
      000816 90 89            [ 2] 1496 	pushw	y
      000818 1E 0F            [ 2] 1497 	ldw	x, (0x0f, sp)
      00081A 89               [ 2] 1498 	pushw	x
      00081B 1E 0F            [ 2] 1499 	ldw	x, (0x0f, sp)
      00081D 89               [ 2] 1500 	pushw	x
      00081E CDr00r00         [ 4] 1501 	call	___fsadd
      000821 4B 00            [ 1] 1502 	push	#0x00
      000823 4B 00            [ 1] 1503 	push	#0x00
      000825 4B 80            [ 1] 1504 	push	#0x80
      000827 4B 41            [ 1] 1505 	push	#0x41
      000829 89               [ 2] 1506 	pushw	x
      00082A 90 89            [ 2] 1507 	pushw	y
      00082C CDr00r00         [ 4] 1508 	call	___fsdiv
      00082F 89               [ 2] 1509 	pushw	x
      000830 90 89            [ 2] 1510 	pushw	y
      000832 1E 0B            [ 2] 1511 	ldw	x, (0x0b, sp)
      000834 89               [ 2] 1512 	pushw	x
      000835 1E 0B            [ 2] 1513 	ldw	x, (0x0b, sp)
      000837 89               [ 2] 1514 	pushw	x
      000838 CDr00r00         [ 4] 1515 	call	___fsadd
                                   1516 ;	src\bme280.c: 407: return p;
                                   1517 ;	src\bme280.c: 408: }
      00083B 5B 0C            [ 2] 1518 	addw	sp, #12
      00083D 81               [ 4] 1519 	ret
                                   1520 ;	src\bme280.c: 410: float BME280_ReadHumidity(void) {
                                   1521 ;	-----------------------------------------
                                   1522 ;	 function BME280_ReadHumidity
                                   1523 ;	-----------------------------------------
      00083E                       1524 _BME280_ReadHumidity:
      00083E 52 10            [ 2] 1525 	sub	sp, #16
                                   1526 ;	src\bme280.c: 416: hum_raw = Registers.humidity;
      000840 90 CEu00u29      [ 2] 1527 	ldw	y, _Registers+8
                                   1528 ;	src\bme280.c: 422: hum_raw_sign = ((int32_t)hum_raw)&0x0000FFFF;
      000844 5F               [ 1] 1529 	clrw	x
      000845 90 5D            [ 2] 1530 	tnzw	y
      000847 2A 01            [ 1] 1531 	jrpl	00117$
      000849 5A               [ 2] 1532 	decw	x
      00084A                       1533 00117$:
      00084A 5F               [ 1] 1534 	clrw	x
                                   1535 ;	src\bme280.c: 423: v_x1_u32r = (temper_int - ((int32_t)76800));
      00084B C6u00u2E         [ 1] 1536 	ld	a, _temper_int+3
      00084E 6B 04            [ 1] 1537 	ld	(0x04, sp), a
      000850 C6u00u2D         [ 1] 1538 	ld	a, _temper_int+2
      000853 A0 2C            [ 1] 1539 	sub	a, #0x2c
      000855 6B 03            [ 1] 1540 	ld	(0x03, sp), a
      000857 C6u00u2C         [ 1] 1541 	ld	a, _temper_int+1
      00085A A2 01            [ 1] 1542 	sbc	a, #0x01
      00085C 6B 02            [ 1] 1543 	ld	(0x02, sp), a
      00085E C6u00u2B         [ 1] 1544 	ld	a, _temper_int+0
      000861 A2 00            [ 1] 1545 	sbc	a, #0x00
                                   1546 ;	src\bme280.c: 424: v_x1_u32r = (((((hum_raw_sign << 14) - (((int32_t)CalibData.dig_H4) << 20) - \
      000863 88               [ 1] 1547 	push	a
      000864 A6 0E            [ 1] 1548 	ld	a, #0x0e
      000866                       1549 00118$:
      000866 90 58            [ 2] 1550 	sllw	y
      000868 59               [ 2] 1551 	rlcw	x
      000869 4A               [ 1] 1552 	dec	a
      00086A 26 FA            [ 1] 1553 	jrne	00118$
      00086C 1F 0A            [ 2] 1554 	ldw	(0x0a, sp), x
      00086E 84               [ 1] 1555 	pop	a
      00086F CEu00u1C         [ 2] 1556 	ldw	x, _CalibData+28
      000872 1F 07            [ 2] 1557 	ldw	(0x07, sp), x
      000874 5F               [ 1] 1558 	clrw	x
      000875 0D 07            [ 1] 1559 	tnz	(0x07, sp)
      000877 2A 01            [ 1] 1560 	jrpl	00120$
      000879 5A               [ 2] 1561 	decw	x
      00087A                       1562 00120$:
      00087A 88               [ 1] 1563 	push	a
      00087B 1E 08            [ 2] 1564 	ldw	x, (0x08, sp)
      00087D 0F 11            [ 1] 1565 	clr	(0x11, sp)
      00087F 0F 10            [ 1] 1566 	clr	(0x10, sp)
      000881 A6 04            [ 1] 1567 	ld	a, #0x04
      000883                       1568 00121$:
      000883 58               [ 2] 1569 	sllw	x
      000884 4A               [ 1] 1570 	dec	a
      000885 26 FC            [ 1] 1571 	jrne	00121$
      000887 84               [ 1] 1572 	pop	a
      000888 72 F2 0F         [ 2] 1573 	subw	y, (0x0f, sp)
      00088B 17 07            [ 2] 1574 	ldw	(0x07, sp), y
      00088D 88               [ 1] 1575 	push	a
      00088E 7B 0B            [ 1] 1576 	ld	a, (0x0b, sp)
      000890 89               [ 2] 1577 	pushw	x
      000891 12 02            [ 1] 1578 	sbc	a, (2, sp)
      000893 85               [ 2] 1579 	popw	x
      000894 6B 07            [ 1] 1580 	ld	(0x07, sp), a
      000896 7B 0A            [ 1] 1581 	ld	a, (0x0a, sp)
      000898 89               [ 2] 1582 	pushw	x
      000899 12 01            [ 1] 1583 	sbc	a, (1, sp)
      00089B 85               [ 2] 1584 	popw	x
      00089C 6B 06            [ 1] 1585 	ld	(0x06, sp), a
      00089E 84               [ 1] 1586 	pop	a
      00089F CEu00u1E         [ 2] 1587 	ldw	x, _CalibData+30
      0008A2 1F 0F            [ 2] 1588 	ldw	(0x0f, sp), x
      0008A4 5F               [ 1] 1589 	clrw	x
      0008A5 0D 0F            [ 1] 1590 	tnz	(0x0f, sp)
      0008A7 2A 01            [ 1] 1591 	jrpl	00123$
      0008A9 5A               [ 2] 1592 	decw	x
      0008AA                       1593 00123$:
      0008AA 88               [ 1] 1594 	push	a
      0008AB 16 04            [ 2] 1595 	ldw	y, (0x04, sp)
      0008AD 90 89            [ 2] 1596 	pushw	y
      0008AF 61               [ 1] 1597 	exg	a, yl
      0008B0 7B 05            [ 1] 1598 	ld	a, (0x05, sp)
      0008B2 61               [ 1] 1599 	exg	a, yl
      0008B3 90 89            [ 2] 1600 	pushw	y
      0008B5 5B 01            [ 2] 1601 	addw	sp, #1
      0008B7 88               [ 1] 1602 	push	a
      0008B8 16 14            [ 2] 1603 	ldw	y, (0x14, sp)
      0008BA 90 89            [ 2] 1604 	pushw	y
      0008BC 89               [ 2] 1605 	pushw	x
      0008BD CDr00r00         [ 4] 1606 	call	__mullong
      0008C0 5B 08            [ 2] 1607 	addw	sp, #8
      0008C2 1F 0C            [ 2] 1608 	ldw	(0x0c, sp), x
      0008C4 17 0A            [ 2] 1609 	ldw	(0x0a, sp), y
      0008C6 84               [ 1] 1610 	pop	a
      0008C7 1E 07            [ 2] 1611 	ldw	x, (0x07, sp)
      0008C9 72 F0 0B         [ 2] 1612 	subw	x, (0x0b, sp)
      0008CC 88               [ 1] 1613 	push	a
      0008CD 7B 07            [ 1] 1614 	ld	a, (0x07, sp)
      0008CF 12 0B            [ 1] 1615 	sbc	a, (0x0b, sp)
      0008D1 6B 0F            [ 1] 1616 	ld	(0x0f, sp), a
      0008D3 7B 06            [ 1] 1617 	ld	a, (0x06, sp)
      0008D5 12 0A            [ 1] 1618 	sbc	a, (0x0a, sp)
      0008D7 6B 0E            [ 1] 1619 	ld	(0x0e, sp), a
      0008D9 84               [ 1] 1620 	pop	a
      0008DA 1C 40 00         [ 2] 1621 	addw	x, #0x4000
      0008DD 16 0D            [ 2] 1622 	ldw	y, (0x0d, sp)
      0008DF 24 02            [ 1] 1623 	jrnc	00124$
      0008E1 90 5C            [ 1] 1624 	incw	y
      0008E3                       1625 00124$:
      0008E3 88               [ 1] 1626 	push	a
      0008E4 A6 0F            [ 1] 1627 	ld	a, #0x0f
      0008E6                       1628 00125$:
      0008E6 90 57            [ 2] 1629 	sraw	y
      0008E8 56               [ 2] 1630 	rrcw	x
      0008E9 4A               [ 1] 1631 	dec	a
      0008EA 26 FA            [ 1] 1632 	jrne	00125$
      0008EC 1F 08            [ 2] 1633 	ldw	(0x08, sp), x
      0008EE 17 06            [ 2] 1634 	ldw	(0x06, sp), y
      0008F0 84               [ 1] 1635 	pop	a
      0008F1 AEr00r00         [ 2] 1636 	ldw	x, #(_CalibData+0)
      0008F4 88               [ 1] 1637 	push	a
      0008F5 E6 20            [ 1] 1638 	ld	a, (0x20, x)
      0008F7 97               [ 1] 1639 	ld	xl, a
      0008F8 49               [ 1] 1640 	rlc	a
      0008F9 4F               [ 1] 1641 	clr	a
      0008FA A2 00            [ 1] 1642 	sbc	a, #0x00
      0008FC 95               [ 1] 1643 	ld	xh, a
      0008FD 6B 0F            [ 1] 1644 	ld	(0x0f, sp), a
      0008FF 6B 0E            [ 1] 1645 	ld	(0x0e, sp), a
      000901 84               [ 1] 1646 	pop	a
      000902 88               [ 1] 1647 	push	a
      000903 89               [ 2] 1648 	pushw	x
      000904 1E 10            [ 2] 1649 	ldw	x, (0x10, sp)
      000906 89               [ 2] 1650 	pushw	x
      000907 1E 08            [ 2] 1651 	ldw	x, (0x08, sp)
      000909 89               [ 2] 1652 	pushw	x
      00090A 41               [ 1] 1653 	exg	a, xl
      00090B 7B 09            [ 1] 1654 	ld	a, (0x09, sp)
      00090D 41               [ 1] 1655 	exg	a, xl
      00090E 89               [ 2] 1656 	pushw	x
      00090F 5B 01            [ 2] 1657 	addw	sp, #1
      000911 88               [ 1] 1658 	push	a
      000912 CDr00r00         [ 4] 1659 	call	__mullong
      000915 5B 08            [ 2] 1660 	addw	sp, #8
      000917 4F               [ 1] 1661 	clr	a
      000918 90 5D            [ 2] 1662 	tnzw	y
      00091A 2A 01            [ 1] 1663 	jrpl	00127$
      00091C 4A               [ 1] 1664 	dec	a
      00091D                       1665 00127$:
      00091D 90 01            [ 1] 1666 	rrwa	y
      00091F 01               [ 1] 1667 	rrwa	x
      000920 84               [ 1] 1668 	pop	a
      000921 90 57            [ 2] 1669 	sraw	y
      000923 56               [ 2] 1670 	rrcw	x
      000924 90 57            [ 2] 1671 	sraw	y
      000926 56               [ 2] 1672 	rrcw	x
      000927 1F 0B            [ 2] 1673 	ldw	(0x0b, sp), x
      000929 17 09            [ 2] 1674 	ldw	(0x09, sp), y
      00092B AEr00r00         [ 2] 1675 	ldw	x, #(_CalibData+0)
      00092E 88               [ 1] 1676 	push	a
      00092F E6 1B            [ 1] 1677 	ld	a, (0x1b, x)
      000931 97               [ 1] 1678 	ld	xl, a
      000932 84               [ 1] 1679 	pop	a
      000933 02               [ 1] 1680 	rlwa	x
      000934 4F               [ 1] 1681 	clr	a
      000935 01               [ 1] 1682 	rrwa	x
      000936 0F 0E            [ 1] 1683 	clr	(0x0e, sp)
      000938 0F 0D            [ 1] 1684 	clr	(0x0d, sp)
      00093A 89               [ 2] 1685 	pushw	x
      00093B 1E 0F            [ 2] 1686 	ldw	x, (0x0f, sp)
      00093D 89               [ 2] 1687 	pushw	x
      00093E 1E 07            [ 2] 1688 	ldw	x, (0x07, sp)
      000940 89               [ 2] 1689 	pushw	x
      000941 41               [ 1] 1690 	exg	a, xl
      000942 7B 08            [ 1] 1691 	ld	a, (0x08, sp)
      000944 41               [ 1] 1692 	exg	a, xl
      000945 89               [ 2] 1693 	pushw	x
      000946 5B 01            [ 2] 1694 	addw	sp, #1
      000948 88               [ 1] 1695 	push	a
      000949 CDr00r00         [ 4] 1696 	call	__mullong
      00094C 5B 08            [ 2] 1697 	addw	sp, #8
      00094E A6 0B            [ 1] 1698 	ld	a, #0x0b
      000950                       1699 00128$:
      000950 90 57            [ 2] 1700 	sraw	y
      000952 56               [ 2] 1701 	rrcw	x
      000953 4A               [ 1] 1702 	dec	a
      000954 26 FA            [ 1] 1703 	jrne	00128$
      000956 17 0D            [ 2] 1704 	ldw	(0x0d, sp), y
      000958 1C 80 00         [ 2] 1705 	addw	x, #0x8000
      00095B 16 0D            [ 2] 1706 	ldw	y, (0x0d, sp)
      00095D 24 02            [ 1] 1707 	jrnc	00130$
      00095F 90 5C            [ 1] 1708 	incw	y
      000961                       1709 00130$:
      000961 89               [ 2] 1710 	pushw	x
      000962 90 89            [ 2] 1711 	pushw	y
      000964 1E 0F            [ 2] 1712 	ldw	x, (0x0f, sp)
      000966 89               [ 2] 1713 	pushw	x
      000967 1E 0F            [ 2] 1714 	ldw	x, (0x0f, sp)
      000969 89               [ 2] 1715 	pushw	x
      00096A CDr00r00         [ 4] 1716 	call	__mullong
      00096D 5B 08            [ 2] 1717 	addw	sp, #8
      00096F 51               [ 1] 1718 	exgw	x, y
      000970 4F               [ 1] 1719 	clr	a
      000971 5D               [ 2] 1720 	tnzw	x
      000972 2A 01            [ 1] 1721 	jrpl	00131$
      000974 4A               [ 1] 1722 	dec	a
      000975                       1723 00131$:
      000975 01               [ 1] 1724 	rrwa	x
      000976 90 01            [ 1] 1725 	rrwa	y
      000978 57               [ 2] 1726 	sraw	x
      000979 90 56            [ 2] 1727 	rrcw	y
      00097B 57               [ 2] 1728 	sraw	x
      00097C 90 56            [ 2] 1729 	rrcw	y
      00097E 1C 00 20         [ 2] 1730 	addw	x, #0x0020
      000981 1F 09            [ 2] 1731 	ldw	(0x09, sp), x
      000983 CEu00u19         [ 2] 1732 	ldw	x, _CalibData+25
      000986 9E               [ 1] 1733 	ld	a, xh
      000987 49               [ 1] 1734 	rlc	a
      000988 4F               [ 1] 1735 	clr	a
      000989 A2 00            [ 1] 1736 	sbc	a, #0x00
      00098B 6B 0E            [ 1] 1737 	ld	(0x0e, sp), a
      00098D 6B 0D            [ 1] 1738 	ld	(0x0d, sp), a
      00098F 89               [ 2] 1739 	pushw	x
      000990 1E 0F            [ 2] 1740 	ldw	x, (0x0f, sp)
      000992 89               [ 2] 1741 	pushw	x
      000993 90 89            [ 2] 1742 	pushw	y
      000995 1E 0F            [ 2] 1743 	ldw	x, (0x0f, sp)
      000997 89               [ 2] 1744 	pushw	x
      000998 CDr00r00         [ 4] 1745 	call	__mullong
      00099B 5B 08            [ 2] 1746 	addw	sp, #8
      00099D 17 0D            [ 2] 1747 	ldw	(0x0d, sp), y
      00099F 1C 20 00         [ 2] 1748 	addw	x, #0x2000
      0009A2 16 0D            [ 2] 1749 	ldw	y, (0x0d, sp)
      0009A4 24 02            [ 1] 1750 	jrnc	00132$
      0009A6 90 5C            [ 1] 1751 	incw	y
      0009A8                       1752 00132$:
      0009A8 A6 0E            [ 1] 1753 	ld	a, #0x0e
      0009AA                       1754 00133$:
      0009AA 90 57            [ 2] 1755 	sraw	y
      0009AC 56               [ 2] 1756 	rrcw	x
      0009AD 4A               [ 1] 1757 	dec	a
      0009AE 26 FA            [ 1] 1758 	jrne	00133$
      0009B0 89               [ 2] 1759 	pushw	x
      0009B1 90 89            [ 2] 1760 	pushw	y
      0009B3 1E 0B            [ 2] 1761 	ldw	x, (0x0b, sp)
      0009B5 89               [ 2] 1762 	pushw	x
      0009B6 1E 0B            [ 2] 1763 	ldw	x, (0x0b, sp)
      0009B8 89               [ 2] 1764 	pushw	x
      0009B9 CDr00r00         [ 4] 1765 	call	__mullong
      0009BC 5B 08            [ 2] 1766 	addw	sp, #8
      0009BE 1F 0B            [ 2] 1767 	ldw	(0x0b, sp), x
                                   1768 ;	src\bme280.c: 429: v_x1_u32r = (v_x1_u32r - (((((v_x1_u32r >> 15) * (v_x1_u32r >> 15)) >> 7) * \
      0009C0 17 0D            [ 2] 1769 	ldw	(0x0d, sp), y
      0009C2 1E 0B            [ 2] 1770 	ldw	x, (0x0b, sp)
      0009C4 A6 0F            [ 1] 1771 	ld	a, #0x0f
      0009C6                       1772 00135$:
      0009C6 07 0D            [ 1] 1773 	sra	(0x0d, sp)
      0009C8 06 0E            [ 1] 1774 	rrc	(0x0e, sp)
      0009CA 56               [ 2] 1775 	rrcw	x
      0009CB 4A               [ 1] 1776 	dec	a
      0009CC 26 F8            [ 1] 1777 	jrne	00135$
      0009CE 90 89            [ 2] 1778 	pushw	y
      0009D0 89               [ 2] 1779 	pushw	x
      0009D1 7B 12            [ 1] 1780 	ld	a, (0x12, sp)
      0009D3 88               [ 1] 1781 	push	a
      0009D4 7B 12            [ 1] 1782 	ld	a, (0x12, sp)
      0009D6 88               [ 1] 1783 	push	a
      0009D7 89               [ 2] 1784 	pushw	x
      0009D8 1E 15            [ 2] 1785 	ldw	x, (0x15, sp)
      0009DA 89               [ 2] 1786 	pushw	x
      0009DB CDr00r00         [ 4] 1787 	call	__mullong
      0009DE 5B 08            [ 2] 1788 	addw	sp, #8
      0009E0 61               [ 1] 1789 	exg	a, yl
      0009E1 6B 10            [ 1] 1790 	ld	(0x10, sp), a
      0009E3 61               [ 1] 1791 	exg	a, yl
      0009E4 90 9E            [ 1] 1792 	ld	a, yh
      0009E6 90 85            [ 2] 1793 	popw	y
      0009E8 88               [ 1] 1794 	push	a
      0009E9 7B 0F            [ 1] 1795 	ld	a, (0x0f, sp)
      0009EB 6B 07            [ 1] 1796 	ld	(0x07, sp), a
      0009ED 84               [ 1] 1797 	pop	a
      0009EE 47               [ 1] 1798 	sra	a
      0009EF 06 06            [ 1] 1799 	rrc	(0x06, sp)
      0009F1 56               [ 2] 1800 	rrcw	x
      0009F2 47               [ 1] 1801 	sra	a
      0009F3 06 06            [ 1] 1802 	rrc	(0x06, sp)
      0009F5 56               [ 2] 1803 	rrcw	x
      0009F6 47               [ 1] 1804 	sra	a
      0009F7 06 06            [ 1] 1805 	rrc	(0x06, sp)
      0009F9 56               [ 2] 1806 	rrcw	x
      0009FA 47               [ 1] 1807 	sra	a
      0009FB 06 06            [ 1] 1808 	rrc	(0x06, sp)
      0009FD 56               [ 2] 1809 	rrcw	x
      0009FE 47               [ 1] 1810 	sra	a
      0009FF 06 06            [ 1] 1811 	rrc	(0x06, sp)
      000A01 56               [ 2] 1812 	rrcw	x
      000A02 47               [ 1] 1813 	sra	a
      000A03 06 06            [ 1] 1814 	rrc	(0x06, sp)
      000A05 56               [ 2] 1815 	rrcw	x
      000A06 47               [ 1] 1816 	sra	a
      000A07 06 06            [ 1] 1817 	rrc	(0x06, sp)
      000A09 56               [ 2] 1818 	rrcw	x
      000A0A 1F 07            [ 2] 1819 	ldw	(0x07, sp), x
      000A0C 6B 05            [ 1] 1820 	ld	(0x05, sp), a
      000A0E C6u00u18         [ 1] 1821 	ld	a, _CalibData+24
      000A11 5F               [ 1] 1822 	clrw	x
      000A12 1F 0D            [ 2] 1823 	ldw	(0x0d, sp), x
      000A14 90 89            [ 2] 1824 	pushw	y
      000A16 88               [ 1] 1825 	push	a
      000A17 9E               [ 1] 1826 	ld	a, xh
      000A18 88               [ 1] 1827 	push	a
      000A19 1E 11            [ 2] 1828 	ldw	x, (0x11, sp)
      000A1B 89               [ 2] 1829 	pushw	x
      000A1C 1E 0D            [ 2] 1830 	ldw	x, (0x0d, sp)
      000A1E 89               [ 2] 1831 	pushw	x
      000A1F 1E 0D            [ 2] 1832 	ldw	x, (0x0d, sp)
      000A21 89               [ 2] 1833 	pushw	x
      000A22 CDr00r00         [ 4] 1834 	call	__mullong
      000A25 5B 08            [ 2] 1835 	addw	sp, #8
      000A27 17 0F            [ 2] 1836 	ldw	(0x0f, sp), y
      000A29 90 85            [ 2] 1837 	popw	y
      000A2B 7B 0E            [ 1] 1838 	ld	a, (0x0e, sp)
      000A2D 07 0D            [ 1] 1839 	sra	(0x0d, sp)
      000A2F 46               [ 1] 1840 	rrc	a
      000A30 56               [ 2] 1841 	rrcw	x
      000A31 07 0D            [ 1] 1842 	sra	(0x0d, sp)
      000A33 46               [ 1] 1843 	rrc	a
      000A34 56               [ 2] 1844 	rrcw	x
      000A35 07 0D            [ 1] 1845 	sra	(0x0d, sp)
      000A37 46               [ 1] 1846 	rrc	a
      000A38 56               [ 2] 1847 	rrcw	x
      000A39 07 0D            [ 1] 1848 	sra	(0x0d, sp)
      000A3B 46               [ 1] 1849 	rrc	a
      000A3C 56               [ 2] 1850 	rrcw	x
      000A3D 1F 0F            [ 2] 1851 	ldw	(0x0f, sp), x
      000A3F 1E 0B            [ 2] 1852 	ldw	x, (0x0b, sp)
      000A41 72 F0 0F         [ 2] 1853 	subw	x, (0x0f, sp)
      000A44 88               [ 1] 1854 	push	a
      000A45 90 9F            [ 1] 1855 	ld	a, yl
      000A47 12 01            [ 1] 1856 	sbc	a, (1, sp)
      000A49 90 02            [ 1] 1857 	rlwa	y
      000A4B 12 0E            [ 1] 1858 	sbc	a, (0x0e, sp)
      000A4D 90 95            [ 1] 1859 	ld	yh, a
      000A4F 84               [ 1] 1860 	pop	a
      000A50 1F 0F            [ 2] 1861 	ldw	(0x0f, sp), x
      000A52 17 0D            [ 2] 1862 	ldw	(0x0d, sp), y
                                   1863 ;	src\bme280.c: 431: v_x1_u32r = (v_x1_u32r < 0) ? 0 : v_x1_u32r;
      000A54 0D 0D            [ 1] 1864 	tnz	(0x0d, sp)
      000A56 2A 05            [ 1] 1865 	jrpl	00103$
      000A58 5F               [ 1] 1866 	clrw	x
      000A59 1F 0F            [ 2] 1867 	ldw	(0x0f, sp), x
      000A5B 1F 0D            [ 2] 1868 	ldw	(0x0d, sp), x
      000A5D                       1869 00103$:
                                   1870 ;	src\bme280.c: 432: v_x1_u32r = (v_x1_u32r > 419430400) ? 419430400 : v_x1_u32r;
      000A5D 5F               [ 1] 1871 	clrw	x
      000A5E 13 0F            [ 2] 1872 	cpw	x, (0x0f, sp)
      000A60 4F               [ 1] 1873 	clr	a
      000A61 12 0E            [ 1] 1874 	sbc	a, (0x0e, sp)
      000A63 A6 19            [ 1] 1875 	ld	a, #0x19
      000A65 12 0D            [ 1] 1876 	sbc	a, (0x0d, sp)
      000A67 2E 07            [ 1] 1877 	jrsge	00105$
      000A69 5F               [ 1] 1878 	clrw	x
      000A6A 1F 0F            [ 2] 1879 	ldw	(0x0f, sp), x
      000A6C AE 19 00         [ 2] 1880 	ldw	x, #0x1900
      000A6F C5                    1881 	.byte 0xc5
      000A70                       1882 00105$:
      000A70 1E 0D            [ 2] 1883 	ldw	x, (0x0d, sp)
      000A72                       1884 00106$:
      000A72 16 0F            [ 2] 1885 	ldw	y, (0x0f, sp)
                                   1886 ;	src\bme280.c: 433: hum_float = (uint32_t)(v_x1_u32r >> 12);
      000A74 A6 0C            [ 1] 1887 	ld	a, #0x0c
      000A76                       1888 00139$:
      000A76 57               [ 2] 1889 	sraw	x
      000A77 90 56            [ 2] 1890 	rrcw	y
      000A79 4A               [ 1] 1891 	dec	a
      000A7A 26 FA            [ 1] 1892 	jrne	00139$
      000A7C 90 89            [ 2] 1893 	pushw	y
      000A7E 89               [ 2] 1894 	pushw	x
      000A7F CDr00r00         [ 4] 1895 	call	___ulong2fs
      000A82 5B 04            [ 2] 1896 	addw	sp, #4
                                   1897 ;	src\bme280.c: 434: hum_float /= 1024.0f;
      000A84 4B 00            [ 1] 1898 	push	#0x00
      000A86 4B 00            [ 1] 1899 	push	#0x00
      000A88 4B 80            [ 1] 1900 	push	#0x80
      000A8A 4B 44            [ 1] 1901 	push	#0x44
      000A8C 89               [ 2] 1902 	pushw	x
      000A8D 90 89            [ 2] 1903 	pushw	y
      000A8F CDr00r00         [ 4] 1904 	call	___fsdiv
                                   1905 ;	src\bme280.c: 435: return hum_float;
                                   1906 ;	src\bme280.c: 436: }
      000A92 5B 10            [ 2] 1907 	addw	sp, #16
      000A94 81               [ 4] 1908 	ret
                                   1909 ;	src\bme280.c: 438: float BME280_ReadAltitude(float seaLevel) {
                                   1910 ;	-----------------------------------------
                                   1911 ;	 function BME280_ReadAltitude
                                   1912 ;	-----------------------------------------
      000A95                       1913 _BME280_ReadAltitude:
                                   1914 ;	src\bme280.c: 440: float atm = BME280_ReadPressure();
      000A95 CDr06r9B         [ 4] 1915 	call	_BME280_ReadPressure
                                   1916 ;	src\bme280.c: 442: return att;
      000A98 5F               [ 1] 1917 	clrw	x
      000A99 90 5F            [ 1] 1918 	clrw	y
                                   1919 ;	src\bme280.c: 443: }
      000A9B 89               [ 2] 1920 	pushw	x
      000A9C 1E 03            [ 2] 1921 	ldw	x, (3, sp)
      000A9E 1F 07            [ 2] 1922 	ldw	(7, sp), x
      000AA0 85               [ 2] 1923 	popw	x
      000AA1 5B 04            [ 2] 1924 	addw	sp, #4
      000AA3 81               [ 4] 1925 	ret
                                   1926 	.area CODE
                                   1927 	.area CONST
                                   1928 	.area INITIALIZER
                                   1929 	.area CABS (ABS)
