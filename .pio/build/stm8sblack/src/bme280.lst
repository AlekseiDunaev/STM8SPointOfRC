                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module bme280
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_Read_Bytes
                                     12 	.globl _I2C_Read_Byte
                                     13 	.globl _I2C_Send_Bytes
                                     14 	.globl _GPIO_WriteLow
                                     15 	.globl _GPIO_WriteHigh
                                     16 	.globl _temper_int
                                     17 	.globl _CalibData
                                     18 	.globl _Error
                                     19 	.globl _BME280_Setup
                                     20 	.globl _BME280_WriteReg
                                     21 	.globl _BME280_ReadReg
                                     22 	.globl _BME280_ReadReg_U16
                                     23 	.globl _BME280_ReadReg_LE_U16
                                     24 	.globl _BME280_ReadReg_U24
                                     25 	.globl _BME280_ReadReg_S16
                                     26 	.globl _BME280_ReadReg_LE_S16
                                     27 	.globl _BME280_ReadStatus
                                     28 	.globl _BME280_ReadCoefficients
                                     29 	.globl _BME280_SetStandby
                                     30 	.globl _BME280_SetFilter
                                     31 	.globl _BME280_SetOversamplingTemper
                                     32 	.globl _BME280_SetOversamplingPressure
                                     33 	.globl _BME280_SetOversamplingHum
                                     34 	.globl _BME280_SetMode
                                     35 	.globl _BME280_ReadTemperature
                                     36 	.globl _BME280_ReadHumidity
                                     37 ;--------------------------------------------------------
                                     38 ; ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DATA
      000000                         41 _CalibData::
      000000                         42 	.ds 33
      000021                         43 _temper_int::
      000021                         44 	.ds 4
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area INITIALIZED
                                     49 ;--------------------------------------------------------
                                     50 ; absolute external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area DABS (ABS)
                                     53 
                                     54 ; default segment ordering for linker
                                     55 	.area HOME
                                     56 	.area GSINIT
                                     57 	.area GSFINAL
                                     58 	.area CONST
                                     59 	.area INITIALIZER
                                     60 	.area CODE
                                     61 
                                     62 ;--------------------------------------------------------
                                     63 ; global & static initialisations
                                     64 ;--------------------------------------------------------
                                     65 	.area HOME
                                     66 	.area GSINIT
                                     67 	.area GSFINAL
                                     68 	.area GSINIT
                                     69 ;--------------------------------------------------------
                                     70 ; Home
                                     71 ;--------------------------------------------------------
                                     72 	.area HOME
                                     73 	.area HOME
                                     74 ;--------------------------------------------------------
                                     75 ; code
                                     76 ;--------------------------------------------------------
                                     77 	.area CODE
                                     78 ;	src\bme280.c: 15: void Error(void) {
                                     79 ;	-----------------------------------------
                                     80 ;	 function Error
                                     81 ;	-----------------------------------------
      000000                         82 _Error:
                                     83 ;	src\bme280.c: 16: LED_OFF;
      000000 A6 20            [ 1]   84 	ld	a, #0x20
      000002 AE 50 14         [ 2]   85 	ldw	x, #0x5014
                                     86 ;	src\bme280.c: 17: }
      000005 CCr00r00         [ 2]   87 	jp	_GPIO_WriteHigh
                                     88 ;	src\bme280.c: 19: void BME280_Setup(void) {
                                     89 ;	-----------------------------------------
                                     90 ;	 function BME280_Setup
                                     91 ;	-----------------------------------------
      000008                         92 _BME280_Setup:
                                     93 ;	src\bme280.c: 22: uint8_t res = BME280_ReadReg(BME280_REG_ID);
      000008 A6 D0            [ 1]   94 	ld	a, #0xd0
      00000A CDr00r69         [ 4]   95 	call	_BME280_ReadReg
                                     96 ;	src\bme280.c: 27: if (res != BME280_ID) {
      00000D A1 60            [ 1]   97 	cp	a, #0x60
      00000F 27 03            [ 1]   98 	jreq	00102$
                                     99 ;	src\bme280.c: 28: Error();
                                    100 ;	src\bme280.c: 29: return;
      000011 CCr00r00         [ 2]  101 	jp	_Error
      000014                        102 00102$:
                                    103 ;	src\bme280.c: 32: BME280_WriteReg(BME280_REG_SOFTRESET, BME280_SOFTRESET_VALUE);
      000014 4B B6            [ 1]  104 	push	#0xb6
      000016 A6 E0            [ 1]  105 	ld	a, #0xe0
      000018 CDr00r54         [ 4]  106 	call	_BME280_WriteReg
                                    107 ;	src\bme280.c: 33: while (BME280_ReadStatus() & BME280_STATUS_IM_UPDATE);
      00001B                        108 00103$:
      00001B CDr02r1D         [ 4]  109 	call	_BME280_ReadStatus
      00001E 44               [ 1]  110 	srl	a
      00001F 25 FA            [ 1]  111 	jrc	00103$
                                    112 ;	src\bme280.c: 35: BME280_ReadCoefficients();
      000021 CDr02r25         [ 4]  113 	call	_BME280_ReadCoefficients
                                    114 ;	src\bme280.c: 36: BME280_SetStandby(BME280_STBY_1000);
      000024 A6 A0            [ 1]  115 	ld	a, #0xa0
      000026 CDr02rEA         [ 4]  116 	call	_BME280_SetStandby
                                    117 ;	src\bme280.c: 37: BME280_SetFilter(BME280_FILTER_4);
      000029 A6 08            [ 1]  118 	ld	a, #0x08
      00002B CDr03r04         [ 4]  119 	call	_BME280_SetFilter
                                    120 ;	src\bme280.c: 38: BME280_SetOversamplingTemper(BME280_OSRS_T_x4);
      00002E A6 60            [ 1]  121 	ld	a, #0x60
      000030 CDr03r1E         [ 4]  122 	call	_BME280_SetOversamplingTemper
                                    123 ;	src\bme280.c: 39: BME280_SetOversamplingPressure(BME280_OSRS_P_x2);
      000033 A6 08            [ 1]  124 	ld	a, #0x08
      000035 CDr03r38         [ 4]  125 	call	_BME280_SetOversamplingPressure
                                    126 ;	src\bme280.c: 40: BME280_SetOversamplingHum(BME280_OSRS_H_x1);
      000038 A6 01            [ 1]  127 	ld	a, #0x01
      00003A CDr03r52         [ 4]  128 	call	_BME280_SetOversamplingHum
                                    129 ;	src\bme280.c: 42: value32 = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      00003D A6 F4            [ 1]  130 	ld	a, #0xf4
      00003F CDr00r69         [ 4]  131 	call	_BME280_ReadReg
                                    132 ;	src\bme280.c: 43: value32 |= BME280_ReadReg(BME280_REG_CTRL_HUM) << 8;
      000042 A6 F2            [ 1]  133 	ld	a, #0xf2
      000044 CDr00r69         [ 4]  134 	call	_BME280_ReadReg
                                    135 ;	src\bme280.c: 56: BME280_SetMode(BME280_MODE_NORMAL);
      000047 A6 03            [ 1]  136 	ld	a, #0x03
      000049 CDr03r77         [ 4]  137 	call	_BME280_SetMode
                                    138 ;	src\bme280.c: 58: LED_ON;
      00004C A6 20            [ 1]  139 	ld	a, #0x20
      00004E AE 50 14         [ 2]  140 	ldw	x, #0x5014
                                    141 ;	src\bme280.c: 59: }
      000051 CCr00r00         [ 2]  142 	jp	_GPIO_WriteLow
                                    143 ;	src\bme280.c: 61: void BME280_WriteReg(uint8_t iReg, uint8_t iValue) {
                                    144 ;	-----------------------------------------
                                    145 ;	 function BME280_WriteReg
                                    146 ;	-----------------------------------------
      000054                        147 _BME280_WriteReg:
      000054 89               [ 2]  148 	pushw	x
                                    149 ;	src\bme280.c: 63: iData[0] = iReg;
      000055 96               [ 1]  150 	ldw	x, sp
      000056 5C               [ 1]  151 	incw	x
      000057 F7               [ 1]  152 	ld	(x), a
                                    153 ;	src\bme280.c: 64: iData[1] = iValue;
      000058 7B 05            [ 1]  154 	ld	a, (0x05, sp)
      00005A 6B 02            [ 1]  155 	ld	(0x02, sp), a
                                    156 ;	src\bme280.c: 65: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00005C 89               [ 2]  157 	pushw	x
      00005D AE 00 02         [ 2]  158 	ldw	x, #0x0002
      000060 A6 EE            [ 1]  159 	ld	a, #0xee
      000062 CDr00r00         [ 4]  160 	call	_I2C_Send_Bytes
                                    161 ;	src\bme280.c: 67: }
      000065 85               [ 2]  162 	popw	x
      000066 85               [ 2]  163 	popw	x
      000067 84               [ 1]  164 	pop	a
      000068 FC               [ 2]  165 	jp	(x)
                                    166 ;	src\bme280.c: 69: uint8_t BME280_ReadReg(uint8_t iReg) {
                                    167 ;	-----------------------------------------
                                    168 ;	 function BME280_ReadReg
                                    169 ;	-----------------------------------------
      000069                        170 _BME280_ReadReg:
      000069 88               [ 1]  171 	push	a
                                    172 ;	src\bme280.c: 71: iData[0] = iReg;
      00006A 96               [ 1]  173 	ldw	x, sp
      00006B 5C               [ 1]  174 	incw	x
      00006C F7               [ 1]  175 	ld	(x), a
                                    176 ;	src\bme280.c: 72: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00006D 89               [ 2]  177 	pushw	x
      00006E 5F               [ 1]  178 	clrw	x
      00006F 5C               [ 1]  179 	incw	x
      000070 A6 EE            [ 1]  180 	ld	a, #0xee
      000072 CDr00r00         [ 4]  181 	call	_I2C_Send_Bytes
                                    182 ;	src\bme280.c: 74: return I2C_Read_Byte(BME280_ADDRESS);
      000075 A6 EE            [ 1]  183 	ld	a, #0xee
      000077 CDr00r00         [ 4]  184 	call	_I2C_Read_Byte
                                    185 ;	src\bme280.c: 76: }
      00007A 5B 01            [ 2]  186 	addw	sp, #1
      00007C 81               [ 4]  187 	ret
                                    188 ;	src\bme280.c: 78: void BME280_ReadReg_U16(uint8_t iReg, uint16_t *iValue) {
                                    189 ;	-----------------------------------------
                                    190 ;	 function BME280_ReadReg_U16
                                    191 ;	-----------------------------------------
      00007D                        192 _BME280_ReadReg_U16:
      00007D 52 07            [ 2]  193 	sub	sp, #7
      00007F 1F 06            [ 2]  194 	ldw	(0x06, sp), x
                                    195 ;	src\bme280.c: 81: iData[0] = iReg;
      000081 96               [ 1]  196 	ldw	x, sp
      000082 5C               [ 1]  197 	incw	x
      000083 F7               [ 1]  198 	ld	(x), a
                                    199 ;	src\bme280.c: 82: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      000084 89               [ 2]  200 	pushw	x
      000085 5F               [ 1]  201 	clrw	x
      000086 5C               [ 1]  202 	incw	x
      000087 A6 EE            [ 1]  203 	ld	a, #0xee
      000089 CDr00r00         [ 4]  204 	call	_I2C_Send_Bytes
                                    205 ;	src\bme280.c: 84: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      00008C 96               [ 1]  206 	ldw	x, sp
      00008D 5C               [ 1]  207 	incw	x
      00008E 5C               [ 1]  208 	incw	x
      00008F 89               [ 2]  209 	pushw	x
      000090 AE 00 02         [ 2]  210 	ldw	x, #0x0002
      000093 A6 EE            [ 1]  211 	ld	a, #0xee
      000095 CDr00r00         [ 4]  212 	call	_I2C_Read_Bytes
                                    213 ;	src\bme280.c: 86: *iValue = iRes[0];
      000098 7B 02            [ 1]  214 	ld	a, (0x02, sp)
      00009A 90 5F            [ 1]  215 	clrw	y
      00009C 90 97            [ 1]  216 	ld	yl, a
      00009E 1E 06            [ 2]  217 	ldw	x, (0x06, sp)
      0000A0 FF               [ 2]  218 	ldw	(x), y
                                    219 ;	src\bme280.c: 87: *iValue <<= 8;
      0000A1 4F               [ 1]  220 	clr	a
      0000A2 90 02            [ 1]  221 	rlwa	y
      0000A4 1E 06            [ 2]  222 	ldw	x, (0x06, sp)
      0000A6 FF               [ 2]  223 	ldw	(x), y
                                    224 ;	src\bme280.c: 88: *iValue += iRes[1];
      0000A7 7B 03            [ 1]  225 	ld	a, (0x03, sp)
      0000A9 5F               [ 1]  226 	clrw	x
      0000AA 97               [ 1]  227 	ld	xl, a
      0000AB 1F 04            [ 2]  228 	ldw	(0x04, sp), x
      0000AD 72 F9 04         [ 2]  229 	addw	y, (0x04, sp)
      0000B0 1E 06            [ 2]  230 	ldw	x, (0x06, sp)
      0000B2 FF               [ 2]  231 	ldw	(x), y
                                    232 ;	src\bme280.c: 89: }
      0000B3 5B 07            [ 2]  233 	addw	sp, #7
      0000B5 81               [ 4]  234 	ret
                                    235 ;	src\bme280.c: 91: void BME280_ReadReg_LE_U16(uint8_t iReg, uint16_t *iValue) {
                                    236 ;	-----------------------------------------
                                    237 ;	 function BME280_ReadReg_LE_U16
                                    238 ;	-----------------------------------------
      0000B6                        239 _BME280_ReadReg_LE_U16:
      0000B6 52 09            [ 2]  240 	sub	sp, #9
      0000B8 1F 08            [ 2]  241 	ldw	(0x08, sp), x
                                    242 ;	src\bme280.c: 94: iData[0] = iReg;
      0000BA 96               [ 1]  243 	ldw	x, sp
      0000BB 5C               [ 1]  244 	incw	x
      0000BC F7               [ 1]  245 	ld	(x), a
                                    246 ;	src\bme280.c: 95: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0000BD 89               [ 2]  247 	pushw	x
      0000BE 5F               [ 1]  248 	clrw	x
      0000BF 5C               [ 1]  249 	incw	x
      0000C0 A6 EE            [ 1]  250 	ld	a, #0xee
      0000C2 CDr00r00         [ 4]  251 	call	_I2C_Send_Bytes
                                    252 ;	src\bme280.c: 97: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0000C5 96               [ 1]  253 	ldw	x, sp
      0000C6 5C               [ 1]  254 	incw	x
      0000C7 5C               [ 1]  255 	incw	x
      0000C8 89               [ 2]  256 	pushw	x
      0000C9 AE 00 02         [ 2]  257 	ldw	x, #0x0002
      0000CC A6 EE            [ 1]  258 	ld	a, #0xee
      0000CE CDr00r00         [ 4]  259 	call	_I2C_Read_Bytes
                                    260 ;	src\bme280.c: 99: *iValue = iRes[0];
      0000D1 7B 02            [ 1]  261 	ld	a, (0x02, sp)
      0000D3 90 5F            [ 1]  262 	clrw	y
      0000D5 90 97            [ 1]  263 	ld	yl, a
      0000D7 1E 08            [ 2]  264 	ldw	x, (0x08, sp)
      0000D9 FF               [ 2]  265 	ldw	(x), y
                                    266 ;	src\bme280.c: 100: *iValue <<= 8;
      0000DA 4F               [ 1]  267 	clr	a
      0000DB 90 02            [ 1]  268 	rlwa	y
      0000DD 1E 08            [ 2]  269 	ldw	x, (0x08, sp)
      0000DF FF               [ 2]  270 	ldw	(x), y
                                    271 ;	src\bme280.c: 101: *iValue += iRes[1];
      0000E0 7B 03            [ 1]  272 	ld	a, (0x03, sp)
      0000E2 5F               [ 1]  273 	clrw	x
      0000E3 97               [ 1]  274 	ld	xl, a
      0000E4 1F 06            [ 2]  275 	ldw	(0x06, sp), x
      0000E6 72 F9 06         [ 2]  276 	addw	y, (0x06, sp)
      0000E9 1E 08            [ 2]  277 	ldw	x, (0x08, sp)
      0000EB FF               [ 2]  278 	ldw	(x), y
                                    279 ;	src\bme280.c: 102: *(uint16_t *)iValue = be16toword(*(uint16_t *) iValue);
      0000EC 93               [ 1]  280 	ldw	x, y
      0000ED 0F 05            [ 1]  281 	clr	(0x05, sp)
      0000EF 90 9F            [ 1]  282 	ld	a, yl
      0000F1 0F 06            [ 1]  283 	clr	(0x06, sp)
      0000F3 1A 06            [ 1]  284 	or	a, (0x06, sp)
      0000F5 90 95            [ 1]  285 	ld	yh, a
      0000F7 9E               [ 1]  286 	ld	a, xh
      0000F8 1A 05            [ 1]  287 	or	a, (0x05, sp)
      0000FA 90 97            [ 1]  288 	ld	yl, a
      0000FC 1E 08            [ 2]  289 	ldw	x, (0x08, sp)
      0000FE FF               [ 2]  290 	ldw	(x), y
                                    291 ;	src\bme280.c: 103: }
      0000FF 5B 09            [ 2]  292 	addw	sp, #9
      000101 81               [ 4]  293 	ret
                                    294 ;	src\bme280.c: 105: void BME280_ReadReg_U24(uint8_t iReg, uint32_t *iValue) {
                                    295 ;	-----------------------------------------
                                    296 ;	 function BME280_ReadReg_U24
                                    297 ;	-----------------------------------------
      000102                        298 _BME280_ReadReg_U24:
      000102 52 0E            [ 2]  299 	sub	sp, #14
      000104 1F 0D            [ 2]  300 	ldw	(0x0d, sp), x
                                    301 ;	src\bme280.c: 108: iData[0] = iReg;
      000106 96               [ 1]  302 	ldw	x, sp
      000107 5C               [ 1]  303 	incw	x
      000108 F7               [ 1]  304 	ld	(x), a
                                    305 ;	src\bme280.c: 109: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      000109 89               [ 2]  306 	pushw	x
      00010A 5F               [ 1]  307 	clrw	x
      00010B 5C               [ 1]  308 	incw	x
      00010C A6 EE            [ 1]  309 	ld	a, #0xee
      00010E CDr00r00         [ 4]  310 	call	_I2C_Send_Bytes
                                    311 ;	src\bme280.c: 111: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      000111 96               [ 1]  312 	ldw	x, sp
      000112 5C               [ 1]  313 	incw	x
      000113 5C               [ 1]  314 	incw	x
      000114 89               [ 2]  315 	pushw	x
      000115 AE 00 03         [ 2]  316 	ldw	x, #0x0003
      000118 A6 EE            [ 1]  317 	ld	a, #0xee
      00011A CDr00r00         [ 4]  318 	call	_I2C_Read_Bytes
                                    319 ;	src\bme280.c: 113: *iValue = iRes[0];
      00011D 7B 02            [ 1]  320 	ld	a, (0x02, sp)
      00011F 90 5F            [ 1]  321 	clrw	y
      000121 0F 05            [ 1]  322 	clr	(0x05, sp)
      000123 1E 0D            [ 2]  323 	ldw	x, (0x0d, sp)
      000125 E7 03            [ 1]  324 	ld	(0x3, x), a
      000127 EF 01            [ 2]  325 	ldw	(0x1, x), y
      000129 88               [ 1]  326 	push	a
      00012A 7B 06            [ 1]  327 	ld	a, (0x06, sp)
      00012C F7               [ 1]  328 	ld	(x), a
      00012D 84               [ 1]  329 	pop	a
                                    330 ;	src\bme280.c: 114: *iValue <<= 8;
      00012E 6B 0B            [ 1]  331 	ld	(0x0b, sp), a
      000130 17 09            [ 2]  332 	ldw	(0x09, sp), y
      000132 0F 0C            [ 1]  333 	clr	(0x0c, sp)
      000134 1E 0D            [ 2]  334 	ldw	x, (0x0d, sp)
      000136 16 0B            [ 2]  335 	ldw	y, (0x0b, sp)
      000138 EF 02            [ 2]  336 	ldw	(0x2, x), y
      00013A 16 09            [ 2]  337 	ldw	y, (0x09, sp)
      00013C FF               [ 2]  338 	ldw	(x), y
                                    339 ;	src\bme280.c: 115: *iValue += iRes[1];
      00013D 7B 03            [ 1]  340 	ld	a, (0x03, sp)
      00013F 90 5F            [ 1]  341 	clrw	y
      000141 5F               [ 1]  342 	clrw	x
      000142 90 97            [ 1]  343 	ld	yl, a
      000144 72 F9 0B         [ 2]  344 	addw	y, (0x0b, sp)
      000147 9F               [ 1]  345 	ld	a, xl
      000148 19 0A            [ 1]  346 	adc	a, (0x0a, sp)
      00014A 88               [ 1]  347 	push	a
      00014B 9E               [ 1]  348 	ld	a, xh
      00014C 19 0A            [ 1]  349 	adc	a, (0x0a, sp)
      00014E 6B 06            [ 1]  350 	ld	(0x06, sp), a
      000150 84               [ 1]  351 	pop	a
      000151 1E 0D            [ 2]  352 	ldw	x, (0x0d, sp)
      000153 EF 02            [ 2]  353 	ldw	(0x2, x), y
      000155 E7 01            [ 1]  354 	ld	(0x1, x), a
      000157 88               [ 1]  355 	push	a
      000158 7B 06            [ 1]  356 	ld	a, (0x06, sp)
      00015A F7               [ 1]  357 	ld	(x), a
      00015B 84               [ 1]  358 	pop	a
                                    359 ;	src\bme280.c: 116: *iValue <<= 8;
      00015C 17 0A            [ 2]  360 	ldw	(0x0a, sp), y
      00015E 6B 09            [ 1]  361 	ld	(0x09, sp), a
      000160 0F 0C            [ 1]  362 	clr	(0x0c, sp)
      000162 1E 0D            [ 2]  363 	ldw	x, (0x0d, sp)
      000164 16 0B            [ 2]  364 	ldw	y, (0x0b, sp)
      000166 EF 02            [ 2]  365 	ldw	(0x2, x), y
      000168 16 09            [ 2]  366 	ldw	y, (0x09, sp)
      00016A FF               [ 2]  367 	ldw	(x), y
                                    368 ;	src\bme280.c: 117: *iValue += iRes[2];
      00016B 7B 04            [ 1]  369 	ld	a, (0x04, sp)
      00016D 90 5F            [ 1]  370 	clrw	y
      00016F 5F               [ 1]  371 	clrw	x
      000170 90 97            [ 1]  372 	ld	yl, a
      000172 72 F9 0B         [ 2]  373 	addw	y, (0x0b, sp)
      000175 9F               [ 1]  374 	ld	a, xl
      000176 19 0A            [ 1]  375 	adc	a, (0x0a, sp)
      000178 88               [ 1]  376 	push	a
      000179 9E               [ 1]  377 	ld	a, xh
      00017A 19 0A            [ 1]  378 	adc	a, (0x0a, sp)
      00017C 6B 06            [ 1]  379 	ld	(0x06, sp), a
      00017E 84               [ 1]  380 	pop	a
      00017F 1E 0D            [ 2]  381 	ldw	x, (0x0d, sp)
      000181 EF 02            [ 2]  382 	ldw	(0x2, x), y
      000183 E7 01            [ 1]  383 	ld	(0x1, x), a
      000185 88               [ 1]  384 	push	a
      000186 7B 06            [ 1]  385 	ld	a, (0x06, sp)
      000188 F7               [ 1]  386 	ld	(x), a
      000189 84               [ 1]  387 	pop	a
                                    388 ;	src\bme280.c: 118: *(uint32_t*)iValue &= 0x00FFFFFF;
      00018A 6B 0A            [ 1]  389 	ld	(0x0a, sp), a
      00018C 0F 09            [ 1]  390 	clr	(0x09, sp)
      00018E 1E 0D            [ 2]  391 	ldw	x, (0x0d, sp)
      000190 EF 02            [ 2]  392 	ldw	(0x2, x), y
      000192 16 09            [ 2]  393 	ldw	y, (0x09, sp)
      000194 FF               [ 2]  394 	ldw	(x), y
                                    395 ;	src\bme280.c: 119: }
      000195 5B 0E            [ 2]  396 	addw	sp, #14
      000197 81               [ 4]  397 	ret
                                    398 ;	src\bme280.c: 139: void BME280_ReadReg_S16(uint8_t iReg, int16_t *iValue) {
                                    399 ;	-----------------------------------------
                                    400 ;	 function BME280_ReadReg_S16
                                    401 ;	-----------------------------------------
      000198                        402 _BME280_ReadReg_S16:
      000198 52 07            [ 2]  403 	sub	sp, #7
      00019A 1F 06            [ 2]  404 	ldw	(0x06, sp), x
                                    405 ;	src\bme280.c: 142: iData[0] = iReg;
      00019C 96               [ 1]  406 	ldw	x, sp
      00019D 5C               [ 1]  407 	incw	x
      00019E F7               [ 1]  408 	ld	(x), a
                                    409 ;	src\bme280.c: 143: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      00019F 89               [ 2]  410 	pushw	x
      0001A0 5F               [ 1]  411 	clrw	x
      0001A1 5C               [ 1]  412 	incw	x
      0001A2 A6 EE            [ 1]  413 	ld	a, #0xee
      0001A4 CDr00r00         [ 4]  414 	call	_I2C_Send_Bytes
                                    415 ;	src\bme280.c: 145: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0001A7 96               [ 1]  416 	ldw	x, sp
      0001A8 5C               [ 1]  417 	incw	x
      0001A9 5C               [ 1]  418 	incw	x
      0001AA 89               [ 2]  419 	pushw	x
      0001AB AE 00 02         [ 2]  420 	ldw	x, #0x0002
      0001AE A6 EE            [ 1]  421 	ld	a, #0xee
      0001B0 CDr00r00         [ 4]  422 	call	_I2C_Read_Bytes
                                    423 ;	src\bme280.c: 147: *iValue = iRes[0];
      0001B3 7B 02            [ 1]  424 	ld	a, (0x02, sp)
      0001B5 5F               [ 1]  425 	clrw	x
      0001B6 97               [ 1]  426 	ld	xl, a
      0001B7 16 06            [ 2]  427 	ldw	y, (0x06, sp)
      0001B9 90 FF            [ 2]  428 	ldw	(y), x
                                    429 ;	src\bme280.c: 148: *iValue <<= 8;
      0001BB 4F               [ 1]  430 	clr	a
      0001BC 02               [ 1]  431 	rlwa	x
      0001BD 16 06            [ 2]  432 	ldw	y, (0x06, sp)
      0001BF 90 FF            [ 2]  433 	ldw	(y), x
                                    434 ;	src\bme280.c: 149: *iValue += iRes[1];
      0001C1 7B 03            [ 1]  435 	ld	a, (0x03, sp)
      0001C3 6B 05            [ 1]  436 	ld	(0x05, sp), a
      0001C5 0F 04            [ 1]  437 	clr	(0x04, sp)
      0001C7 72 FB 04         [ 2]  438 	addw	x, (0x04, sp)
      0001CA 16 06            [ 2]  439 	ldw	y, (0x06, sp)
      0001CC 90 FF            [ 2]  440 	ldw	(y), x
                                    441 ;	src\bme280.c: 150: }
      0001CE 5B 07            [ 2]  442 	addw	sp, #7
      0001D0 81               [ 4]  443 	ret
                                    444 ;	src\bme280.c: 152: void BME280_ReadReg_LE_S16(uint8_t iReg, int16_t *iValue) {
                                    445 ;	-----------------------------------------
                                    446 ;	 function BME280_ReadReg_LE_S16
                                    447 ;	-----------------------------------------
      0001D1                        448 _BME280_ReadReg_LE_S16:
      0001D1 52 09            [ 2]  449 	sub	sp, #9
      0001D3 1F 08            [ 2]  450 	ldw	(0x08, sp), x
                                    451 ;	src\bme280.c: 155: iData[0] = iReg;
      0001D5 96               [ 1]  452 	ldw	x, sp
      0001D6 5C               [ 1]  453 	incw	x
      0001D7 F7               [ 1]  454 	ld	(x), a
                                    455 ;	src\bme280.c: 156: I2C_Send_Bytes((BME280_ADDRESS), sizeof(iData), iData);
      0001D8 89               [ 2]  456 	pushw	x
      0001D9 5F               [ 1]  457 	clrw	x
      0001DA 5C               [ 1]  458 	incw	x
      0001DB A6 EE            [ 1]  459 	ld	a, #0xee
      0001DD CDr00r00         [ 4]  460 	call	_I2C_Send_Bytes
                                    461 ;	src\bme280.c: 158: I2C_Read_Bytes((BME280_ADDRESS), sizeof(iRes), iRes);
      0001E0 96               [ 1]  462 	ldw	x, sp
      0001E1 5C               [ 1]  463 	incw	x
      0001E2 5C               [ 1]  464 	incw	x
      0001E3 89               [ 2]  465 	pushw	x
      0001E4 AE 00 02         [ 2]  466 	ldw	x, #0x0002
      0001E7 A6 EE            [ 1]  467 	ld	a, #0xee
      0001E9 CDr00r00         [ 4]  468 	call	_I2C_Read_Bytes
                                    469 ;	src\bme280.c: 160: *iValue = iRes[0];
      0001EC 7B 02            [ 1]  470 	ld	a, (0x02, sp)
      0001EE 5F               [ 1]  471 	clrw	x
      0001EF 97               [ 1]  472 	ld	xl, a
      0001F0 16 08            [ 2]  473 	ldw	y, (0x08, sp)
      0001F2 90 FF            [ 2]  474 	ldw	(y), x
                                    475 ;	src\bme280.c: 161: *iValue <<= 8;
      0001F4 4F               [ 1]  476 	clr	a
      0001F5 02               [ 1]  477 	rlwa	x
      0001F6 16 08            [ 2]  478 	ldw	y, (0x08, sp)
      0001F8 90 FF            [ 2]  479 	ldw	(y), x
                                    480 ;	src\bme280.c: 162: *iValue += iRes[1];
      0001FA 7B 03            [ 1]  481 	ld	a, (0x03, sp)
      0001FC 6B 07            [ 1]  482 	ld	(0x07, sp), a
      0001FE 0F 06            [ 1]  483 	clr	(0x06, sp)
      000200 72 FB 06         [ 2]  484 	addw	x, (0x06, sp)
      000203 16 08            [ 2]  485 	ldw	y, (0x08, sp)
      000205 90 FF            [ 2]  486 	ldw	(y), x
                                    487 ;	src\bme280.c: 163: *(int16_t *)iValue = be16toword(*(int16_t *) iValue);
      000207 90 93            [ 1]  488 	ldw	y, x
      000209 0F 05            [ 1]  489 	clr	(0x05, sp)
      00020B 9F               [ 1]  490 	ld	a, xl
      00020C 0F 06            [ 1]  491 	clr	(0x06, sp)
      00020E 1A 06            [ 1]  492 	or	a, (0x06, sp)
      000210 95               [ 1]  493 	ld	xh, a
      000211 90 9E            [ 1]  494 	ld	a, yh
      000213 1A 05            [ 1]  495 	or	a, (0x05, sp)
      000215 97               [ 1]  496 	ld	xl, a
      000216 16 08            [ 2]  497 	ldw	y, (0x08, sp)
      000218 90 FF            [ 2]  498 	ldw	(y), x
                                    499 ;	src\bme280.c: 164: }
      00021A 5B 09            [ 2]  500 	addw	sp, #9
      00021C 81               [ 4]  501 	ret
                                    502 ;	src\bme280.c: 166: uint8_t BME280_ReadStatus(void) {
                                    503 ;	-----------------------------------------
                                    504 ;	 function BME280_ReadStatus
                                    505 ;	-----------------------------------------
      00021D                        506 _BME280_ReadStatus:
                                    507 ;	src\bme280.c: 168: uint8_t res = BME280_ReadReg(BME280_REGISTER_STATUS) & 0x09;
      00021D A6 F3            [ 1]  508 	ld	a, #0xf3
      00021F CDr00r69         [ 4]  509 	call	_BME280_ReadReg
      000222 A4 09            [ 1]  510 	and	a, #0x09
                                    511 ;	src\bme280.c: 169: return res;
                                    512 ;	src\bme280.c: 170: }
      000224 81               [ 4]  513 	ret
                                    514 ;	src\bme280.c: 172: void BME280_ReadCoefficients(void) {
                                    515 ;	-----------------------------------------
                                    516 ;	 function BME280_ReadCoefficients
                                    517 ;	-----------------------------------------
      000225                        518 _BME280_ReadCoefficients:
      000225 52 04            [ 2]  519 	sub	sp, #4
                                    520 ;	src\bme280.c: 173: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_T1, &CalibData.dig_T1);
      000227 AEr00r00         [ 2]  521 	ldw	x, #(_CalibData+0)
      00022A A6 88            [ 1]  522 	ld	a, #0x88
      00022C CDr00rB6         [ 4]  523 	call	_BME280_ReadReg_LE_U16
                                    524 ;	src\bme280.c: 174: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T2, &CalibData.dig_T2);
      00022F AEr00r02         [ 2]  525 	ldw	x, #(_CalibData+2)
      000232 A6 8A            [ 1]  526 	ld	a, #0x8a
      000234 CDr01rD1         [ 4]  527 	call	_BME280_ReadReg_LE_S16
                                    528 ;	src\bme280.c: 175: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_T3, &CalibData.dig_T3);
      000237 AEr00r04         [ 2]  529 	ldw	x, #(_CalibData+4)
      00023A A6 8C            [ 1]  530 	ld	a, #0x8c
      00023C CDr01rD1         [ 4]  531 	call	_BME280_ReadReg_LE_S16
                                    532 ;	src\bme280.c: 176: BME280_ReadReg_LE_U16(BME280_REGISTER_DIG_P1, &CalibData.dig_P1);
      00023F AEr00r06         [ 2]  533 	ldw	x, #(_CalibData+6)
      000242 A6 8E            [ 1]  534 	ld	a, #0x8e
      000244 CDr00rB6         [ 4]  535 	call	_BME280_ReadReg_LE_U16
                                    536 ;	src\bme280.c: 177: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P2, &CalibData.dig_P2);
      000247 AEr00r08         [ 2]  537 	ldw	x, #(_CalibData+8)
      00024A A6 90            [ 1]  538 	ld	a, #0x90
      00024C CDr01rD1         [ 4]  539 	call	_BME280_ReadReg_LE_S16
                                    540 ;	src\bme280.c: 178: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P3, &CalibData.dig_P3);
      00024F AEr00r0A         [ 2]  541 	ldw	x, #(_CalibData+10)
      000252 A6 92            [ 1]  542 	ld	a, #0x92
      000254 CDr01rD1         [ 4]  543 	call	_BME280_ReadReg_LE_S16
                                    544 ;	src\bme280.c: 179: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P4, &CalibData.dig_P4);
      000257 AEr00r0C         [ 2]  545 	ldw	x, #(_CalibData+12)
      00025A A6 94            [ 1]  546 	ld	a, #0x94
      00025C CDr01rD1         [ 4]  547 	call	_BME280_ReadReg_LE_S16
                                    548 ;	src\bme280.c: 180: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P5, &CalibData.dig_P5);
      00025F AEr00r0E         [ 2]  549 	ldw	x, #(_CalibData+14)
      000262 A6 96            [ 1]  550 	ld	a, #0x96
      000264 CDr01rD1         [ 4]  551 	call	_BME280_ReadReg_LE_S16
                                    552 ;	src\bme280.c: 181: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P6, &CalibData.dig_P6);
      000267 AEr00r10         [ 2]  553 	ldw	x, #(_CalibData+16)
      00026A A6 98            [ 1]  554 	ld	a, #0x98
      00026C CDr01rD1         [ 4]  555 	call	_BME280_ReadReg_LE_S16
                                    556 ;	src\bme280.c: 182: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P7, &CalibData.dig_P7);
      00026F AEr00r12         [ 2]  557 	ldw	x, #(_CalibData+18)
      000272 A6 9A            [ 1]  558 	ld	a, #0x9a
      000274 CDr01rD1         [ 4]  559 	call	_BME280_ReadReg_LE_S16
                                    560 ;	src\bme280.c: 183: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P8, &CalibData.dig_P8);
      000277 AEr00r14         [ 2]  561 	ldw	x, #(_CalibData+20)
      00027A A6 9C            [ 1]  562 	ld	a, #0x9c
      00027C CDr01rD1         [ 4]  563 	call	_BME280_ReadReg_LE_S16
                                    564 ;	src\bme280.c: 184: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_P9, &CalibData.dig_P9);
      00027F AEr00r16         [ 2]  565 	ldw	x, #(_CalibData+22)
      000282 A6 9E            [ 1]  566 	ld	a, #0x9e
      000284 CDr01rD1         [ 4]  567 	call	_BME280_ReadReg_LE_S16
                                    568 ;	src\bme280.c: 185: CalibData.dig_H1 = BME280_ReadReg(BME280_REGISTER_DIG_H1);
      000287 A6 A1            [ 1]  569 	ld	a, #0xa1
      000289 CDr00r69         [ 4]  570 	call	_BME280_ReadReg
      00028C C7u00u18         [ 1]  571 	ld	_CalibData+24, a
                                    572 ;	src\bme280.c: 186: BME280_ReadReg_LE_S16(BME280_REGISTER_DIG_H2, &CalibData.dig_H2);
      00028F AEr00r19         [ 2]  573 	ldw	x, #(_CalibData+25)
      000292 A6 E1            [ 1]  574 	ld	a, #0xe1
      000294 CDr01rD1         [ 4]  575 	call	_BME280_ReadReg_LE_S16
                                    576 ;	src\bme280.c: 187: CalibData.dig_H3 = BME280_ReadReg(BME280_REGISTER_DIG_H3);
      000297 A6 E3            [ 1]  577 	ld	a, #0xe3
      000299 CDr00r69         [ 4]  578 	call	_BME280_ReadReg
      00029C C7u00u1B         [ 1]  579 	ld	_CalibData+27, a
                                    580 ;	src\bme280.c: 188: CalibData.dig_H4 = (BME280_ReadReg(BME280_REGISTER_DIG_H4) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H4+1) & 0xF);
      00029F A6 E4            [ 1]  581 	ld	a, #0xe4
      0002A1 CDr00r69         [ 4]  582 	call	_BME280_ReadReg
      0002A4 5F               [ 1]  583 	clrw	x
      0002A5 97               [ 1]  584 	ld	xl, a
      0002A6 58               [ 2]  585 	sllw	x
      0002A7 58               [ 2]  586 	sllw	x
      0002A8 58               [ 2]  587 	sllw	x
      0002A9 58               [ 2]  588 	sllw	x
      0002AA 1F 01            [ 2]  589 	ldw	(0x01, sp), x
      0002AC A6 E5            [ 1]  590 	ld	a, #0xe5
      0002AE CDr00r69         [ 4]  591 	call	_BME280_ReadReg
      0002B1 A4 0F            [ 1]  592 	and	a, #0x0f
      0002B3 6B 04            [ 1]  593 	ld	(0x04, sp), a
      0002B5 7B 01            [ 1]  594 	ld	a, (0x01, sp)
      0002B7 95               [ 1]  595 	ld	xh, a
      0002B8 7B 02            [ 1]  596 	ld	a, (0x02, sp)
      0002BA 1A 04            [ 1]  597 	or	a, (0x04, sp)
      0002BC 97               [ 1]  598 	ld	xl, a
      0002BD CFu00u1C         [ 2]  599 	ldw	_CalibData+28, x
                                    600 ;	src\bme280.c: 189: CalibData.dig_H5 = (BME280_ReadReg(BME280_REGISTER_DIG_H5+1) << 4) | (BME280_ReadReg(BME280_REGISTER_DIG_H5) >> 4);
      0002C0 A6 E6            [ 1]  601 	ld	a, #0xe6
      0002C2 CDr00r69         [ 4]  602 	call	_BME280_ReadReg
      0002C5 5F               [ 1]  603 	clrw	x
      0002C6 97               [ 1]  604 	ld	xl, a
      0002C7 58               [ 2]  605 	sllw	x
      0002C8 58               [ 2]  606 	sllw	x
      0002C9 58               [ 2]  607 	sllw	x
      0002CA 58               [ 2]  608 	sllw	x
      0002CB 1F 03            [ 2]  609 	ldw	(0x03, sp), x
      0002CD A6 E5            [ 1]  610 	ld	a, #0xe5
      0002CF CDr00r69         [ 4]  611 	call	_BME280_ReadReg
      0002D2 4E               [ 1]  612 	swap	a
      0002D3 A4 0F            [ 1]  613 	and	a, #0x0f
      0002D5 5F               [ 1]  614 	clrw	x
      0002D6 1A 04            [ 1]  615 	or	a, (0x04, sp)
      0002D8 02               [ 1]  616 	rlwa	x
      0002D9 1A 03            [ 1]  617 	or	a, (0x03, sp)
      0002DB 95               [ 1]  618 	ld	xh, a
      0002DC CFu00u1E         [ 2]  619 	ldw	_CalibData+30, x
                                    620 ;	src\bme280.c: 190: CalibData.dig_H6 = (int8_t)BME280_ReadReg(BME280_REGISTER_DIG_H6);
      0002DF A6 E7            [ 1]  621 	ld	a, #0xe7
      0002E1 CDr00r69         [ 4]  622 	call	_BME280_ReadReg
      0002E4 C7u00u20         [ 1]  623 	ld	_CalibData+32, a
                                    624 ;	src\bme280.c: 230: }
      0002E7 5B 04            [ 2]  625 	addw	sp, #4
      0002E9 81               [ 4]  626 	ret
                                    627 ;	src\bme280.c: 232: void BME280_SetStandby(uint8_t tsb) {
                                    628 ;	-----------------------------------------
                                    629 ;	 function BME280_SetStandby
                                    630 ;	-----------------------------------------
      0002EA                        631 _BME280_SetStandby:
      0002EA 89               [ 2]  632 	pushw	x
      0002EB 6B 02            [ 1]  633 	ld	(0x02, sp), a
                                    634 ;	src\bme280.c: 234: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_STBY_MSK;
      0002ED A6 F5            [ 1]  635 	ld	a, #0xf5
      0002EF CDr00r69         [ 4]  636 	call	_BME280_ReadReg
      0002F2 A4 1F            [ 1]  637 	and	a, #0x1f
      0002F4 6B 01            [ 1]  638 	ld	(0x01, sp), a
                                    639 ;	src\bme280.c: 235: reg |= tsb & BME280_STBY_MSK;
      0002F6 7B 02            [ 1]  640 	ld	a, (0x02, sp)
      0002F8 A4 E0            [ 1]  641 	and	a, #0xe0
      0002FA 1A 01            [ 1]  642 	or	a, (0x01, sp)
                                    643 ;	src\bme280.c: 236: BME280_WriteReg(BME280_REG_CONFIG,reg);
      0002FC 88               [ 1]  644 	push	a
      0002FD A6 F5            [ 1]  645 	ld	a, #0xf5
      0002FF CDr00r54         [ 4]  646 	call	_BME280_WriteReg
                                    647 ;	src\bme280.c: 237: }
      000302 85               [ 2]  648 	popw	x
      000303 81               [ 4]  649 	ret
                                    650 ;	src\bme280.c: 239: void BME280_SetFilter(uint8_t filter) {
                                    651 ;	-----------------------------------------
                                    652 ;	 function BME280_SetFilter
                                    653 ;	-----------------------------------------
      000304                        654 _BME280_SetFilter:
      000304 89               [ 2]  655 	pushw	x
      000305 6B 02            [ 1]  656 	ld	(0x02, sp), a
                                    657 ;	src\bme280.c: 241: reg = BME280_ReadReg(BME280_REG_CONFIG) & ~BME280_FILTER_MSK;
      000307 A6 F5            [ 1]  658 	ld	a, #0xf5
      000309 CDr00r69         [ 4]  659 	call	_BME280_ReadReg
      00030C A4 E3            [ 1]  660 	and	a, #0xe3
      00030E 6B 01            [ 1]  661 	ld	(0x01, sp), a
                                    662 ;	src\bme280.c: 242: reg |= filter & BME280_FILTER_MSK;
      000310 7B 02            [ 1]  663 	ld	a, (0x02, sp)
      000312 A4 1C            [ 1]  664 	and	a, #0x1c
      000314 1A 01            [ 1]  665 	or	a, (0x01, sp)
                                    666 ;	src\bme280.c: 243: BME280_WriteReg(BME280_REG_CONFIG,reg);
      000316 88               [ 1]  667 	push	a
      000317 A6 F5            [ 1]  668 	ld	a, #0xf5
      000319 CDr00r54         [ 4]  669 	call	_BME280_WriteReg
                                    670 ;	src\bme280.c: 244: }
      00031C 85               [ 2]  671 	popw	x
      00031D 81               [ 4]  672 	ret
                                    673 ;	src\bme280.c: 246: void BME280_SetOversamplingTemper(uint8_t osrs) {
                                    674 ;	-----------------------------------------
                                    675 ;	 function BME280_SetOversamplingTemper
                                    676 ;	-----------------------------------------
      00031E                        677 _BME280_SetOversamplingTemper:
      00031E 89               [ 2]  678 	pushw	x
      00031F 6B 02            [ 1]  679 	ld	(0x02, sp), a
                                    680 ;	src\bme280.c: 248: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_T_MSK;
      000321 A6 F4            [ 1]  681 	ld	a, #0xf4
      000323 CDr00r69         [ 4]  682 	call	_BME280_ReadReg
      000326 A4 1F            [ 1]  683 	and	a, #0x1f
      000328 6B 01            [ 1]  684 	ld	(0x01, sp), a
                                    685 ;	src\bme280.c: 249: reg |= osrs & BME280_OSRS_T_MSK;
      00032A 7B 02            [ 1]  686 	ld	a, (0x02, sp)
      00032C A4 E0            [ 1]  687 	and	a, #0xe0
      00032E 1A 01            [ 1]  688 	or	a, (0x01, sp)
                                    689 ;	src\bme280.c: 250: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      000330 88               [ 1]  690 	push	a
      000331 A6 F4            [ 1]  691 	ld	a, #0xf4
      000333 CDr00r54         [ 4]  692 	call	_BME280_WriteReg
                                    693 ;	src\bme280.c: 251: }
      000336 85               [ 2]  694 	popw	x
      000337 81               [ 4]  695 	ret
                                    696 ;	src\bme280.c: 253: void BME280_SetOversamplingPressure(uint8_t osrs) {
                                    697 ;	-----------------------------------------
                                    698 ;	 function BME280_SetOversamplingPressure
                                    699 ;	-----------------------------------------
      000338                        700 _BME280_SetOversamplingPressure:
      000338 89               [ 2]  701 	pushw	x
      000339 6B 02            [ 1]  702 	ld	(0x02, sp), a
                                    703 ;	src\bme280.c: 255: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_OSRS_P_MSK;
      00033B A6 F4            [ 1]  704 	ld	a, #0xf4
      00033D CDr00r69         [ 4]  705 	call	_BME280_ReadReg
      000340 A4 E3            [ 1]  706 	and	a, #0xe3
      000342 6B 01            [ 1]  707 	ld	(0x01, sp), a
                                    708 ;	src\bme280.c: 256: reg |= osrs & BME280_OSRS_P_MSK;
      000344 7B 02            [ 1]  709 	ld	a, (0x02, sp)
      000346 A4 1C            [ 1]  710 	and	a, #0x1c
      000348 1A 01            [ 1]  711 	or	a, (0x01, sp)
                                    712 ;	src\bme280.c: 257: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      00034A 88               [ 1]  713 	push	a
      00034B A6 F4            [ 1]  714 	ld	a, #0xf4
      00034D CDr00r54         [ 4]  715 	call	_BME280_WriteReg
                                    716 ;	src\bme280.c: 258: }
      000350 85               [ 2]  717 	popw	x
      000351 81               [ 4]  718 	ret
                                    719 ;	src\bme280.c: 260: void BME280_SetOversamplingHum(uint8_t osrs) {
                                    720 ;	-----------------------------------------
                                    721 ;	 function BME280_SetOversamplingHum
                                    722 ;	-----------------------------------------
      000352                        723 _BME280_SetOversamplingHum:
      000352 89               [ 2]  724 	pushw	x
      000353 6B 02            [ 1]  725 	ld	(0x02, sp), a
                                    726 ;	src\bme280.c: 262: reg = BME280_ReadReg(BME280_REG_CTRL_HUM) & ~BME280_OSRS_H_MSK;
      000355 A6 F2            [ 1]  727 	ld	a, #0xf2
      000357 CDr00r69         [ 4]  728 	call	_BME280_ReadReg
      00035A A4 F8            [ 1]  729 	and	a, #0xf8
      00035C 6B 01            [ 1]  730 	ld	(0x01, sp), a
                                    731 ;	src\bme280.c: 263: reg |= osrs & BME280_OSRS_H_MSK;
      00035E 7B 02            [ 1]  732 	ld	a, (0x02, sp)
      000360 A4 07            [ 1]  733 	and	a, #0x07
      000362 1A 01            [ 1]  734 	or	a, (0x01, sp)
                                    735 ;	src\bme280.c: 264: BME280_WriteReg(BME280_REG_CTRL_HUM,reg);
      000364 88               [ 1]  736 	push	a
      000365 A6 F2            [ 1]  737 	ld	a, #0xf2
      000367 CDr00r54         [ 4]  738 	call	_BME280_WriteReg
                                    739 ;	src\bme280.c: 267: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS);
      00036A A6 F4            [ 1]  740 	ld	a, #0xf4
      00036C CDr00r69         [ 4]  741 	call	_BME280_ReadReg
                                    742 ;	src\bme280.c: 268: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      00036F 88               [ 1]  743 	push	a
      000370 A6 F4            [ 1]  744 	ld	a, #0xf4
      000372 CDr00r54         [ 4]  745 	call	_BME280_WriteReg
                                    746 ;	src\bme280.c: 269: }
      000375 85               [ 2]  747 	popw	x
      000376 81               [ 4]  748 	ret
                                    749 ;	src\bme280.c: 271: void BME280_SetMode(uint8_t mode) {
                                    750 ;	-----------------------------------------
                                    751 ;	 function BME280_SetMode
                                    752 ;	-----------------------------------------
      000377                        753 _BME280_SetMode:
      000377 89               [ 2]  754 	pushw	x
      000378 6B 02            [ 1]  755 	ld	(0x02, sp), a
                                    756 ;	src\bme280.c: 273: reg = BME280_ReadReg(BME280_REG_CTRL_MEAS) & ~BME280_MODE_MSK;
      00037A A6 F4            [ 1]  757 	ld	a, #0xf4
      00037C CDr00r69         [ 4]  758 	call	_BME280_ReadReg
      00037F A4 FC            [ 1]  759 	and	a, #0xfc
      000381 6B 01            [ 1]  760 	ld	(0x01, sp), a
                                    761 ;	src\bme280.c: 274: reg |= mode & BME280_MODE_MSK;
      000383 7B 02            [ 1]  762 	ld	a, (0x02, sp)
      000385 A4 03            [ 1]  763 	and	a, #0x03
      000387 1A 01            [ 1]  764 	or	a, (0x01, sp)
                                    765 ;	src\bme280.c: 275: BME280_WriteReg(BME280_REG_CTRL_MEAS,reg);
      000389 88               [ 1]  766 	push	a
      00038A A6 F4            [ 1]  767 	ld	a, #0xf4
      00038C CDr00r54         [ 4]  768 	call	_BME280_WriteReg
                                    769 ;	src\bme280.c: 276: }
      00038F 85               [ 2]  770 	popw	x
      000390 81               [ 4]  771 	ret
                                    772 ;	src\bme280.c: 278: float BME280_ReadTemperature(void) {
                                    773 ;	-----------------------------------------
                                    774 ;	 function BME280_ReadTemperature
                                    775 ;	-----------------------------------------
      000391                        776 _BME280_ReadTemperature:
      000391 52 10            [ 2]  777 	sub	sp, #16
                                    778 ;	src\bme280.c: 284: BME280_ReadReg_U24(BME280_REGISTER_TEMPDATA, &temper_raw);
      000393 96               [ 1]  779 	ldw	x, sp
      000394 5C               [ 1]  780 	incw	x
      000395 A6 FA            [ 1]  781 	ld	a, #0xfa
      000397 CDr01r02         [ 4]  782 	call	_BME280_ReadReg_U24
                                    783 ;	src\bme280.c: 290: temper_raw >>= 4;
      00039A 1E 03            [ 2]  784 	ldw	x, (0x03, sp)
      00039C 16 01            [ 2]  785 	ldw	y, (0x01, sp)
      00039E 90 57            [ 2]  786 	sraw	y
      0003A0 56               [ 2]  787 	rrcw	x
      0003A1 90 57            [ 2]  788 	sraw	y
      0003A3 56               [ 2]  789 	rrcw	x
      0003A4 90 57            [ 2]  790 	sraw	y
      0003A6 56               [ 2]  791 	rrcw	x
      0003A7 90 57            [ 2]  792 	sraw	y
      0003A9 56               [ 2]  793 	rrcw	x
      0003AA 1F 03            [ 2]  794 	ldw	(0x03, sp), x
      0003AC 17 01            [ 2]  795 	ldw	(0x01, sp), y
                                    796 ;	src\bme280.c: 294: val1 = ((((temper_raw>>3) - ((int32_t)CalibData.dig_T1<<1))) * ((int32_t)CalibData.dig_T2)) >> 11;
      0003AE 16 03            [ 2]  797 	ldw	y, (0x03, sp)
      0003B0 1E 01            [ 2]  798 	ldw	x, (0x01, sp)
      0003B2 57               [ 2]  799 	sraw	x
      0003B3 90 56            [ 2]  800 	rrcw	y
      0003B5 57               [ 2]  801 	sraw	x
      0003B6 90 56            [ 2]  802 	rrcw	y
      0003B8 57               [ 2]  803 	sraw	x
      0003B9 90 56            [ 2]  804 	rrcw	y
      0003BB 1F 05            [ 2]  805 	ldw	(0x05, sp), x
      0003BD CEu00u00         [ 2]  806 	ldw	x, _CalibData+0
      0003C0 0F 0E            [ 1]  807 	clr	(0x0e, sp)
      0003C2 4F               [ 1]  808 	clr	a
      0003C3 6B 09            [ 1]  809 	ld	(0x09, sp), a
      0003C5 7B 0E            [ 1]  810 	ld	a, (0x0e, sp)
      0003C7 58               [ 2]  811 	sllw	x
      0003C8 49               [ 1]  812 	rlc	a
      0003C9 09 09            [ 1]  813 	rlc	(0x09, sp)
      0003CB 1F 0B            [ 2]  814 	ldw	(0x0b, sp), x
      0003CD 72 F2 0B         [ 2]  815 	subw	y, (0x0b, sp)
      0003D0 88               [ 1]  816 	push	a
      0003D1 7B 07            [ 1]  817 	ld	a, (0x07, sp)
      0003D3 12 01            [ 1]  818 	sbc	a, (1, sp)
      0003D5 6B 0F            [ 1]  819 	ld	(0x0f, sp), a
      0003D7 7B 06            [ 1]  820 	ld	a, (0x06, sp)
      0003D9 12 0A            [ 1]  821 	sbc	a, (0x0a, sp)
      0003DB 6B 0E            [ 1]  822 	ld	(0x0e, sp), a
      0003DD 84               [ 1]  823 	pop	a
      0003DE CEu00u02         [ 2]  824 	ldw	x, _CalibData+2
      0003E1 9E               [ 1]  825 	ld	a, xh
      0003E2 49               [ 1]  826 	rlc	a
      0003E3 4F               [ 1]  827 	clr	a
      0003E4 A2 00            [ 1]  828 	sbc	a, #0x00
      0003E6 6B 0A            [ 1]  829 	ld	(0x0a, sp), a
      0003E8 6B 09            [ 1]  830 	ld	(0x09, sp), a
      0003EA 89               [ 2]  831 	pushw	x
      0003EB 1E 0B            [ 2]  832 	ldw	x, (0x0b, sp)
      0003ED 89               [ 2]  833 	pushw	x
      0003EE 90 89            [ 2]  834 	pushw	y
      0003F0 1E 13            [ 2]  835 	ldw	x, (0x13, sp)
      0003F2 89               [ 2]  836 	pushw	x
      0003F3 CDr00r00         [ 4]  837 	call	__mullong
      0003F6 5B 08            [ 2]  838 	addw	sp, #8
      0003F8 A6 0B            [ 1]  839 	ld	a, #0x0b
      0003FA                        840 00103$:
      0003FA 90 57            [ 2]  841 	sraw	y
      0003FC 56               [ 2]  842 	rrcw	x
      0003FD 4A               [ 1]  843 	dec	a
      0003FE 26 FA            [ 1]  844 	jrne	00103$
      000400 1F 07            [ 2]  845 	ldw	(0x07, sp), x
      000402 17 05            [ 2]  846 	ldw	(0x05, sp), y
                                    847 ;	src\bme280.c: 305: val2 = (((((temper_raw>>4) - ((int32_t)CalibData.dig_T1)) * ((temper_raw>>4) - ((int32_t)CalibData.dig_T1)))>>12) * ((int32_t)CalibData.dig_T3)) >> 14;
      000404 16 03            [ 2]  848 	ldw	y, (0x03, sp)
      000406 1E 01            [ 2]  849 	ldw	x, (0x01, sp)
      000408 57               [ 2]  850 	sraw	x
      000409 90 56            [ 2]  851 	rrcw	y
      00040B 57               [ 2]  852 	sraw	x
      00040C 90 56            [ 2]  853 	rrcw	y
      00040E 57               [ 2]  854 	sraw	x
      00040F 90 56            [ 2]  855 	rrcw	y
      000411 57               [ 2]  856 	sraw	x
      000412 90 56            [ 2]  857 	rrcw	y
      000414 1F 09            [ 2]  858 	ldw	(0x09, sp), x
      000416 CEu00u00         [ 2]  859 	ldw	x, _CalibData+0
      000419 1F 0F            [ 2]  860 	ldw	(0x0f, sp), x
      00041B 5F               [ 1]  861 	clrw	x
      00041C 72 F2 0F         [ 2]  862 	subw	y, (0x0f, sp)
      00041F 7B 0A            [ 1]  863 	ld	a, (0x0a, sp)
      000421 89               [ 2]  864 	pushw	x
      000422 12 02            [ 1]  865 	sbc	a, (2, sp)
      000424 85               [ 2]  866 	popw	x
      000425 97               [ 1]  867 	ld	xl, a
      000426 7B 09            [ 1]  868 	ld	a, (0x09, sp)
      000428 89               [ 2]  869 	pushw	x
      000429 12 01            [ 1]  870 	sbc	a, (1, sp)
      00042B 85               [ 2]  871 	popw	x
      00042C 95               [ 1]  872 	ld	xh, a
      00042D 90 89            [ 2]  873 	pushw	y
      00042F 89               [ 2]  874 	pushw	x
      000430 90 89            [ 2]  875 	pushw	y
      000432 89               [ 2]  876 	pushw	x
      000433 CDr00r00         [ 4]  877 	call	__mullong
      000436 5B 08            [ 2]  878 	addw	sp, #8
      000438 A6 0C            [ 1]  879 	ld	a, #0x0c
      00043A                        880 00105$:
      00043A 90 57            [ 2]  881 	sraw	y
      00043C 56               [ 2]  882 	rrcw	x
      00043D 4A               [ 1]  883 	dec	a
      00043E 26 FA            [ 1]  884 	jrne	00105$
      000440 1F 0B            [ 2]  885 	ldw	(0x0b, sp), x
      000442 CEu00u04         [ 2]  886 	ldw	x, _CalibData+4
      000445 9E               [ 1]  887 	ld	a, xh
      000446 49               [ 1]  888 	rlc	a
      000447 4F               [ 1]  889 	clr	a
      000448 A2 00            [ 1]  890 	sbc	a, #0x00
      00044A 6B 0E            [ 1]  891 	ld	(0x0e, sp), a
      00044C 6B 0D            [ 1]  892 	ld	(0x0d, sp), a
      00044E 89               [ 2]  893 	pushw	x
      00044F 1E 0F            [ 2]  894 	ldw	x, (0x0f, sp)
      000451 89               [ 2]  895 	pushw	x
      000452 1E 0F            [ 2]  896 	ldw	x, (0x0f, sp)
      000454 89               [ 2]  897 	pushw	x
      000455 90 89            [ 2]  898 	pushw	y
      000457 CDr00r00         [ 4]  899 	call	__mullong
      00045A 5B 08            [ 2]  900 	addw	sp, #8
      00045C 51               [ 1]  901 	exgw	x, y
      00045D A6 0E            [ 1]  902 	ld	a, #0x0e
      00045F                        903 00107$:
      00045F 57               [ 2]  904 	sraw	x
      000460 90 56            [ 2]  905 	rrcw	y
      000462 4A               [ 1]  906 	dec	a
      000463 26 FA            [ 1]  907 	jrne	00107$
                                    908 ;	src\bme280.c: 314: temper_int = val1 + val2;
      000465 72 F9 07         [ 2]  909 	addw	y, (0x07, sp)
      000468 9F               [ 1]  910 	ld	a, xl
      000469 19 06            [ 1]  911 	adc	a, (0x06, sp)
      00046B 02               [ 1]  912 	rlwa	x
      00046C 19 05            [ 1]  913 	adc	a, (0x05, sp)
      00046E 95               [ 1]  914 	ld	xh, a
      00046F 90 CFu00u23      [ 2]  915 	ldw	_temper_int+2, y
      000473 CFu00u21         [ 2]  916 	ldw	_temper_int+0, x
                                    917 ;	src\bme280.c: 320: temper_float = ((temper_int * 5 + 128) >> 8);
      000476 CEu00u23         [ 2]  918 	ldw	x, _temper_int+2
      000479 89               [ 2]  919 	pushw	x
      00047A CEu00u21         [ 2]  920 	ldw	x, _temper_int+0
      00047D 89               [ 2]  921 	pushw	x
      00047E 4B 05            [ 1]  922 	push	#0x05
      000480 5F               [ 1]  923 	clrw	x
      000481 89               [ 2]  924 	pushw	x
      000482 4B 00            [ 1]  925 	push	#0x00
      000484 CDr00r00         [ 4]  926 	call	__mullong
      000487 5B 08            [ 2]  927 	addw	sp, #8
      000489 17 0D            [ 2]  928 	ldw	(0x0d, sp), y
      00048B 1C 00 80         [ 2]  929 	addw	x, #0x0080
      00048E 51               [ 1]  930 	exgw	x, y
      00048F 1E 0D            [ 2]  931 	ldw	x, (0x0d, sp)
      000491 24 01            [ 1]  932 	jrnc	00109$
      000493 5C               [ 1]  933 	incw	x
      000494                        934 00109$:
      000494 4F               [ 1]  935 	clr	a
      000495 5D               [ 2]  936 	tnzw	x
      000496 2A 01            [ 1]  937 	jrpl	00110$
      000498 4A               [ 1]  938 	dec	a
      000499                        939 00110$:
      000499 01               [ 1]  940 	rrwa	x
      00049A 90 01            [ 1]  941 	rrwa	y
      00049C 90 89            [ 2]  942 	pushw	y
      00049E 89               [ 2]  943 	pushw	x
      00049F CDr00r00         [ 4]  944 	call	___slong2fs
      0004A2 5B 04            [ 2]  945 	addw	sp, #4
                                    946 ;	src\bme280.c: 321: temper_float /= 100.0f;
      0004A4 4B 00            [ 1]  947 	push	#0x00
      0004A6 4B 00            [ 1]  948 	push	#0x00
      0004A8 4B C8            [ 1]  949 	push	#0xc8
      0004AA 4B 42            [ 1]  950 	push	#0x42
      0004AC 89               [ 2]  951 	pushw	x
      0004AD 90 89            [ 2]  952 	pushw	y
      0004AF CDr00r00         [ 4]  953 	call	___fsdiv
                                    954 ;	src\bme280.c: 323: return temper_float;
                                    955 ;	src\bme280.c: 324: }
      0004B2 5B 10            [ 2]  956 	addw	sp, #16
      0004B4 81               [ 4]  957 	ret
                                    958 ;	src\bme280.c: 355: float BME280_ReadHumidity(void) {
                                    959 ;	-----------------------------------------
                                    960 ;	 function BME280_ReadHumidity
                                    961 ;	-----------------------------------------
      0004B5                        962 _BME280_ReadHumidity:
      0004B5 52 12            [ 2]  963 	sub	sp, #18
                                    964 ;	src\bme280.c: 359: BME280_ReadTemperature(); // must be done first to get t_fine
      0004B7 CDr03r91         [ 4]  965 	call	_BME280_ReadTemperature
                                    966 ;	src\bme280.c: 360: BME280_ReadReg_S16(BME280_REGISTER_HUMIDDATA, &hum_raw);
      0004BA 96               [ 1]  967 	ldw	x, sp
      0004BB 5C               [ 1]  968 	incw	x
      0004BC A6 FD            [ 1]  969 	ld	a, #0xfd
      0004BE CDr01r98         [ 4]  970 	call	_BME280_ReadReg_S16
                                    971 ;	src\bme280.c: 367: hum_raw_sign = ((int32_t)hum_raw)&0x0000FFFF;
      0004C1 16 01            [ 2]  972 	ldw	y, (0x01, sp)
      0004C3 5F               [ 1]  973 	clrw	x
      0004C4 90 5D            [ 2]  974 	tnzw	y
      0004C6 2A 01            [ 1]  975 	jrpl	00117$
      0004C8 5A               [ 2]  976 	decw	x
      0004C9                        977 00117$:
      0004C9 0F 10            [ 1]  978 	clr	(0x10, sp)
      0004CB 0F 0F            [ 1]  979 	clr	(0x0f, sp)
                                    980 ;	src\bme280.c: 368: v_x1_u32r = (temper_int - ((int32_t)76800));
      0004CD CEu00u23         [ 2]  981 	ldw	x, _temper_int+2
      0004D0 1D 2C 00         [ 2]  982 	subw	x, #0x2c00
      0004D3 1F 05            [ 2]  983 	ldw	(0x05, sp), x
      0004D5 C6u00u22         [ 1]  984 	ld	a, _temper_int+1
      0004D8 A2 01            [ 1]  985 	sbc	a, #0x01
      0004DA 6B 04            [ 1]  986 	ld	(0x04, sp), a
      0004DC C6u00u21         [ 1]  987 	ld	a, _temper_int+0
      0004DF A2 00            [ 1]  988 	sbc	a, #0x00
                                    989 ;	src\bme280.c: 369: v_x1_u32r = (((((hum_raw_sign << 14) - (((int32_t)CalibData.dig_H4) << 20) - \
      0004E1 88               [ 1]  990 	push	a
      0004E2 1E 10            [ 2]  991 	ldw	x, (0x10, sp)
      0004E4 A6 0E            [ 1]  992 	ld	a, #0x0e
      0004E6                        993 00118$:
      0004E6 90 58            [ 2]  994 	sllw	y
      0004E8 59               [ 2]  995 	rlcw	x
      0004E9 4A               [ 1]  996 	dec	a
      0004EA 26 FA            [ 1]  997 	jrne	00118$
      0004EC 1F 0C            [ 2]  998 	ldw	(0x0c, sp), x
      0004EE 84               [ 1]  999 	pop	a
      0004EF CEu00u1C         [ 2] 1000 	ldw	x, _CalibData+28
      0004F2 1F 09            [ 2] 1001 	ldw	(0x09, sp), x
      0004F4 5F               [ 1] 1002 	clrw	x
      0004F5 0D 09            [ 1] 1003 	tnz	(0x09, sp)
      0004F7 2A 01            [ 1] 1004 	jrpl	00120$
      0004F9 5A               [ 2] 1005 	decw	x
      0004FA                       1006 00120$:
      0004FA 88               [ 1] 1007 	push	a
      0004FB 1E 0A            [ 2] 1008 	ldw	x, (0x0a, sp)
      0004FD 0F 13            [ 1] 1009 	clr	(0x13, sp)
      0004FF 0F 12            [ 1] 1010 	clr	(0x12, sp)
      000501 A6 04            [ 1] 1011 	ld	a, #0x04
      000503                       1012 00121$:
      000503 58               [ 2] 1013 	sllw	x
      000504 4A               [ 1] 1014 	dec	a
      000505 26 FC            [ 1] 1015 	jrne	00121$
      000507 84               [ 1] 1016 	pop	a
      000508 72 F2 11         [ 2] 1017 	subw	y, (0x11, sp)
      00050B 17 09            [ 2] 1018 	ldw	(0x09, sp), y
      00050D 88               [ 1] 1019 	push	a
      00050E 7B 0D            [ 1] 1020 	ld	a, (0x0d, sp)
      000510 89               [ 2] 1021 	pushw	x
      000511 12 02            [ 1] 1022 	sbc	a, (2, sp)
      000513 85               [ 2] 1023 	popw	x
      000514 6B 09            [ 1] 1024 	ld	(0x09, sp), a
      000516 7B 0C            [ 1] 1025 	ld	a, (0x0c, sp)
      000518 89               [ 2] 1026 	pushw	x
      000519 12 01            [ 1] 1027 	sbc	a, (1, sp)
      00051B 85               [ 2] 1028 	popw	x
      00051C 6B 08            [ 1] 1029 	ld	(0x08, sp), a
      00051E 84               [ 1] 1030 	pop	a
      00051F CEu00u1E         [ 2] 1031 	ldw	x, _CalibData+30
      000522 1F 11            [ 2] 1032 	ldw	(0x11, sp), x
      000524 5F               [ 1] 1033 	clrw	x
      000525 0D 11            [ 1] 1034 	tnz	(0x11, sp)
      000527 2A 01            [ 1] 1035 	jrpl	00123$
      000529 5A               [ 2] 1036 	decw	x
      00052A                       1037 00123$:
      00052A 88               [ 1] 1038 	push	a
      00052B 16 06            [ 2] 1039 	ldw	y, (0x06, sp)
      00052D 90 89            [ 2] 1040 	pushw	y
      00052F 61               [ 1] 1041 	exg	a, yl
      000530 7B 07            [ 1] 1042 	ld	a, (0x07, sp)
      000532 61               [ 1] 1043 	exg	a, yl
      000533 90 89            [ 2] 1044 	pushw	y
      000535 5B 01            [ 2] 1045 	addw	sp, #1
      000537 88               [ 1] 1046 	push	a
      000538 16 16            [ 2] 1047 	ldw	y, (0x16, sp)
      00053A 90 89            [ 2] 1048 	pushw	y
      00053C 89               [ 2] 1049 	pushw	x
      00053D CDr00r00         [ 4] 1050 	call	__mullong
      000540 5B 08            [ 2] 1051 	addw	sp, #8
      000542 1F 0E            [ 2] 1052 	ldw	(0x0e, sp), x
      000544 17 0C            [ 2] 1053 	ldw	(0x0c, sp), y
      000546 84               [ 1] 1054 	pop	a
      000547 1E 09            [ 2] 1055 	ldw	x, (0x09, sp)
      000549 72 F0 0D         [ 2] 1056 	subw	x, (0x0d, sp)
      00054C 88               [ 1] 1057 	push	a
      00054D 7B 09            [ 1] 1058 	ld	a, (0x09, sp)
      00054F 12 0D            [ 1] 1059 	sbc	a, (0x0d, sp)
      000551 6B 11            [ 1] 1060 	ld	(0x11, sp), a
      000553 7B 08            [ 1] 1061 	ld	a, (0x08, sp)
      000555 12 0C            [ 1] 1062 	sbc	a, (0x0c, sp)
      000557 6B 10            [ 1] 1063 	ld	(0x10, sp), a
      000559 84               [ 1] 1064 	pop	a
      00055A 1C 40 00         [ 2] 1065 	addw	x, #0x4000
      00055D 16 0F            [ 2] 1066 	ldw	y, (0x0f, sp)
      00055F 24 02            [ 1] 1067 	jrnc	00124$
      000561 90 5C            [ 1] 1068 	incw	y
      000563                       1069 00124$:
      000563 88               [ 1] 1070 	push	a
      000564 A6 0F            [ 1] 1071 	ld	a, #0x0f
      000566                       1072 00125$:
      000566 90 57            [ 2] 1073 	sraw	y
      000568 56               [ 2] 1074 	rrcw	x
      000569 4A               [ 1] 1075 	dec	a
      00056A 26 FA            [ 1] 1076 	jrne	00125$
      00056C 1F 0A            [ 2] 1077 	ldw	(0x0a, sp), x
      00056E 17 08            [ 2] 1078 	ldw	(0x08, sp), y
      000570 84               [ 1] 1079 	pop	a
      000571 AEr00r00         [ 2] 1080 	ldw	x, #(_CalibData+0)
      000574 88               [ 1] 1081 	push	a
      000575 E6 20            [ 1] 1082 	ld	a, (0x20, x)
      000577 97               [ 1] 1083 	ld	xl, a
      000578 49               [ 1] 1084 	rlc	a
      000579 4F               [ 1] 1085 	clr	a
      00057A A2 00            [ 1] 1086 	sbc	a, #0x00
      00057C 95               [ 1] 1087 	ld	xh, a
      00057D 6B 11            [ 1] 1088 	ld	(0x11, sp), a
      00057F 6B 10            [ 1] 1089 	ld	(0x10, sp), a
      000581 84               [ 1] 1090 	pop	a
      000582 88               [ 1] 1091 	push	a
      000583 89               [ 2] 1092 	pushw	x
      000584 1E 12            [ 2] 1093 	ldw	x, (0x12, sp)
      000586 89               [ 2] 1094 	pushw	x
      000587 1E 0A            [ 2] 1095 	ldw	x, (0x0a, sp)
      000589 89               [ 2] 1096 	pushw	x
      00058A 41               [ 1] 1097 	exg	a, xl
      00058B 7B 0B            [ 1] 1098 	ld	a, (0x0b, sp)
      00058D 41               [ 1] 1099 	exg	a, xl
      00058E 89               [ 2] 1100 	pushw	x
      00058F 5B 01            [ 2] 1101 	addw	sp, #1
      000591 88               [ 1] 1102 	push	a
      000592 CDr00r00         [ 4] 1103 	call	__mullong
      000595 5B 08            [ 2] 1104 	addw	sp, #8
      000597 4F               [ 1] 1105 	clr	a
      000598 90 5D            [ 2] 1106 	tnzw	y
      00059A 2A 01            [ 1] 1107 	jrpl	00127$
      00059C 4A               [ 1] 1108 	dec	a
      00059D                       1109 00127$:
      00059D 90 01            [ 1] 1110 	rrwa	y
      00059F 01               [ 1] 1111 	rrwa	x
      0005A0 84               [ 1] 1112 	pop	a
      0005A1 90 57            [ 2] 1113 	sraw	y
      0005A3 56               [ 2] 1114 	rrcw	x
      0005A4 90 57            [ 2] 1115 	sraw	y
      0005A6 56               [ 2] 1116 	rrcw	x
      0005A7 1F 0D            [ 2] 1117 	ldw	(0x0d, sp), x
      0005A9 17 0B            [ 2] 1118 	ldw	(0x0b, sp), y
      0005AB AEr00r00         [ 2] 1119 	ldw	x, #(_CalibData+0)
      0005AE 88               [ 1] 1120 	push	a
      0005AF E6 1B            [ 1] 1121 	ld	a, (0x1b, x)
      0005B1 97               [ 1] 1122 	ld	xl, a
      0005B2 84               [ 1] 1123 	pop	a
      0005B3 02               [ 1] 1124 	rlwa	x
      0005B4 4F               [ 1] 1125 	clr	a
      0005B5 01               [ 1] 1126 	rrwa	x
      0005B6 0F 10            [ 1] 1127 	clr	(0x10, sp)
      0005B8 0F 0F            [ 1] 1128 	clr	(0x0f, sp)
      0005BA 89               [ 2] 1129 	pushw	x
      0005BB 1E 11            [ 2] 1130 	ldw	x, (0x11, sp)
      0005BD 89               [ 2] 1131 	pushw	x
      0005BE 1E 09            [ 2] 1132 	ldw	x, (0x09, sp)
      0005C0 89               [ 2] 1133 	pushw	x
      0005C1 41               [ 1] 1134 	exg	a, xl
      0005C2 7B 0A            [ 1] 1135 	ld	a, (0x0a, sp)
      0005C4 41               [ 1] 1136 	exg	a, xl
      0005C5 89               [ 2] 1137 	pushw	x
      0005C6 5B 01            [ 2] 1138 	addw	sp, #1
      0005C8 88               [ 1] 1139 	push	a
      0005C9 CDr00r00         [ 4] 1140 	call	__mullong
      0005CC 5B 08            [ 2] 1141 	addw	sp, #8
      0005CE A6 0B            [ 1] 1142 	ld	a, #0x0b
      0005D0                       1143 00128$:
      0005D0 90 57            [ 2] 1144 	sraw	y
      0005D2 56               [ 2] 1145 	rrcw	x
      0005D3 4A               [ 1] 1146 	dec	a
      0005D4 26 FA            [ 1] 1147 	jrne	00128$
      0005D6 17 0F            [ 2] 1148 	ldw	(0x0f, sp), y
      0005D8 1C 80 00         [ 2] 1149 	addw	x, #0x8000
      0005DB 16 0F            [ 2] 1150 	ldw	y, (0x0f, sp)
      0005DD 24 02            [ 1] 1151 	jrnc	00130$
      0005DF 90 5C            [ 1] 1152 	incw	y
      0005E1                       1153 00130$:
      0005E1 89               [ 2] 1154 	pushw	x
      0005E2 90 89            [ 2] 1155 	pushw	y
      0005E4 1E 11            [ 2] 1156 	ldw	x, (0x11, sp)
      0005E6 89               [ 2] 1157 	pushw	x
      0005E7 1E 11            [ 2] 1158 	ldw	x, (0x11, sp)
      0005E9 89               [ 2] 1159 	pushw	x
      0005EA CDr00r00         [ 4] 1160 	call	__mullong
      0005ED 5B 08            [ 2] 1161 	addw	sp, #8
      0005EF 51               [ 1] 1162 	exgw	x, y
      0005F0 4F               [ 1] 1163 	clr	a
      0005F1 5D               [ 2] 1164 	tnzw	x
      0005F2 2A 01            [ 1] 1165 	jrpl	00131$
      0005F4 4A               [ 1] 1166 	dec	a
      0005F5                       1167 00131$:
      0005F5 01               [ 1] 1168 	rrwa	x
      0005F6 90 01            [ 1] 1169 	rrwa	y
      0005F8 57               [ 2] 1170 	sraw	x
      0005F9 90 56            [ 2] 1171 	rrcw	y
      0005FB 57               [ 2] 1172 	sraw	x
      0005FC 90 56            [ 2] 1173 	rrcw	y
      0005FE 1C 00 20         [ 2] 1174 	addw	x, #0x0020
      000601 1F 0B            [ 2] 1175 	ldw	(0x0b, sp), x
      000603 CEu00u19         [ 2] 1176 	ldw	x, _CalibData+25
      000606 9E               [ 1] 1177 	ld	a, xh
      000607 49               [ 1] 1178 	rlc	a
      000608 4F               [ 1] 1179 	clr	a
      000609 A2 00            [ 1] 1180 	sbc	a, #0x00
      00060B 6B 10            [ 1] 1181 	ld	(0x10, sp), a
      00060D 6B 0F            [ 1] 1182 	ld	(0x0f, sp), a
      00060F 89               [ 2] 1183 	pushw	x
      000610 1E 11            [ 2] 1184 	ldw	x, (0x11, sp)
      000612 89               [ 2] 1185 	pushw	x
      000613 90 89            [ 2] 1186 	pushw	y
      000615 1E 11            [ 2] 1187 	ldw	x, (0x11, sp)
      000617 89               [ 2] 1188 	pushw	x
      000618 CDr00r00         [ 4] 1189 	call	__mullong
      00061B 5B 08            [ 2] 1190 	addw	sp, #8
      00061D 17 0F            [ 2] 1191 	ldw	(0x0f, sp), y
      00061F 1C 20 00         [ 2] 1192 	addw	x, #0x2000
      000622 16 0F            [ 2] 1193 	ldw	y, (0x0f, sp)
      000624 24 02            [ 1] 1194 	jrnc	00132$
      000626 90 5C            [ 1] 1195 	incw	y
      000628                       1196 00132$:
      000628 A6 0E            [ 1] 1197 	ld	a, #0x0e
      00062A                       1198 00133$:
      00062A 90 57            [ 2] 1199 	sraw	y
      00062C 56               [ 2] 1200 	rrcw	x
      00062D 4A               [ 1] 1201 	dec	a
      00062E 26 FA            [ 1] 1202 	jrne	00133$
      000630 89               [ 2] 1203 	pushw	x
      000631 90 89            [ 2] 1204 	pushw	y
      000633 1E 0D            [ 2] 1205 	ldw	x, (0x0d, sp)
      000635 89               [ 2] 1206 	pushw	x
      000636 1E 0D            [ 2] 1207 	ldw	x, (0x0d, sp)
      000638 89               [ 2] 1208 	pushw	x
      000639 CDr00r00         [ 4] 1209 	call	__mullong
      00063C 5B 08            [ 2] 1210 	addw	sp, #8
      00063E 1F 0D            [ 2] 1211 	ldw	(0x0d, sp), x
                                   1212 ;	src\bme280.c: 374: v_x1_u32r = (v_x1_u32r - (((((v_x1_u32r >> 15) * (v_x1_u32r >> 15)) >> 7) * \
      000640 17 0F            [ 2] 1213 	ldw	(0x0f, sp), y
      000642 1E 0D            [ 2] 1214 	ldw	x, (0x0d, sp)
      000644 A6 0F            [ 1] 1215 	ld	a, #0x0f
      000646                       1216 00135$:
      000646 07 0F            [ 1] 1217 	sra	(0x0f, sp)
      000648 06 10            [ 1] 1218 	rrc	(0x10, sp)
      00064A 56               [ 2] 1219 	rrcw	x
      00064B 4A               [ 1] 1220 	dec	a
      00064C 26 F8            [ 1] 1221 	jrne	00135$
      00064E 90 89            [ 2] 1222 	pushw	y
      000650 89               [ 2] 1223 	pushw	x
      000651 7B 14            [ 1] 1224 	ld	a, (0x14, sp)
      000653 88               [ 1] 1225 	push	a
      000654 7B 14            [ 1] 1226 	ld	a, (0x14, sp)
      000656 88               [ 1] 1227 	push	a
      000657 89               [ 2] 1228 	pushw	x
      000658 1E 17            [ 2] 1229 	ldw	x, (0x17, sp)
      00065A 89               [ 2] 1230 	pushw	x
      00065B CDr00r00         [ 4] 1231 	call	__mullong
      00065E 5B 08            [ 2] 1232 	addw	sp, #8
      000660 61               [ 1] 1233 	exg	a, yl
      000661 6B 12            [ 1] 1234 	ld	(0x12, sp), a
      000663 61               [ 1] 1235 	exg	a, yl
      000664 90 9E            [ 1] 1236 	ld	a, yh
      000666 90 85            [ 2] 1237 	popw	y
      000668 88               [ 1] 1238 	push	a
      000669 7B 11            [ 1] 1239 	ld	a, (0x11, sp)
      00066B 6B 09            [ 1] 1240 	ld	(0x09, sp), a
      00066D 84               [ 1] 1241 	pop	a
      00066E 47               [ 1] 1242 	sra	a
      00066F 06 08            [ 1] 1243 	rrc	(0x08, sp)
      000671 56               [ 2] 1244 	rrcw	x
      000672 47               [ 1] 1245 	sra	a
      000673 06 08            [ 1] 1246 	rrc	(0x08, sp)
      000675 56               [ 2] 1247 	rrcw	x
      000676 47               [ 1] 1248 	sra	a
      000677 06 08            [ 1] 1249 	rrc	(0x08, sp)
      000679 56               [ 2] 1250 	rrcw	x
      00067A 47               [ 1] 1251 	sra	a
      00067B 06 08            [ 1] 1252 	rrc	(0x08, sp)
      00067D 56               [ 2] 1253 	rrcw	x
      00067E 47               [ 1] 1254 	sra	a
      00067F 06 08            [ 1] 1255 	rrc	(0x08, sp)
      000681 56               [ 2] 1256 	rrcw	x
      000682 47               [ 1] 1257 	sra	a
      000683 06 08            [ 1] 1258 	rrc	(0x08, sp)
      000685 56               [ 2] 1259 	rrcw	x
      000686 47               [ 1] 1260 	sra	a
      000687 06 08            [ 1] 1261 	rrc	(0x08, sp)
      000689 56               [ 2] 1262 	rrcw	x
      00068A 1F 09            [ 2] 1263 	ldw	(0x09, sp), x
      00068C 6B 07            [ 1] 1264 	ld	(0x07, sp), a
      00068E C6u00u18         [ 1] 1265 	ld	a, _CalibData+24
      000691 5F               [ 1] 1266 	clrw	x
      000692 1F 0F            [ 2] 1267 	ldw	(0x0f, sp), x
      000694 90 89            [ 2] 1268 	pushw	y
      000696 88               [ 1] 1269 	push	a
      000697 9E               [ 1] 1270 	ld	a, xh
      000698 88               [ 1] 1271 	push	a
      000699 1E 13            [ 2] 1272 	ldw	x, (0x13, sp)
      00069B 89               [ 2] 1273 	pushw	x
      00069C 1E 0F            [ 2] 1274 	ldw	x, (0x0f, sp)
      00069E 89               [ 2] 1275 	pushw	x
      00069F 1E 0F            [ 2] 1276 	ldw	x, (0x0f, sp)
      0006A1 89               [ 2] 1277 	pushw	x
      0006A2 CDr00r00         [ 4] 1278 	call	__mullong
      0006A5 5B 08            [ 2] 1279 	addw	sp, #8
      0006A7 17 11            [ 2] 1280 	ldw	(0x11, sp), y
      0006A9 90 85            [ 2] 1281 	popw	y
      0006AB 7B 10            [ 1] 1282 	ld	a, (0x10, sp)
      0006AD 07 0F            [ 1] 1283 	sra	(0x0f, sp)
      0006AF 46               [ 1] 1284 	rrc	a
      0006B0 56               [ 2] 1285 	rrcw	x
      0006B1 07 0F            [ 1] 1286 	sra	(0x0f, sp)
      0006B3 46               [ 1] 1287 	rrc	a
      0006B4 56               [ 2] 1288 	rrcw	x
      0006B5 07 0F            [ 1] 1289 	sra	(0x0f, sp)
      0006B7 46               [ 1] 1290 	rrc	a
      0006B8 56               [ 2] 1291 	rrcw	x
      0006B9 07 0F            [ 1] 1292 	sra	(0x0f, sp)
      0006BB 46               [ 1] 1293 	rrc	a
      0006BC 56               [ 2] 1294 	rrcw	x
      0006BD 1F 11            [ 2] 1295 	ldw	(0x11, sp), x
      0006BF 1E 0D            [ 2] 1296 	ldw	x, (0x0d, sp)
      0006C1 72 F0 11         [ 2] 1297 	subw	x, (0x11, sp)
      0006C4 88               [ 1] 1298 	push	a
      0006C5 90 9F            [ 1] 1299 	ld	a, yl
      0006C7 12 01            [ 1] 1300 	sbc	a, (1, sp)
      0006C9 90 02            [ 1] 1301 	rlwa	y
      0006CB 12 10            [ 1] 1302 	sbc	a, (0x10, sp)
      0006CD 90 95            [ 1] 1303 	ld	yh, a
      0006CF 84               [ 1] 1304 	pop	a
      0006D0 1F 11            [ 2] 1305 	ldw	(0x11, sp), x
      0006D2 17 0F            [ 2] 1306 	ldw	(0x0f, sp), y
                                   1307 ;	src\bme280.c: 376: v_x1_u32r = (v_x1_u32r < 0) ? 0 : v_x1_u32r;
      0006D4 0D 0F            [ 1] 1308 	tnz	(0x0f, sp)
      0006D6 2A 05            [ 1] 1309 	jrpl	00103$
      0006D8 5F               [ 1] 1310 	clrw	x
      0006D9 1F 11            [ 2] 1311 	ldw	(0x11, sp), x
      0006DB 1F 0F            [ 2] 1312 	ldw	(0x0f, sp), x
      0006DD                       1313 00103$:
                                   1314 ;	src\bme280.c: 377: v_x1_u32r = (v_x1_u32r > 419430400) ? 419430400 : v_x1_u32r;
      0006DD 5F               [ 1] 1315 	clrw	x
      0006DE 13 11            [ 2] 1316 	cpw	x, (0x11, sp)
      0006E0 4F               [ 1] 1317 	clr	a
      0006E1 12 10            [ 1] 1318 	sbc	a, (0x10, sp)
      0006E3 A6 19            [ 1] 1319 	ld	a, #0x19
      0006E5 12 0F            [ 1] 1320 	sbc	a, (0x0f, sp)
      0006E7 2E 07            [ 1] 1321 	jrsge	00105$
      0006E9 5F               [ 1] 1322 	clrw	x
      0006EA 1F 11            [ 2] 1323 	ldw	(0x11, sp), x
      0006EC AE 19 00         [ 2] 1324 	ldw	x, #0x1900
      0006EF C5                    1325 	.byte 0xc5
      0006F0                       1326 00105$:
      0006F0 1E 0F            [ 2] 1327 	ldw	x, (0x0f, sp)
      0006F2                       1328 00106$:
      0006F2 16 11            [ 2] 1329 	ldw	y, (0x11, sp)
                                   1330 ;	src\bme280.c: 378: hum_float = (v_x1_u32r >> 12);
      0006F4 A6 0C            [ 1] 1331 	ld	a, #0x0c
      0006F6                       1332 00139$:
      0006F6 57               [ 2] 1333 	sraw	x
      0006F7 90 56            [ 2] 1334 	rrcw	y
      0006F9 4A               [ 1] 1335 	dec	a
      0006FA 26 FA            [ 1] 1336 	jrne	00139$
      0006FC 90 89            [ 2] 1337 	pushw	y
      0006FE 89               [ 2] 1338 	pushw	x
      0006FF CDr00r00         [ 4] 1339 	call	___slong2fs
      000702 5B 04            [ 2] 1340 	addw	sp, #4
                                   1341 ;	src\bme280.c: 379: hum_float /= 1024.0f;
      000704 4B 00            [ 1] 1342 	push	#0x00
      000706 4B 00            [ 1] 1343 	push	#0x00
      000708 4B 80            [ 1] 1344 	push	#0x80
      00070A 4B 44            [ 1] 1345 	push	#0x44
      00070C 89               [ 2] 1346 	pushw	x
      00070D 90 89            [ 2] 1347 	pushw	y
      00070F CDr00r00         [ 4] 1348 	call	___fsdiv
                                   1349 ;	src\bme280.c: 380: return hum_float;
                                   1350 ;	src\bme280.c: 381: }
      000712 5B 12            [ 2] 1351 	addw	sp, #18
      000714 81               [ 4] 1352 	ret
                                   1353 	.area CODE
                                   1354 	.area CONST
                                   1355 	.area INITIALIZER
                                   1356 	.area CABS (ABS)
