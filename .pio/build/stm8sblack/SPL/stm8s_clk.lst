                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_clk
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CLKPrescTable
                                     12 	.globl _HSIDivFactor
                                     13 	.globl _assert_failed
                                     14 	.globl _CLK_DeInit
                                     15 	.globl _CLK_HSECmd
                                     16 	.globl _CLK_HSICmd
                                     17 	.globl _CLK_LSICmd
                                     18 	.globl _CLK_ClockSwitchCmd
                                     19 	.globl _CLK_PeripheralClockConfig
                                     20 	.globl _CLK_ClockSwitchConfig
                                     21 	.globl _CLK_HSIPrescalerConfig
                                     22 	.globl _CLK_SYSCLKConfig
                                     23 	.globl _CLK_GetClockFreq
                                     24 	.globl _CLK_GetFlagStatus
                                     25 ;--------------------------------------------------------
                                     26 ; ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area DATA
                                     29 ;--------------------------------------------------------
                                     30 ; ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area INITIALIZED
                                     33 ;--------------------------------------------------------
                                     34 ; absolute external ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area DABS (ABS)
                                     37 
                                     38 ; default segment ordering for linker
                                     39 	.area HOME
                                     40 	.area GSINIT
                                     41 	.area GSFINAL
                                     42 	.area CONST
                                     43 	.area INITIALIZER
                                     44 	.area CODE
                                     45 
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area HOME
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area HOME
                                     57 	.area HOME
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 72: void CLK_DeInit(void)
                                     63 ;	-----------------------------------------
                                     64 ;	 function CLK_DeInit
                                     65 ;	-----------------------------------------
      000000                         66 _CLK_DeInit:
                                     67 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 74: CLK->ICKR = CLK_ICKR_RESET_VALUE;
      000000 35 01 50 C0      [ 1]   68 	mov	0x50c0+0, #0x01
                                     69 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 75: CLK->ECKR = CLK_ECKR_RESET_VALUE;
      000004 35 00 50 C1      [ 1]   70 	mov	0x50c1+0, #0x00
                                     71 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 76: CLK->SWR  = CLK_SWR_RESET_VALUE;
      000008 35 E1 50 C4      [ 1]   72 	mov	0x50c4+0, #0xe1
                                     73 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 77: CLK->SWCR = CLK_SWCR_RESET_VALUE;
      00000C 35 00 50 C5      [ 1]   74 	mov	0x50c5+0, #0x00
                                     75 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 78: CLK->CKDIVR = CLK_CKDIVR_RESET_VALUE;
      000010 35 18 50 C6      [ 1]   76 	mov	0x50c6+0, #0x18
                                     77 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 79: CLK->PCKENR1 = CLK_PCKENR1_RESET_VALUE;
      000014 35 FF 50 C7      [ 1]   78 	mov	0x50c7+0, #0xff
                                     79 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 80: CLK->PCKENR2 = CLK_PCKENR2_RESET_VALUE;
      000018 35 FF 50 CA      [ 1]   80 	mov	0x50ca+0, #0xff
                                     81 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 81: CLK->CSSR = CLK_CSSR_RESET_VALUE;
      00001C 35 00 50 C8      [ 1]   82 	mov	0x50c8+0, #0x00
                                     83 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 82: CLK->CCOR = CLK_CCOR_RESET_VALUE;
      000020 35 00 50 C9      [ 1]   84 	mov	0x50c9+0, #0x00
                                     85 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 83: while ((CLK->CCOR & CLK_CCOR_CCOEN)!= 0)
      000024                         86 00101$:
      000024 72 00 50 C9 FB   [ 2]   87 	btjt	0x50c9, #0, 00101$
                                     88 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 85: CLK->CCOR = CLK_CCOR_RESET_VALUE;
      000029 35 00 50 C9      [ 1]   89 	mov	0x50c9+0, #0x00
                                     90 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 86: CLK->HSITRIMR = CLK_HSITRIMR_RESET_VALUE;
      00002D 35 00 50 CC      [ 1]   91 	mov	0x50cc+0, #0x00
                                     92 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 87: CLK->SWIMCCR = CLK_SWIMCCR_RESET_VALUE;
      000031 35 00 50 CD      [ 1]   93 	mov	0x50cd+0, #0x00
                                     94 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 88: }
      000035 81               [ 4]   95 	ret
                                     96 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 124: void CLK_HSECmd(FunctionalState NewState)
                                     97 ;	-----------------------------------------
                                     98 ;	 function CLK_HSECmd
                                     99 ;	-----------------------------------------
      000036                        100 _CLK_HSECmd:
      000036 88               [ 1]  101 	push	a
                                    102 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 127: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000037 6B 01            [ 1]  103 	ld	(0x01, sp), a
      000039 27 11            [ 1]  104 	jreq	00107$
      00003B 7B 01            [ 1]  105 	ld	a, (0x01, sp)
      00003D 4A               [ 1]  106 	dec	a
      00003E 27 0C            [ 1]  107 	jreq	00107$
      000040 4B 7F            [ 1]  108 	push	#0x7f
      000042 5F               [ 1]  109 	clrw	x
      000043 89               [ 2]  110 	pushw	x
      000044 4B 00            [ 1]  111 	push	#0x00
      000046 AEr00r0C         [ 2]  112 	ldw	x, #(___str_0+0)
      000049 CDr00r00         [ 4]  113 	call	_assert_failed
      00004C                        114 00107$:
                                    115 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 132: CLK->ECKR |= CLK_ECKR_HSEEN;
      00004C C6 50 C1         [ 1]  116 	ld	a, 0x50c1
                                    117 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 129: if (NewState != DISABLE)
      00004F 0D 01            [ 1]  118 	tnz	(0x01, sp)
      000051 27 07            [ 1]  119 	jreq	00102$
                                    120 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 132: CLK->ECKR |= CLK_ECKR_HSEEN;
      000053 AA 01            [ 1]  121 	or	a, #0x01
      000055 C7 50 C1         [ 1]  122 	ld	0x50c1, a
      000058 20 05            [ 2]  123 	jra	00104$
      00005A                        124 00102$:
                                    125 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 137: CLK->ECKR &= (uint8_t)(~CLK_ECKR_HSEEN);
      00005A A4 FE            [ 1]  126 	and	a, #0xfe
      00005C C7 50 C1         [ 1]  127 	ld	0x50c1, a
      00005F                        128 00104$:
                                    129 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 139: }
      00005F 84               [ 1]  130 	pop	a
      000060 81               [ 4]  131 	ret
                                    132 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 146: void CLK_HSICmd(FunctionalState NewState)
                                    133 ;	-----------------------------------------
                                    134 ;	 function CLK_HSICmd
                                    135 ;	-----------------------------------------
      000061                        136 _CLK_HSICmd:
      000061 88               [ 1]  137 	push	a
                                    138 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 149: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000062 6B 01            [ 1]  139 	ld	(0x01, sp), a
      000064 27 11            [ 1]  140 	jreq	00107$
      000066 7B 01            [ 1]  141 	ld	a, (0x01, sp)
      000068 4A               [ 1]  142 	dec	a
      000069 27 0C            [ 1]  143 	jreq	00107$
      00006B 4B 95            [ 1]  144 	push	#0x95
      00006D 5F               [ 1]  145 	clrw	x
      00006E 89               [ 2]  146 	pushw	x
      00006F 4B 00            [ 1]  147 	push	#0x00
      000071 AEr00r0C         [ 2]  148 	ldw	x, #(___str_0+0)
      000074 CDr00r00         [ 4]  149 	call	_assert_failed
      000077                        150 00107$:
                                    151 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 154: CLK->ICKR |= CLK_ICKR_HSIEN;
      000077 C6 50 C0         [ 1]  152 	ld	a, 0x50c0
                                    153 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 151: if (NewState != DISABLE)
      00007A 0D 01            [ 1]  154 	tnz	(0x01, sp)
      00007C 27 07            [ 1]  155 	jreq	00102$
                                    156 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 154: CLK->ICKR |= CLK_ICKR_HSIEN;
      00007E AA 01            [ 1]  157 	or	a, #0x01
      000080 C7 50 C0         [ 1]  158 	ld	0x50c0, a
      000083 20 05            [ 2]  159 	jra	00104$
      000085                        160 00102$:
                                    161 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 159: CLK->ICKR &= (uint8_t)(~CLK_ICKR_HSIEN);
      000085 A4 FE            [ 1]  162 	and	a, #0xfe
      000087 C7 50 C0         [ 1]  163 	ld	0x50c0, a
      00008A                        164 00104$:
                                    165 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 161: }
      00008A 84               [ 1]  166 	pop	a
      00008B 81               [ 4]  167 	ret
                                    168 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 169: void CLK_LSICmd(FunctionalState NewState)
                                    169 ;	-----------------------------------------
                                    170 ;	 function CLK_LSICmd
                                    171 ;	-----------------------------------------
      00008C                        172 _CLK_LSICmd:
      00008C 88               [ 1]  173 	push	a
                                    174 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 172: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00008D 6B 01            [ 1]  175 	ld	(0x01, sp), a
      00008F 27 11            [ 1]  176 	jreq	00107$
      000091 7B 01            [ 1]  177 	ld	a, (0x01, sp)
      000093 4A               [ 1]  178 	dec	a
      000094 27 0C            [ 1]  179 	jreq	00107$
      000096 4B AC            [ 1]  180 	push	#0xac
      000098 5F               [ 1]  181 	clrw	x
      000099 89               [ 2]  182 	pushw	x
      00009A 4B 00            [ 1]  183 	push	#0x00
      00009C AEr00r0C         [ 2]  184 	ldw	x, #(___str_0+0)
      00009F CDr00r00         [ 4]  185 	call	_assert_failed
      0000A2                        186 00107$:
                                    187 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 177: CLK->ICKR |= CLK_ICKR_LSIEN;
      0000A2 C6 50 C0         [ 1]  188 	ld	a, 0x50c0
                                    189 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 174: if (NewState != DISABLE)
      0000A5 0D 01            [ 1]  190 	tnz	(0x01, sp)
      0000A7 27 07            [ 1]  191 	jreq	00102$
                                    192 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 177: CLK->ICKR |= CLK_ICKR_LSIEN;
      0000A9 AA 08            [ 1]  193 	or	a, #0x08
      0000AB C7 50 C0         [ 1]  194 	ld	0x50c0, a
      0000AE 20 05            [ 2]  195 	jra	00104$
      0000B0                        196 00102$:
                                    197 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 182: CLK->ICKR &= (uint8_t)(~CLK_ICKR_LSIEN);
      0000B0 A4 F7            [ 1]  198 	and	a, #0xf7
      0000B2 C7 50 C0         [ 1]  199 	ld	0x50c0, a
      0000B5                        200 00104$:
                                    201 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 184: }
      0000B5 84               [ 1]  202 	pop	a
      0000B6 81               [ 4]  203 	ret
                                    204 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 218: void CLK_ClockSwitchCmd(FunctionalState NewState)
                                    205 ;	-----------------------------------------
                                    206 ;	 function CLK_ClockSwitchCmd
                                    207 ;	-----------------------------------------
      0000B7                        208 _CLK_ClockSwitchCmd:
      0000B7 88               [ 1]  209 	push	a
                                    210 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 221: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0000B8 6B 01            [ 1]  211 	ld	(0x01, sp), a
      0000BA 27 11            [ 1]  212 	jreq	00107$
      0000BC 7B 01            [ 1]  213 	ld	a, (0x01, sp)
      0000BE 4A               [ 1]  214 	dec	a
      0000BF 27 0C            [ 1]  215 	jreq	00107$
      0000C1 4B DD            [ 1]  216 	push	#0xdd
      0000C3 5F               [ 1]  217 	clrw	x
      0000C4 89               [ 2]  218 	pushw	x
      0000C5 4B 00            [ 1]  219 	push	#0x00
      0000C7 AEr00r0C         [ 2]  220 	ldw	x, #(___str_0+0)
      0000CA CDr00r00         [ 4]  221 	call	_assert_failed
      0000CD                        222 00107$:
                                    223 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 226: CLK->SWCR |= CLK_SWCR_SWEN;
      0000CD C6 50 C5         [ 1]  224 	ld	a, 0x50c5
                                    225 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 223: if (NewState != DISABLE )
      0000D0 0D 01            [ 1]  226 	tnz	(0x01, sp)
      0000D2 27 07            [ 1]  227 	jreq	00102$
                                    228 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 226: CLK->SWCR |= CLK_SWCR_SWEN;
      0000D4 AA 02            [ 1]  229 	or	a, #0x02
      0000D6 C7 50 C5         [ 1]  230 	ld	0x50c5, a
      0000D9 20 05            [ 2]  231 	jra	00104$
      0000DB                        232 00102$:
                                    233 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 231: CLK->SWCR &= (uint8_t)(~CLK_SWCR_SWEN);
      0000DB A4 FD            [ 1]  234 	and	a, #0xfd
      0000DD C7 50 C5         [ 1]  235 	ld	0x50c5, a
      0000E0                        236 00104$:
                                    237 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 233: }
      0000E0 84               [ 1]  238 	pop	a
      0000E1 81               [ 4]  239 	ret
                                    240 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 270: void CLK_PeripheralClockConfig(CLK_Peripheral_TypeDef CLK_Peripheral, FunctionalState NewState)
                                    241 ;	-----------------------------------------
                                    242 ;	 function CLK_PeripheralClockConfig
                                    243 ;	-----------------------------------------
      0000E2                        244 _CLK_PeripheralClockConfig:
      0000E2 52 03            [ 2]  245 	sub	sp, #3
      0000E4 6B 03            [ 1]  246 	ld	(0x03, sp), a
                                    247 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 273: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0000E6 0D 06            [ 1]  248 	tnz	(0x06, sp)
      0000E8 27 11            [ 1]  249 	jreq	00113$
      0000EA 7B 06            [ 1]  250 	ld	a, (0x06, sp)
      0000EC 4A               [ 1]  251 	dec	a
      0000ED 27 0C            [ 1]  252 	jreq	00113$
      0000EF 4B 11            [ 1]  253 	push	#0x11
      0000F1 4B 01            [ 1]  254 	push	#0x01
      0000F3 5F               [ 1]  255 	clrw	x
      0000F4 89               [ 2]  256 	pushw	x
      0000F5 AEr00r0C         [ 2]  257 	ldw	x, #(___str_0+0)
      0000F8 CDr00r00         [ 4]  258 	call	_assert_failed
      0000FB                        259 00113$:
                                    260 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 274: assert_param(IS_CLK_PERIPHERAL_OK(CLK_Peripheral));
      0000FB 0D 03            [ 1]  261 	tnz	(0x03, sp)
      0000FD 27 64            [ 1]  262 	jreq	00118$
      0000FF 7B 03            [ 1]  263 	ld	a, (0x03, sp)
      000101 4A               [ 1]  264 	dec	a
      000102 27 5F            [ 1]  265 	jreq	00118$
      000104 7B 03            [ 1]  266 	ld	a, (0x03, sp)
      000106 A0 03            [ 1]  267 	sub	a, #0x03
      000108 26 02            [ 1]  268 	jrne	00262$
      00010A 4C               [ 1]  269 	inc	a
      00010B 21                     270 	.byte 0x21
      00010C                        271 00262$:
      00010C 4F               [ 1]  272 	clr	a
      00010D                        273 00263$:
      00010D 4D               [ 1]  274 	tnz	a
      00010E 26 53            [ 1]  275 	jrne	00118$
      000110 4D               [ 1]  276 	tnz	a
      000111 26 50            [ 1]  277 	jrne	00118$
      000113 4D               [ 1]  278 	tnz	a
      000114 26 4D            [ 1]  279 	jrne	00118$
      000116 7B 03            [ 1]  280 	ld	a, (0x03, sp)
      000118 A0 04            [ 1]  281 	sub	a, #0x04
      00011A 26 04            [ 1]  282 	jrne	00268$
      00011C 4C               [ 1]  283 	inc	a
      00011D 97               [ 1]  284 	ld	xl, a
      00011E 20 02            [ 2]  285 	jra	00269$
      000120                        286 00268$:
      000120 4F               [ 1]  287 	clr	a
      000121 97               [ 1]  288 	ld	xl, a
      000122                        289 00269$:
      000122 9F               [ 1]  290 	ld	a, xl
      000123 4D               [ 1]  291 	tnz	a
      000124 26 3D            [ 1]  292 	jrne	00118$
      000126 7B 03            [ 1]  293 	ld	a, (0x03, sp)
      000128 A0 05            [ 1]  294 	sub	a, #0x05
      00012A 26 02            [ 1]  295 	jrne	00272$
      00012C 4C               [ 1]  296 	inc	a
      00012D 21                     297 	.byte 0x21
      00012E                        298 00272$:
      00012E 4F               [ 1]  299 	clr	a
      00012F                        300 00273$:
      00012F 4D               [ 1]  301 	tnz	a
      000130 26 31            [ 1]  302 	jrne	00118$
      000132 4D               [ 1]  303 	tnz	a
      000133 26 2E            [ 1]  304 	jrne	00118$
      000135 9F               [ 1]  305 	ld	a, xl
      000136 4D               [ 1]  306 	tnz	a
      000137 26 2A            [ 1]  307 	jrne	00118$
      000139 7B 03            [ 1]  308 	ld	a, (0x03, sp)
      00013B A1 06            [ 1]  309 	cp	a, #0x06
      00013D 27 24            [ 1]  310 	jreq	00118$
      00013F 7B 03            [ 1]  311 	ld	a, (0x03, sp)
      000141 A1 07            [ 1]  312 	cp	a, #0x07
      000143 27 1E            [ 1]  313 	jreq	00118$
      000145 7B 03            [ 1]  314 	ld	a, (0x03, sp)
      000147 A1 17            [ 1]  315 	cp	a, #0x17
      000149 27 18            [ 1]  316 	jreq	00118$
      00014B 7B 03            [ 1]  317 	ld	a, (0x03, sp)
      00014D A1 13            [ 1]  318 	cp	a, #0x13
      00014F 27 12            [ 1]  319 	jreq	00118$
      000151 7B 03            [ 1]  320 	ld	a, (0x03, sp)
      000153 A1 12            [ 1]  321 	cp	a, #0x12
      000155 27 0C            [ 1]  322 	jreq	00118$
      000157 4B 12            [ 1]  323 	push	#0x12
      000159 4B 01            [ 1]  324 	push	#0x01
      00015B 5F               [ 1]  325 	clrw	x
      00015C 89               [ 2]  326 	pushw	x
      00015D AEr00r0C         [ 2]  327 	ldw	x, #(___str_0+0)
      000160 CDr00r00         [ 4]  328 	call	_assert_failed
      000163                        329 00118$:
                                    330 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 281: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      000163 7B 03            [ 1]  331 	ld	a, (0x03, sp)
      000165 A4 0F            [ 1]  332 	and	a, #0x0f
      000167 88               [ 1]  333 	push	a
      000168 A6 01            [ 1]  334 	ld	a, #0x01
      00016A 6B 02            [ 1]  335 	ld	(0x02, sp), a
      00016C 84               [ 1]  336 	pop	a
      00016D 4D               [ 1]  337 	tnz	a
      00016E 27 05            [ 1]  338 	jreq	00293$
      000170                        339 00292$:
      000170 08 01            [ 1]  340 	sll	(0x01, sp)
      000172 4A               [ 1]  341 	dec	a
      000173 26 FB            [ 1]  342 	jrne	00292$
      000175                        343 00293$:
                                    344 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 286: CLK->PCKENR1 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      000175 7B 01            [ 1]  345 	ld	a, (0x01, sp)
      000177 43               [ 1]  346 	cpl	a
      000178 6B 02            [ 1]  347 	ld	(0x02, sp), a
                                    348 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 276: if (((uint8_t)CLK_Peripheral & (uint8_t)0x10) == 0x00)
      00017A 7B 03            [ 1]  349 	ld	a, (0x03, sp)
      00017C A5 10            [ 1]  350 	bcp	a, #0x10
      00017E 26 15            [ 1]  351 	jrne	00108$
                                    352 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 281: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      000180 C6 50 C7         [ 1]  353 	ld	a, 0x50c7
                                    354 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 278: if (NewState != DISABLE)
      000183 0D 06            [ 1]  355 	tnz	(0x06, sp)
      000185 27 07            [ 1]  356 	jreq	00102$
                                    357 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 281: CLK->PCKENR1 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      000187 1A 01            [ 1]  358 	or	a, (0x01, sp)
      000189 C7 50 C7         [ 1]  359 	ld	0x50c7, a
      00018C 20 1A            [ 2]  360 	jra	00110$
      00018E                        361 00102$:
                                    362 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 286: CLK->PCKENR1 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      00018E 14 02            [ 1]  363 	and	a, (0x02, sp)
      000190 C7 50 C7         [ 1]  364 	ld	0x50c7, a
      000193 20 13            [ 2]  365 	jra	00110$
      000195                        366 00108$:
                                    367 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 294: CLK->PCKENR2 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      000195 C6 50 CA         [ 1]  368 	ld	a, 0x50ca
                                    369 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 291: if (NewState != DISABLE)
      000198 0D 06            [ 1]  370 	tnz	(0x06, sp)
      00019A 27 07            [ 1]  371 	jreq	00105$
                                    372 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 294: CLK->PCKENR2 |= (uint8_t)((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F));
      00019C 1A 01            [ 1]  373 	or	a, (0x01, sp)
      00019E C7 50 CA         [ 1]  374 	ld	0x50ca, a
      0001A1 20 05            [ 2]  375 	jra	00110$
      0001A3                        376 00105$:
                                    377 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 299: CLK->PCKENR2 &= (uint8_t)(~(uint8_t)(((uint8_t)1 << ((uint8_t)CLK_Peripheral & (uint8_t)0x0F))));
      0001A3 14 02            [ 1]  378 	and	a, (0x02, sp)
      0001A5 C7 50 CA         [ 1]  379 	ld	0x50ca, a
      0001A8                        380 00110$:
                                    381 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 302: }
      0001A8 5B 03            [ 2]  382 	addw	sp, #3
      0001AA 85               [ 2]  383 	popw	x
      0001AB 84               [ 1]  384 	pop	a
      0001AC FC               [ 2]  385 	jp	(x)
                                    386 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 316: ErrorStatus CLK_ClockSwitchConfig(CLK_SwitchMode_TypeDef CLK_SwitchMode, CLK_Source_TypeDef CLK_NewClock, FunctionalState ITState, CLK_CurrentClockState_TypeDef CLK_CurrentClockState)
                                    387 ;	-----------------------------------------
                                    388 ;	 function CLK_ClockSwitchConfig
                                    389 ;	-----------------------------------------
      0001AD                        390 _CLK_ClockSwitchConfig:
      0001AD 89               [ 2]  391 	pushw	x
      0001AE 6B 02            [ 1]  392 	ld	(0x02, sp), a
                                    393 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 323: assert_param(IS_CLK_SOURCE_OK(CLK_NewClock));
      0001B0 7B 05            [ 1]  394 	ld	a, (0x05, sp)
      0001B2 A1 E1            [ 1]  395 	cp	a, #0xe1
      0001B4 27 18            [ 1]  396 	jreq	00140$
      0001B6 7B 05            [ 1]  397 	ld	a, (0x05, sp)
      0001B8 A1 D2            [ 1]  398 	cp	a, #0xd2
      0001BA 27 12            [ 1]  399 	jreq	00140$
      0001BC 7B 05            [ 1]  400 	ld	a, (0x05, sp)
      0001BE A1 B4            [ 1]  401 	cp	a, #0xb4
      0001C0 27 0C            [ 1]  402 	jreq	00140$
      0001C2 4B 43            [ 1]  403 	push	#0x43
      0001C4 4B 01            [ 1]  404 	push	#0x01
      0001C6 5F               [ 1]  405 	clrw	x
      0001C7 89               [ 2]  406 	pushw	x
      0001C8 AEr00r0C         [ 2]  407 	ldw	x, #(___str_0+0)
      0001CB CDr00r00         [ 4]  408 	call	_assert_failed
      0001CE                        409 00140$:
                                    410 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 324: assert_param(IS_CLK_SWITCHMODE_OK(CLK_SwitchMode));
      0001CE 7B 02            [ 1]  411 	ld	a, (0x02, sp)
      0001D0 4A               [ 1]  412 	dec	a
      0001D1 26 05            [ 1]  413 	jrne	00309$
      0001D3 A6 01            [ 1]  414 	ld	a, #0x01
      0001D5 6B 01            [ 1]  415 	ld	(0x01, sp), a
      0001D7 C5                     416 	.byte 0xc5
      0001D8                        417 00309$:
      0001D8 0F 01            [ 1]  418 	clr	(0x01, sp)
      0001DA                        419 00310$:
      0001DA 0D 02            [ 1]  420 	tnz	(0x02, sp)
      0001DC 27 10            [ 1]  421 	jreq	00148$
      0001DE 0D 01            [ 1]  422 	tnz	(0x01, sp)
      0001E0 26 0C            [ 1]  423 	jrne	00148$
      0001E2 4B 44            [ 1]  424 	push	#0x44
      0001E4 4B 01            [ 1]  425 	push	#0x01
      0001E6 5F               [ 1]  426 	clrw	x
      0001E7 89               [ 2]  427 	pushw	x
      0001E8 AEr00r0C         [ 2]  428 	ldw	x, #(___str_0+0)
      0001EB CDr00r00         [ 4]  429 	call	_assert_failed
      0001EE                        430 00148$:
                                    431 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 325: assert_param(IS_FUNCTIONALSTATE_OK(ITState));
      0001EE 0D 06            [ 1]  432 	tnz	(0x06, sp)
      0001F0 27 11            [ 1]  433 	jreq	00153$
      0001F2 7B 06            [ 1]  434 	ld	a, (0x06, sp)
      0001F4 4A               [ 1]  435 	dec	a
      0001F5 27 0C            [ 1]  436 	jreq	00153$
      0001F7 4B 45            [ 1]  437 	push	#0x45
      0001F9 4B 01            [ 1]  438 	push	#0x01
      0001FB 5F               [ 1]  439 	clrw	x
      0001FC 89               [ 2]  440 	pushw	x
      0001FD AEr00r0C         [ 2]  441 	ldw	x, #(___str_0+0)
      000200 CDr00r00         [ 4]  442 	call	_assert_failed
      000203                        443 00153$:
                                    444 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 326: assert_param(IS_CLK_CURRENTCLOCKSTATE_OK(CLK_CurrentClockState));
      000203 0D 07            [ 1]  445 	tnz	(0x07, sp)
      000205 27 11            [ 1]  446 	jreq	00158$
      000207 7B 07            [ 1]  447 	ld	a, (0x07, sp)
      000209 4A               [ 1]  448 	dec	a
      00020A 27 0C            [ 1]  449 	jreq	00158$
      00020C 4B 46            [ 1]  450 	push	#0x46
      00020E 4B 01            [ 1]  451 	push	#0x01
      000210 5F               [ 1]  452 	clrw	x
      000211 89               [ 2]  453 	pushw	x
      000212 AEr00r0C         [ 2]  454 	ldw	x, #(___str_0+0)
      000215 CDr00r00         [ 4]  455 	call	_assert_failed
      000218                        456 00158$:
                                    457 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 329: clock_master = (CLK_Source_TypeDef)CLK->CMSR;
      000218 C6 50 C3         [ 1]  458 	ld	a, 0x50c3
      00021B 90 97            [ 1]  459 	ld	yl, a
                                    460 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 335: CLK->SWCR |= CLK_SWCR_SWEN;
      00021D C6 50 C5         [ 1]  461 	ld	a, 0x50c5
      000220 97               [ 1]  462 	ld	xl, a
                                    463 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 332: if (CLK_SwitchMode == CLK_SWITCHMODE_AUTO)
      000221 7B 01            [ 1]  464 	ld	a, (0x01, sp)
      000223 27 37            [ 1]  465 	jreq	00122$
                                    466 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 335: CLK->SWCR |= CLK_SWCR_SWEN;
      000225 9F               [ 1]  467 	ld	a, xl
      000226 AA 02            [ 1]  468 	or	a, #0x02
      000228 C7 50 C5         [ 1]  469 	ld	0x50c5, a
      00022B C6 50 C5         [ 1]  470 	ld	a, 0x50c5
                                    471 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 338: if (ITState != DISABLE)
      00022E 0D 06            [ 1]  472 	tnz	(0x06, sp)
      000230 27 07            [ 1]  473 	jreq	00102$
                                    474 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 340: CLK->SWCR |= CLK_SWCR_SWIEN;
      000232 AA 04            [ 1]  475 	or	a, #0x04
      000234 C7 50 C5         [ 1]  476 	ld	0x50c5, a
      000237 20 05            [ 2]  477 	jra	00103$
      000239                        478 00102$:
                                    479 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 344: CLK->SWCR &= (uint8_t)(~CLK_SWCR_SWIEN);
      000239 A4 FB            [ 1]  480 	and	a, #0xfb
      00023B C7 50 C5         [ 1]  481 	ld	0x50c5, a
      00023E                        482 00103$:
                                    483 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 348: CLK->SWR = (uint8_t)CLK_NewClock;
      00023E AE 50 C4         [ 2]  484 	ldw	x, #0x50c4
      000241 7B 05            [ 1]  485 	ld	a, (0x05, sp)
      000243 F7               [ 1]  486 	ld	(x), a
                                    487 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 351: while((((CLK->SWCR & CLK_SWCR_SWBSY) != 0 )&& (DownCounter != 0)))
      000244 5F               [ 1]  488 	clrw	x
      000245 5A               [ 2]  489 	decw	x
      000246                        490 00105$:
      000246 72 01 50 C5 06   [ 2]  491 	btjf	0x50c5, #0, 00107$
      00024B 5D               [ 2]  492 	tnzw	x
      00024C 27 03            [ 1]  493 	jreq	00107$
                                    494 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 353: DownCounter--;
      00024E 5A               [ 2]  495 	decw	x
      00024F 20 F5            [ 2]  496 	jra	00105$
      000251                        497 00107$:
                                    498 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 356: if(DownCounter != 0)
      000251 5D               [ 2]  499 	tnzw	x
      000252 27 05            [ 1]  500 	jreq	00109$
                                    501 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 358: Swif = SUCCESS;
      000254 A6 01            [ 1]  502 	ld	a, #0x01
      000256 97               [ 1]  503 	ld	xl, a
      000257 20 34            [ 2]  504 	jra	00123$
      000259                        505 00109$:
                                    506 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 362: Swif = ERROR;
      000259 5F               [ 1]  507 	clrw	x
      00025A 20 31            [ 2]  508 	jra	00123$
      00025C                        509 00122$:
                                    510 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 368: if (ITState != DISABLE)
      00025C 0D 06            [ 1]  511 	tnz	(0x06, sp)
      00025E 27 08            [ 1]  512 	jreq	00112$
                                    513 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 370: CLK->SWCR |= CLK_SWCR_SWIEN;
      000260 9F               [ 1]  514 	ld	a, xl
      000261 AA 04            [ 1]  515 	or	a, #0x04
      000263 C7 50 C5         [ 1]  516 	ld	0x50c5, a
      000266 20 06            [ 2]  517 	jra	00113$
      000268                        518 00112$:
                                    519 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 374: CLK->SWCR &= (uint8_t)(~CLK_SWCR_SWIEN);
      000268 9F               [ 1]  520 	ld	a, xl
      000269 A4 FB            [ 1]  521 	and	a, #0xfb
      00026B C7 50 C5         [ 1]  522 	ld	0x50c5, a
      00026E                        523 00113$:
                                    524 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 378: CLK->SWR = (uint8_t)CLK_NewClock;
      00026E AE 50 C4         [ 2]  525 	ldw	x, #0x50c4
      000271 7B 05            [ 1]  526 	ld	a, (0x05, sp)
      000273 F7               [ 1]  527 	ld	(x), a
                                    528 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 381: while((((CLK->SWCR & CLK_SWCR_SWIF) != 0 ) && (DownCounter != 0)))
      000274 5F               [ 1]  529 	clrw	x
      000275 5A               [ 2]  530 	decw	x
      000276                        531 00115$:
      000276 72 07 50 C5 06   [ 2]  532 	btjf	0x50c5, #3, 00117$
      00027B 5D               [ 2]  533 	tnzw	x
      00027C 27 03            [ 1]  534 	jreq	00117$
                                    535 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 383: DownCounter--;
      00027E 5A               [ 2]  536 	decw	x
      00027F 20 F5            [ 2]  537 	jra	00115$
      000281                        538 00117$:
                                    539 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 386: if(DownCounter != 0)
      000281 5D               [ 2]  540 	tnzw	x
      000282 27 08            [ 1]  541 	jreq	00119$
                                    542 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 389: CLK->SWCR |= CLK_SWCR_SWEN;
      000284 72 12 50 C5      [ 1]  543 	bset	0x50c5, #1
                                    544 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 390: Swif = SUCCESS;
      000288 A6 01            [ 1]  545 	ld	a, #0x01
      00028A 97               [ 1]  546 	ld	xl, a
                                    547 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 394: Swif = ERROR;
      00028B 21                     548 	.byte 0x21
      00028C                        549 00119$:
      00028C 5F               [ 1]  550 	clrw	x
      00028D                        551 00123$:
                                    552 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 397: if(Swif != ERROR)
      00028D 9F               [ 1]  553 	ld	a, xl
      00028E 4D               [ 1]  554 	tnz	a
      00028F 27 2E            [ 1]  555 	jreq	00136$
                                    556 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 400: if((CLK_CurrentClockState == CLK_CURRENTCLOCKSTATE_DISABLE) && ( clock_master == CLK_SOURCE_HSI))
      000291 0D 07            [ 1]  557 	tnz	(0x07, sp)
      000293 26 0C            [ 1]  558 	jrne	00132$
      000295 90 9F            [ 1]  559 	ld	a, yl
      000297 A1 E1            [ 1]  560 	cp	a, #0xe1
      000299 26 06            [ 1]  561 	jrne	00132$
                                    562 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 402: CLK->ICKR &= (uint8_t)(~CLK_ICKR_HSIEN);
      00029B 72 11 50 C0      [ 1]  563 	bres	0x50c0, #0
      00029F 20 1E            [ 2]  564 	jra	00136$
      0002A1                        565 00132$:
                                    566 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 404: else if((CLK_CurrentClockState == CLK_CURRENTCLOCKSTATE_DISABLE) && ( clock_master == CLK_SOURCE_LSI))
      0002A1 0D 07            [ 1]  567 	tnz	(0x07, sp)
      0002A3 26 0C            [ 1]  568 	jrne	00128$
      0002A5 90 9F            [ 1]  569 	ld	a, yl
      0002A7 A1 D2            [ 1]  570 	cp	a, #0xd2
      0002A9 26 06            [ 1]  571 	jrne	00128$
                                    572 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 406: CLK->ICKR &= (uint8_t)(~CLK_ICKR_LSIEN);
      0002AB 72 17 50 C0      [ 1]  573 	bres	0x50c0, #3
      0002AF 20 0E            [ 2]  574 	jra	00136$
      0002B1                        575 00128$:
                                    576 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 408: else if ((CLK_CurrentClockState == CLK_CURRENTCLOCKSTATE_DISABLE) && ( clock_master == CLK_SOURCE_HSE))
      0002B1 0D 07            [ 1]  577 	tnz	(0x07, sp)
      0002B3 26 0A            [ 1]  578 	jrne	00136$
      0002B5 90 9F            [ 1]  579 	ld	a, yl
      0002B7 A1 B4            [ 1]  580 	cp	a, #0xb4
      0002B9 26 04            [ 1]  581 	jrne	00136$
                                    582 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 410: CLK->ECKR &= (uint8_t)(~CLK_ECKR_HSEEN);
      0002BB 72 11 50 C1      [ 1]  583 	bres	0x50c1, #0
      0002BF                        584 00136$:
                                    585 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 413: return(Swif);
      0002BF 9F               [ 1]  586 	ld	a, xl
                                    587 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 414: }
      0002C0 1E 03            [ 2]  588 	ldw	x, (3, sp)
      0002C2 5B 07            [ 2]  589 	addw	sp, #7
      0002C4 FC               [ 2]  590 	jp	(x)
                                    591 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 422: void CLK_HSIPrescalerConfig(CLK_Prescaler_TypeDef HSIPrescaler)
                                    592 ;	-----------------------------------------
                                    593 ;	 function CLK_HSIPrescalerConfig
                                    594 ;	-----------------------------------------
      0002C5                        595 _CLK_HSIPrescalerConfig:
      0002C5 88               [ 1]  596 	push	a
                                    597 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 425: assert_param(IS_CLK_HSIPRESCALER_OK(HSIPrescaler));
      0002C6 6B 01            [ 1]  598 	ld	(0x01, sp), a
      0002C8 27 1E            [ 1]  599 	jreq	00104$
      0002CA 7B 01            [ 1]  600 	ld	a, (0x01, sp)
      0002CC A1 08            [ 1]  601 	cp	a, #0x08
      0002CE 27 18            [ 1]  602 	jreq	00104$
      0002D0 7B 01            [ 1]  603 	ld	a, (0x01, sp)
      0002D2 A1 10            [ 1]  604 	cp	a, #0x10
      0002D4 27 12            [ 1]  605 	jreq	00104$
      0002D6 7B 01            [ 1]  606 	ld	a, (0x01, sp)
      0002D8 A1 18            [ 1]  607 	cp	a, #0x18
      0002DA 27 0C            [ 1]  608 	jreq	00104$
      0002DC 4B A9            [ 1]  609 	push	#0xa9
      0002DE 4B 01            [ 1]  610 	push	#0x01
      0002E0 5F               [ 1]  611 	clrw	x
      0002E1 89               [ 2]  612 	pushw	x
      0002E2 AEr00r0C         [ 2]  613 	ldw	x, #(___str_0+0)
      0002E5 CDr00r00         [ 4]  614 	call	_assert_failed
      0002E8                        615 00104$:
                                    616 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 428: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      0002E8 C6 50 C6         [ 1]  617 	ld	a, 0x50c6
      0002EB A4 E7            [ 1]  618 	and	a, #0xe7
      0002ED C7 50 C6         [ 1]  619 	ld	0x50c6, a
                                    620 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 431: CLK->CKDIVR |= (uint8_t)HSIPrescaler;
      0002F0 C6 50 C6         [ 1]  621 	ld	a, 0x50c6
      0002F3 1A 01            [ 1]  622 	or	a, (0x01, sp)
      0002F5 C7 50 C6         [ 1]  623 	ld	0x50c6, a
                                    624 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 432: }
      0002F8 84               [ 1]  625 	pop	a
      0002F9 81               [ 4]  626 	ret
                                    627 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 511: void CLK_SYSCLKConfig(CLK_Prescaler_TypeDef CLK_Prescaler)
                                    628 ;	-----------------------------------------
                                    629 ;	 function CLK_SYSCLKConfig
                                    630 ;	-----------------------------------------
      0002FA                        631 _CLK_SYSCLKConfig:
      0002FA 88               [ 1]  632 	push	a
                                    633 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 514: assert_param(IS_CLK_PRESCALER_OK(CLK_Prescaler));
      0002FB 95               [ 1]  634 	ld	xh, a
      0002FC 4D               [ 1]  635 	tnz	a
      0002FD 27 4A            [ 1]  636 	jreq	00107$
      0002FF 9E               [ 1]  637 	ld	a, xh
      000300 A1 08            [ 1]  638 	cp	a, #0x08
      000302 27 45            [ 1]  639 	jreq	00107$
      000304 9E               [ 1]  640 	ld	a, xh
      000305 A1 10            [ 1]  641 	cp	a, #0x10
      000307 27 40            [ 1]  642 	jreq	00107$
      000309 9E               [ 1]  643 	ld	a, xh
      00030A A1 18            [ 1]  644 	cp	a, #0x18
      00030C 27 3B            [ 1]  645 	jreq	00107$
      00030E 9E               [ 1]  646 	ld	a, xh
      00030F A1 80            [ 1]  647 	cp	a, #0x80
      000311 27 36            [ 1]  648 	jreq	00107$
      000313 9E               [ 1]  649 	ld	a, xh
      000314 A1 81            [ 1]  650 	cp	a, #0x81
      000316 27 31            [ 1]  651 	jreq	00107$
      000318 9E               [ 1]  652 	ld	a, xh
      000319 A1 82            [ 1]  653 	cp	a, #0x82
      00031B 27 2C            [ 1]  654 	jreq	00107$
      00031D 9E               [ 1]  655 	ld	a, xh
      00031E A1 83            [ 1]  656 	cp	a, #0x83
      000320 27 27            [ 1]  657 	jreq	00107$
      000322 9E               [ 1]  658 	ld	a, xh
      000323 A1 84            [ 1]  659 	cp	a, #0x84
      000325 27 22            [ 1]  660 	jreq	00107$
      000327 9E               [ 1]  661 	ld	a, xh
      000328 A1 85            [ 1]  662 	cp	a, #0x85
      00032A 27 1D            [ 1]  663 	jreq	00107$
      00032C 9E               [ 1]  664 	ld	a, xh
      00032D A1 86            [ 1]  665 	cp	a, #0x86
      00032F 27 18            [ 1]  666 	jreq	00107$
      000331 9E               [ 1]  667 	ld	a, xh
      000332 A1 87            [ 1]  668 	cp	a, #0x87
      000334 27 13            [ 1]  669 	jreq	00107$
      000336 89               [ 2]  670 	pushw	x
      000337 4B 02            [ 1]  671 	push	#0x02
      000339 4B 02            [ 1]  672 	push	#0x02
      00033B 4B 00            [ 1]  673 	push	#0x00
      00033D 4B 00            [ 1]  674 	push	#0x00
      00033F AEr00r0C         [ 2]  675 	ldw	x, #(___str_0+0)
      000342 CDr00r00         [ 4]  676 	call	_assert_failed
      000345 02               [ 1]  677 	rlwa	x
      000346 84               [ 1]  678 	pop	a
      000347 01               [ 1]  679 	rrwa	x
      000348 84               [ 1]  680 	pop	a
      000349                        681 00107$:
                                    682 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 518: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      000349 C6 50 C6         [ 1]  683 	ld	a, 0x50c6
                                    684 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 516: if (((uint8_t)CLK_Prescaler & (uint8_t)0x80) == 0x00) /* Bit7 = 0 means HSI divider */
      00034C 5D               [ 2]  685 	tnzw	x
      00034D 2B 14            [ 1]  686 	jrmi	00102$
                                    687 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 518: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_HSIDIV);
      00034F A4 E7            [ 1]  688 	and	a, #0xe7
      000351 C7 50 C6         [ 1]  689 	ld	0x50c6, a
                                    690 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 519: CLK->CKDIVR |= (uint8_t)((uint8_t)CLK_Prescaler & (uint8_t)CLK_CKDIVR_HSIDIV);
      000354 C6 50 C6         [ 1]  691 	ld	a, 0x50c6
      000357 6B 01            [ 1]  692 	ld	(0x01, sp), a
      000359 9E               [ 1]  693 	ld	a, xh
      00035A A4 18            [ 1]  694 	and	a, #0x18
      00035C 1A 01            [ 1]  695 	or	a, (0x01, sp)
      00035E C7 50 C6         [ 1]  696 	ld	0x50c6, a
      000361 20 12            [ 2]  697 	jra	00104$
      000363                        698 00102$:
                                    699 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 523: CLK->CKDIVR &= (uint8_t)(~CLK_CKDIVR_CPUDIV);
      000363 A4 F8            [ 1]  700 	and	a, #0xf8
      000365 C7 50 C6         [ 1]  701 	ld	0x50c6, a
                                    702 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 524: CLK->CKDIVR |= (uint8_t)((uint8_t)CLK_Prescaler & (uint8_t)CLK_CKDIVR_CPUDIV);
      000368 C6 50 C6         [ 1]  703 	ld	a, 0x50c6
      00036B 6B 01            [ 1]  704 	ld	(0x01, sp), a
      00036D 9E               [ 1]  705 	ld	a, xh
      00036E A4 07            [ 1]  706 	and	a, #0x07
      000370 1A 01            [ 1]  707 	or	a, (0x01, sp)
      000372 C7 50 C6         [ 1]  708 	ld	0x50c6, a
      000375                        709 00104$:
                                    710 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 526: }
      000375 84               [ 1]  711 	pop	a
      000376 81               [ 4]  712 	ret
                                    713 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 584: uint32_t CLK_GetClockFreq(void)
                                    714 ;	-----------------------------------------
                                    715 ;	 function CLK_GetClockFreq
                                    716 ;	-----------------------------------------
      000377                        717 _CLK_GetClockFreq:
      000377 52 04            [ 2]  718 	sub	sp, #4
                                    719 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 591: clocksource = (CLK_Source_TypeDef)CLK->CMSR;
      000379 C6 50 C3         [ 1]  720 	ld	a, 0x50c3
                                    721 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 593: if (clocksource == CLK_SOURCE_HSI)
      00037C 6B 04            [ 1]  722 	ld	(0x04, sp), a
      00037E A1 E1            [ 1]  723 	cp	a, #0xe1
      000380 26 26            [ 1]  724 	jrne	00105$
                                    725 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 595: tmp = (uint8_t)(CLK->CKDIVR & CLK_CKDIVR_HSIDIV);
      000382 C6 50 C6         [ 1]  726 	ld	a, 0x50c6
      000385 A4 18            [ 1]  727 	and	a, #0x18
                                    728 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 596: tmp = (uint8_t)(tmp >> 3);
      000387 44               [ 1]  729 	srl	a
      000388 44               [ 1]  730 	srl	a
      000389 44               [ 1]  731 	srl	a
                                    732 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 597: presc = HSIDivFactor[tmp];
      00038A 5F               [ 1]  733 	clrw	x
      00038B 97               [ 1]  734 	ld	xl, a
      00038C D6u00u00         [ 1]  735 	ld	a, (_HSIDivFactor+0, x)
                                    736 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 598: clockfrequency = HSI_VALUE / presc;
      00038F 5F               [ 1]  737 	clrw	x
      000390 97               [ 1]  738 	ld	xl, a
      000391 90 5F            [ 1]  739 	clrw	y
      000393 89               [ 2]  740 	pushw	x
      000394 90 89            [ 2]  741 	pushw	y
      000396 4B 00            [ 1]  742 	push	#0x00
      000398 4B 24            [ 1]  743 	push	#0x24
      00039A 4B F4            [ 1]  744 	push	#0xf4
      00039C 4B 00            [ 1]  745 	push	#0x00
      00039E CDr00r00         [ 4]  746 	call	__divulong
      0003A1 5B 08            [ 2]  747 	addw	sp, #8
      0003A3 51               [ 1]  748 	exgw	x, y
      0003A4 17 03            [ 2]  749 	ldw	(0x03, sp), y
      0003A6 20 17            [ 2]  750 	jra	00106$
      0003A8                        751 00105$:
                                    752 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 600: else if ( clocksource == CLK_SOURCE_LSI)
      0003A8 7B 04            [ 1]  753 	ld	a, (0x04, sp)
      0003AA A1 D2            [ 1]  754 	cp	a, #0xd2
      0003AC 26 09            [ 1]  755 	jrne	00102$
                                    756 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 602: clockfrequency = LSI_VALUE;
      0003AE AE F4 00         [ 2]  757 	ldw	x, #0xf400
      0003B1 1F 03            [ 2]  758 	ldw	(0x03, sp), x
      0003B3 5F               [ 1]  759 	clrw	x
      0003B4 5C               [ 1]  760 	incw	x
      0003B5 20 08            [ 2]  761 	jra	00106$
      0003B7                        762 00102$:
                                    763 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 606: clockfrequency = HSE_VALUE;
      0003B7 AE 24 00         [ 2]  764 	ldw	x, #0x2400
      0003BA 1F 03            [ 2]  765 	ldw	(0x03, sp), x
      0003BC AE 00 F4         [ 2]  766 	ldw	x, #0x00f4
      0003BF                        767 00106$:
                                    768 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 609: return((uint32_t)clockfrequency);
      0003BF 51               [ 1]  769 	exgw	x, y
      0003C0 1E 03            [ 2]  770 	ldw	x, (0x03, sp)
                                    771 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 610: }
      0003C2 5B 04            [ 2]  772 	addw	sp, #4
      0003C4 81               [ 4]  773 	ret
                                    774 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 653: FlagStatus CLK_GetFlagStatus(CLK_Flag_TypeDef CLK_FLAG)
                                    775 ;	-----------------------------------------
                                    776 ;	 function CLK_GetFlagStatus
                                    777 ;	-----------------------------------------
      0003C5                        778 _CLK_GetFlagStatus:
                                    779 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 660: assert_param(IS_CLK_FLAG_OK(CLK_FLAG));
      0003C5 90 93            [ 1]  780 	ldw	y, x
      0003C7 A3 01 10         [ 2]  781 	cpw	x, #0x0110
      0003CA 27 3C            [ 1]  782 	jreq	00119$
      0003CC A3 01 02         [ 2]  783 	cpw	x, #0x0102
      0003CF 27 37            [ 1]  784 	jreq	00119$
      0003D1 A3 02 02         [ 2]  785 	cpw	x, #0x0202
      0003D4 27 32            [ 1]  786 	jreq	00119$
      0003D6 A3 03 08         [ 2]  787 	cpw	x, #0x0308
      0003D9 27 2D            [ 1]  788 	jreq	00119$
      0003DB A3 03 01         [ 2]  789 	cpw	x, #0x0301
      0003DE 27 28            [ 1]  790 	jreq	00119$
      0003E0 A3 04 08         [ 2]  791 	cpw	x, #0x0408
      0003E3 27 23            [ 1]  792 	jreq	00119$
      0003E5 A3 04 02         [ 2]  793 	cpw	x, #0x0402
      0003E8 27 1E            [ 1]  794 	jreq	00119$
      0003EA A3 05 04         [ 2]  795 	cpw	x, #0x0504
      0003ED 27 19            [ 1]  796 	jreq	00119$
      0003EF A3 05 02         [ 2]  797 	cpw	x, #0x0502
      0003F2 27 14            [ 1]  798 	jreq	00119$
      0003F4 89               [ 2]  799 	pushw	x
      0003F5 90 89            [ 2]  800 	pushw	y
      0003F7 4B 94            [ 1]  801 	push	#0x94
      0003F9 4B 02            [ 1]  802 	push	#0x02
      0003FB 4B 00            [ 1]  803 	push	#0x00
      0003FD 4B 00            [ 1]  804 	push	#0x00
      0003FF AEr00r0C         [ 2]  805 	ldw	x, #(___str_0+0)
      000402 CDr00r00         [ 4]  806 	call	_assert_failed
      000405 90 85            [ 2]  807 	popw	y
      000407 85               [ 2]  808 	popw	x
      000408                        809 00119$:
                                    810 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 663: statusreg = (uint16_t)((uint16_t)CLK_FLAG & (uint16_t)0xFF00);
      000408 4F               [ 1]  811 	clr	a
                                    812 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 666: if (statusreg == 0x0100) /* The flag to check is in ICKRregister */
      000409 97               [ 1]  813 	ld	xl, a
      00040A A3 01 00         [ 2]  814 	cpw	x, #0x0100
      00040D 26 05            [ 1]  815 	jrne	00111$
                                    816 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 668: tmpreg = CLK->ICKR;
      00040F C6 50 C0         [ 1]  817 	ld	a, 0x50c0
      000412 20 21            [ 2]  818 	jra	00112$
      000414                        819 00111$:
                                    820 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 670: else if (statusreg == 0x0200) /* The flag to check is in ECKRregister */
      000414 A3 02 00         [ 2]  821 	cpw	x, #0x0200
      000417 26 05            [ 1]  822 	jrne	00108$
                                    823 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 672: tmpreg = CLK->ECKR;
      000419 C6 50 C1         [ 1]  824 	ld	a, 0x50c1
      00041C 20 17            [ 2]  825 	jra	00112$
      00041E                        826 00108$:
                                    827 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 674: else if (statusreg == 0x0300) /* The flag to check is in SWIC register */
      00041E A3 03 00         [ 2]  828 	cpw	x, #0x0300
      000421 26 05            [ 1]  829 	jrne	00105$
                                    830 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 676: tmpreg = CLK->SWCR;
      000423 C6 50 C5         [ 1]  831 	ld	a, 0x50c5
      000426 20 0D            [ 2]  832 	jra	00112$
      000428                        833 00105$:
                                    834 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 678: else if (statusreg == 0x0400) /* The flag to check is in CSS register */
      000428 A3 04 00         [ 2]  835 	cpw	x, #0x0400
      00042B 26 05            [ 1]  836 	jrne	00102$
                                    837 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 680: tmpreg = CLK->CSSR;
      00042D C6 50 C8         [ 1]  838 	ld	a, 0x50c8
      000430 20 03            [ 2]  839 	jra	00112$
      000432                        840 00102$:
                                    841 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 684: tmpreg = CLK->CCOR;
      000432 C6 50 C9         [ 1]  842 	ld	a, 0x50c9
      000435                        843 00112$:
                                    844 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 687: if ((tmpreg & (uint8_t)CLK_FLAG) != (uint8_t)RESET)
      000435 93               [ 1]  845 	ldw	x, y
      000436 89               [ 2]  846 	pushw	x
      000437 14 02            [ 1]  847 	and	a, (2, sp)
      000439 85               [ 2]  848 	popw	x
      00043A 4D               [ 1]  849 	tnz	a
      00043B 27 03            [ 1]  850 	jreq	00114$
                                    851 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 689: bitstatus = SET;
      00043D A6 01            [ 1]  852 	ld	a, #0x01
      00043F 81               [ 4]  853 	ret
      000440                        854 00114$:
                                    855 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 693: bitstatus = RESET;
      000440 4F               [ 1]  856 	clr	a
                                    857 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 697: return((FlagStatus)bitstatus);
                                    858 ;	C:\Users\disan\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_clk.c: 698: }
      000441 81               [ 4]  859 	ret
                                    860 	.area CODE
                                    861 	.area CONST
      000000                        862 _HSIDivFactor:
      000000 01                     863 	.db #0x01	; 1
      000001 02                     864 	.db #0x02	; 2
      000002 04                     865 	.db #0x04	; 4
      000003 08                     866 	.db #0x08	; 8
      000004                        867 _CLKPrescTable:
      000004 01                     868 	.db #0x01	; 1
      000005 02                     869 	.db #0x02	; 2
      000006 04                     870 	.db #0x04	; 4
      000007 08                     871 	.db #0x08	; 8
      000008 0A                     872 	.db #0x0a	; 10
      000009 10                     873 	.db #0x10	; 16
      00000A 14                     874 	.db #0x14	; 20
      00000B 28                     875 	.db #0x28	; 40
                                    876 	.area CONST
      00000C                        877 ___str_0:
      00000C 43 3A                  878 	.ascii "C:"
      00000E 5C                     879 	.db 0x5c
      00000F 55 73 65 72 73         880 	.ascii "Users"
      000014 5C                     881 	.db 0x5c
      000015 64 69 73 61 6E         882 	.ascii "disan"
      00001A 5C                     883 	.db 0x5c
      00001B 2E 70 6C 61 74 66 6F   884 	.ascii ".platformio"
             72 6D 69 6F
      000026 5C                     885 	.db 0x5c
      000027 70 61 63 6B 61 67 65   886 	.ascii "packages"
             73
      00002F 5C                     887 	.db 0x5c
      000030 66 72 61 6D 65 77 6F   888 	.ascii "framework-ststm8spl"
             72 6B 2D 73 74 73 74
             6D 38 73 70 6C
      000043 5C                     889 	.db 0x5c
      000044 4C 69 62 72 61 72 69   890 	.ascii "Libraries"
             65 73
      00004D 5C                     891 	.db 0x5c
      00004E 53 54 4D 38 53 5F 53   892 	.ascii "STM8S_StdPeriph_Driver"
             74 64 50 65 72 69 70
             68 5F 44 72 69 76 65
             72
      000064 5C                     893 	.db 0x5c
      000065 73 72 63               894 	.ascii "src"
      000068 5C                     895 	.db 0x5c
      000069 73 74 6D 38 73 5F 63   896 	.ascii "stm8s_clk.c"
             6C 6B 2E 63
      000074 00                     897 	.db 0x00
                                    898 	.area CODE
                                    899 	.area INITIALIZER
                                    900 	.area CABS (ABS)
